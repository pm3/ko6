/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 6);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/*!****************************************************************************************!*\
  !*** c:/Users/pm/Downloads/react/js-framework-benchmark/ko6/src/tko/tko.observable.js ***!
  \****************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.extenders = exports.applyExtenders = exports.valuesArePrimitiveAndEqual = exports.deferUpdates = exports.toJSON = exports.toJS = exports.arrayChangeEventName = exports.trackArrayChanges = exports.observableArray = exports.subscribable = exports.isSubscribable = exports.isWritableObservable = exports.isWriteableObservable = exports.peek = exports.unwrap = exports.isObservable = exports.observable = exports.dependencyDetection = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _tkoUtils = __webpack_require__(/*! ./tko.utils.js */ 1);\n\n//\n//  Defer Updates\n//  ===\n//\nfunction deferUpdates(target) {\n  if (!target._deferUpdates) {\n    target._deferUpdates = true;\n    target.limit(function (callback) {\n      var handle;\n      return function () {\n        tasks.cancel(handle);\n        handle = tasks.schedule(callback);\n        target.notifySubscribers(undefined, 'dirty');\n      };\n    });\n  }\n}\n\n//\n// Observable extenders\n// ---\n//\nvar primitiveTypes = {\n  'undefined': 1, 'boolean': 1, 'number': 1, 'string': 1\n};\n\nfunction valuesArePrimitiveAndEqual(a, b) {\n  var oldValueIsPrimitive = a === null || (typeof a === 'undefined' ? 'undefined' : _typeof(a)) in primitiveTypes;\n  return oldValueIsPrimitive ? a === b : false;\n}\n\nfunction applyExtenders(requestedExtenders) {\n  var target = this;\n  if (requestedExtenders) {\n    (0, _tkoUtils.objectForEach)(requestedExtenders, function (key, value) {\n      var extenderHandler = extenders[key];\n      if (typeof extenderHandler === 'function') {\n        target = extenderHandler(target, value) || target;\n      } else {\n        _tkoUtils.options.onError(new Error('Extender not found: ' + key));\n      }\n    });\n  }\n  return target;\n}\n\n/*\n                --- DEFAULT EXTENDERS ---\n */\n\n// Change when notifications are published.\nfunction notify(target, notifyWhen) {\n  target.equalityComparer = notifyWhen == 'always' ? null : // null equalityComparer means to always notify\n  valuesArePrimitiveAndEqual;\n}\n\nfunction deferred(target, option) {\n  if (option !== true) {\n    throw new Error('The \\'deferred\\' extender only accepts the value \\'true\\', because it is not supported to turn deferral off once enabled.');\n  }\n  deferUpdates(target);\n}\n\nfunction rateLimit(target, options$$1) {\n  var timeout, method, limitFunction;\n\n  if (typeof options$$1 === 'number') {\n    timeout = options$$1;\n  } else {\n    timeout = options$$1.timeout;\n    method = options$$1.method;\n  }\n\n  // rateLimit supersedes deferred updates\n  target._deferUpdates = false;\n\n  limitFunction = method == 'notifyWhenChangesStop' ? _tkoUtils.debounce : _tkoUtils.throttle;\n\n  target.limit(function (callback) {\n    return limitFunction(callback, timeout);\n  });\n}\n\nvar extenders = {\n  notify: notify,\n  deferred: deferred,\n  rateLimit: rateLimit\n};\n\n/* eslint no-cond-assign: 0 */\nfunction subscription(target, callback, disposeCallback) {\n  this._target = target;\n  this.callback = callback;\n  this.disposeCallback = disposeCallback;\n  this.isDisposed = false;\n  window.count++;\n}\n\nsubscription.prototype.dispose = function () {\n  this.isDisposed = true;\n  this.disposeCallback();\n  window.count--;\n};\n\nfunction subscribable() {\n  (0, _tkoUtils.setPrototypeOfOrExtend)(this, ko_subscribable_fn);\n  ko_subscribable_fn.init(this);\n}\n\nvar defaultEvent = 'change';\n\nvar ko_subscribable_fn = {\n  init: function init(instance) {\n    instance._subscriptions = {};\n    instance._versionNumber = 1;\n  },\n  subscribe: function subscribe(callback, callbackTarget, event) {\n    var self = this;\n\n    event = event || defaultEvent;\n    var boundCallback = callbackTarget ? callback.bind(callbackTarget) : callback;\n\n    var subscriptionInstance = new subscription(self, boundCallback, function () {\n      (0, _tkoUtils.arrayRemoveItem)(self._subscriptions[event], subscriptionInstance);\n      if (self.afterSubscriptionRemove) {\n        self.afterSubscriptionRemove(event);\n      }\n    });\n\n    if (self.beforeSubscriptionAdd) {\n      self.beforeSubscriptionAdd(event);\n    }\n\n    if (!self._subscriptions[event]) {\n      self._subscriptions[event] = [];\n    }\n    self._subscriptions[event].push(subscriptionInstance);\n\n    return subscriptionInstance;\n  },\n  notifySubscribers: function notifySubscribers(valueToNotify, event) {\n    event = event || defaultEvent;\n    if (event === defaultEvent) {\n      this.updateVersion();\n    }\n    if (this.hasSubscriptionsForEvent(event)) {\n      try {\n        begin(); // Begin suppressing dependency detection (by setting the top frame to undefined)\n        for (var a = this._subscriptions[event].slice(0), i = 0, subscriptionInstance; subscriptionInstance = a[i]; ++i) {\n          // In case a subscription was disposed during the arrayForEach cycle, check\n          // for isDisposed on each subscription before invoking its callback\n          if (!subscriptionInstance.isDisposed) {\n            subscriptionInstance.callback(valueToNotify);\n          }\n        }\n      } finally {\n        end(); // End suppressing dependency detection\n      }\n    }\n  },\n  getVersion: function getVersion() {\n    return this._versionNumber;\n  },\n  hasChanged: function hasChanged(versionToCheck) {\n    return this.getVersion() !== versionToCheck;\n  },\n  updateVersion: function updateVersion() {\n    ++this._versionNumber;\n  },\n  hasSubscriptionsForEvent: function hasSubscriptionsForEvent(event) {\n    return this._subscriptions[event] && this._subscriptions[event].length;\n  },\n  getSubscriptionsCount: function getSubscriptionsCount(event) {\n    if (event) {\n      return this._subscriptions[event] && this._subscriptions[event].length || 0;\n    } else {\n      var total = 0;\n      (0, _tkoUtils.objectForEach)(this._subscriptions, function (eventName, subscriptions) {\n        if (eventName !== 'dirty') {\n          total += subscriptions.length;\n        }\n      });\n      return total;\n    }\n  },\n  isDifferent: function isDifferent(oldValue, newValue) {\n    return !this.equalityComparer || !this.equalityComparer(oldValue, newValue);\n  },\n  once: function once(cb) {\n    var subs = this.subscribe(function (nv) {\n      subs.dispose();\n      cb(nv);\n    });\n  },\n  when: function when(test, returnValue) {\n    var _this = this;\n\n    var current = this.peek();\n    var givenRv = arguments.length > 1;\n    var testFn = typeof test === 'function' ? test : function (v) {\n      return v === test;\n    };\n    if (testFn(current)) {\n      return _tkoUtils.options.Promise.resolve(givenRv ? returnValue : current);\n    }\n    return new _tkoUtils.options.Promise(function (resolve, reject) {\n      var subs = _this.subscribe(function (newValue) {\n        if (testFn(newValue)) {\n          subs.dispose();\n          resolve(givenRv ? returnValue : newValue);\n        }\n      });\n    });\n  },\n  yet: function yet(test) {\n    var testFn = typeof test === 'function' ? test : function (v) {\n      return v === test;\n    };\n    var negated = function negated(v) {\n      return !testFn(v);\n    };\n\n    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    return this.when.apply(this, [negated].concat(args));\n  },\n  next: function next() {\n    var _this2 = this;\n\n    return new Promise(function (resolve) {\n      return _this2.once(resolve);\n    });\n  },\n\n\n  extend: applyExtenders\n};\n\n// For browsers that support proto assignment, we overwrite the prototype of each\n// observable instance. Since observables are functions, we need Function.prototype\n// to still be in the prototype chain.\nif (_tkoUtils.canSetPrototype) {\n  (0, _tkoUtils.setPrototypeOf)(ko_subscribable_fn, Function.prototype);\n}\n\nsubscribable.fn = ko_subscribable_fn;\n\nfunction isSubscribable(instance) {\n  return instance != null && typeof instance.subscribe === 'function' && typeof instance.notifySubscribers === 'function';\n}\n\n//\n// dependencyDetection\n// ---\n//\n// In KO 3.x, dependencyDetection was also known as computedContext.\n//\nvar outerFrames = [];\nvar currentFrame = void 0;\nvar lastId = 0;\n\n// Return a unique ID that can be assigned to an observable for dependency tracking.\n// Theoretically, you could eventually overflow the number storage size, resulting\n// in duplicate IDs. But in JavaScript, the largest exact integral value is 2^53\n// or 9,007,199,254,740,992. If you created 1,000,000 IDs per second, it would\n// take over 285 years to reach that number.\n// Reference http://blog.vjeux.com/2010/javascript/javascript-max_int-number-limits.html\nfunction getId() {\n  return ++lastId;\n}\n\nfunction begin(options$$1) {\n  outerFrames.push(currentFrame);\n  currentFrame = options$$1;\n}\n\nfunction end() {\n  currentFrame = outerFrames.pop();\n}\n\nfunction registerDependency(subscribable$$1) {\n  if (currentFrame) {\n    if (!isSubscribable(subscribable$$1)) {\n      throw new Error('Only subscribable things can act as dependencies');\n    }\n    currentFrame.callback.call(currentFrame.callbackTarget, subscribable$$1, subscribable$$1._id || (subscribable$$1._id = getId()));\n  }\n}\n\nfunction ignore(callback, callbackTarget, callbackArgs) {\n  try {\n    begin();\n    return callback.apply(callbackTarget, callbackArgs || []);\n  } finally {\n    end();\n  }\n}\n\nfunction getDependenciesCount() {\n  if (currentFrame) {\n    return currentFrame.computed.getDependenciesCount();\n  }\n}\n\nfunction isInitial() {\n  if (currentFrame) {\n    return currentFrame.isInitial;\n  }\n}\n\nvar dependencyDetection = Object.freeze({\n  begin: begin,\n  end: end,\n  registerDependency: registerDependency,\n  ignore: ignore,\n  getDependenciesCount: getDependenciesCount,\n  isInitial: isInitial,\n  ignoreDependencies: ignore\n});\n\n//\n//  Observable values\n//  ---\n//\nvar observableLatestValue = (0, _tkoUtils.createSymbolOrString)('_latestValue');\n\nfunction observable(initialValue) {\n  function Observable() {\n    if (arguments.length > 0) {\n      // Write\n      // Ignore writes if the value hasn't changed\n      if (Observable.isDifferent(Observable[observableLatestValue], arguments[0])) {\n        Observable.valueWillMutate();\n        Observable[observableLatestValue] = arguments[0];\n        Observable.valueHasMutated();\n      }\n      return this; // Permits chained assignments\n    } else {\n      // Read\n      registerDependency(Observable); // The caller only needs to be notified of changes if they did a \"read\" operation\n      return Observable[observableLatestValue];\n    }\n  }\n\n  Observable[observableLatestValue] = initialValue;\n\n  // Inherit from 'subscribable'\n  if (!_tkoUtils.canSetPrototype) {\n    // 'subscribable' won't be on the prototype chain unless we put it there directly\n    (0, _tkoUtils.extend)(Observable, subscribable.fn);\n  }\n  subscribable.fn.init(Observable);\n\n  // Inherit from 'observable'\n  (0, _tkoUtils.setPrototypeOfOrExtend)(Observable, observable.fn);\n\n  if (_tkoUtils.options.deferUpdates) {\n    deferUpdates(Observable);\n  }\n\n  return Observable;\n}\n\n// Define prototype for observables\nobservable.fn = {\n  equalityComparer: valuesArePrimitiveAndEqual,\n  peek: function peek() {\n    return this[observableLatestValue];\n  },\n  valueHasMutated: function valueHasMutated() {\n    this.notifySubscribers(this[observableLatestValue]);\n  },\n  valueWillMutate: function valueWillMutate() {\n    this.notifySubscribers(this[observableLatestValue], 'beforeChange');\n  },\n  then: function then(res, rej) {\n    try {\n      res(this());\n    } catch (e) {\n      rej(e);\n    }\n  }\n};\n\n// Moved out of \"limit\" to avoid the extra closure\nfunction limitNotifySubscribers(value, event) {\n  if (!event || event === defaultEvent) {\n    this._limitChange(value);\n  } else if (event === 'beforeChange') {\n    this._limitBeforeChange(value);\n  } else {\n    this._origNotifySubscribers(value, event);\n  }\n}\n\n// Add `limit` function to the subscribable prototype\nsubscribable.fn.limit = function limit(limitFunction) {\n  var self = this;\n  var selfIsObservable = isObservable(self);\n  var beforeChange = 'beforeChange';\n  var ignoreBeforeChange, previousValue, pendingValue;\n\n  if (!self._origNotifySubscribers) {\n    self._origNotifySubscribers = self.notifySubscribers;\n    self.notifySubscribers = limitNotifySubscribers;\n  }\n\n  var finish = limitFunction(function () {\n    self._notificationIsPending = false;\n\n    // If an observable provided a reference to itself, access it to get the latest value.\n    // This allows computed observables to delay calculating their value until needed.\n    if (selfIsObservable && pendingValue === self) {\n      pendingValue = self();\n    }\n    ignoreBeforeChange = false;\n    if (self.isDifferent(previousValue, pendingValue)) {\n      self._origNotifySubscribers(previousValue = pendingValue);\n    }\n  });\n\n  self._limitChange = function (value) {\n    self._notificationIsPending = ignoreBeforeChange = true;\n    pendingValue = value;\n    finish();\n  };\n  self._limitBeforeChange = function (value) {\n    if (!ignoreBeforeChange) {\n      previousValue = value;\n      self._origNotifySubscribers(value, beforeChange);\n    }\n  };\n};\n\n// Note that for browsers that don't support proto assignment, the\n// inheritance chain is created manually in the observable constructor\nif (_tkoUtils.canSetPrototype) {\n  (0, _tkoUtils.setPrototypeOf)(observable.fn, subscribable.fn);\n}\n\nvar protoProperty = observable.protoProperty = _tkoUtils.options.protoProperty;\nobservable.fn[protoProperty] = observable;\n\nfunction isObservable(instance) {\n  return (0, _tkoUtils.hasPrototype)(instance, observable);\n}\n\nfunction unwrap(value) {\n  return isObservable(value) ? value() : value;\n}\n\nfunction peek(value) {\n  return isObservable(value) ? value.peek() : value;\n}\n\nfunction isWriteableObservable(instance) {\n  // Observable\n  if (typeof instance === 'function' && instance[protoProperty] === observable) {\n    return true;\n  }\n  // Writeable dependent observable\n  if (typeof instance === 'function' && /* && (instance[protoProperty] === ko.dependentObservable) */instance.hasWriteFunction) {\n    return true;\n  }\n  // Anything else\n  return false;\n}\n\n//\n// Observable Array - Change Tracking Extender\n// ---\n//\n/* eslint no-fallthrough: 0*/\n\nvar arrayChangeEventName = 'arrayChange';\n\nfunction trackArrayChanges(target, options$$1) {\n  // Use the provided options--each call to trackArrayChanges overwrites the previously set options\n  target.compareArrayOptions = {};\n  if (options$$1 && (typeof options$$1 === 'undefined' ? 'undefined' : _typeof(options$$1)) == \"object\") {\n    (0, _tkoUtils.extend)(target.compareArrayOptions, options$$1);\n  }\n  target.compareArrayOptions.sparse = true;\n\n  // Only modify the target observable once\n  if (target.cacheDiffForKnownOperation) {\n    return;\n  }\n  var trackingChanges = false,\n      cachedDiff = null,\n      arrayChangeSubscription,\n      pendingNotifications = 0,\n      underlyingBeforeSubscriptionAddFunction = target.beforeSubscriptionAdd,\n      underlyingAfterSubscriptionRemoveFunction = target.afterSubscriptionRemove;\n\n  // Watch \"subscribe\" calls, and for array change events, ensure change tracking is enabled\n  target.beforeSubscriptionAdd = function (event) {\n    if (underlyingBeforeSubscriptionAddFunction) underlyingBeforeSubscriptionAddFunction.call(target, event);\n    if (event === arrayChangeEventName) {\n      trackChanges();\n    }\n  };\n\n  // Watch \"dispose\" calls, and for array change events, ensure change tracking is disabled when all are disposed\n  target.afterSubscriptionRemove = function (event) {\n    if (underlyingAfterSubscriptionRemoveFunction) underlyingAfterSubscriptionRemoveFunction.call(target, event);\n    if (event === arrayChangeEventName && !target.hasSubscriptionsForEvent(arrayChangeEventName)) {\n      if (arrayChangeSubscription) {\n        arrayChangeSubscription.dispose();\n      }\n      arrayChangeSubscription = null;\n      trackingChanges = false;\n    }\n  };\n\n  function trackChanges() {\n    // Calling 'trackChanges' multiple times is the same as calling it once\n    if (trackingChanges) {\n      return;\n    }\n\n    trackingChanges = true;\n\n    // Intercept \"notifySubscribers\" to track how many times it was called.\n    var underlyingNotifySubscribersFunction = target['notifySubscribers'];\n    target['notifySubscribers'] = function (valueToNotify, event) {\n      if (!event || event === defaultEvent) {\n        ++pendingNotifications;\n      }\n      return underlyingNotifySubscribersFunction.apply(this, arguments);\n    };\n\n    // Each time the array changes value, capture a clone so that on the next\n    // change it's possible to produce a diff\n    var previousContents = [].concat(target.peek() || []);\n    cachedDiff = null;\n    arrayChangeSubscription = target.subscribe(function (currentContents) {\n      // Make a copy of the current contents and ensure it's an array\n      currentContents = [].concat(currentContents || []);\n\n      // Compute the diff and issue notifications, but only if someone is listening\n      if (target.hasSubscriptionsForEvent(arrayChangeEventName)) {\n        var changes = getChanges(previousContents, currentContents);\n      }\n\n      // Eliminate references to the old, removed items, so they can be GCed\n      previousContents = currentContents;\n      cachedDiff = null;\n      pendingNotifications = 0;\n\n      if (changes && changes.length) {\n        target['notifySubscribers'](changes, arrayChangeEventName);\n      }\n    });\n  }\n\n  function getChanges(previousContents, currentContents) {\n    // We try to re-use cached diffs.\n    // The scenarios where pendingNotifications > 1 are when using rate-limiting or the Deferred Updates\n    // plugin, which without this check would not be compatible with arrayChange notifications. Normally,\n    // notifications are issued immediately so we wouldn't be queueing up more than one.\n    if (!cachedDiff || pendingNotifications > 1) {\n      cachedDiff = trackArrayChanges.compareArrays(previousContents, currentContents, target.compareArrayOptions);\n    }\n\n    return cachedDiff;\n  }\n\n  target.cacheDiffForKnownOperation = function (rawArray, operationName, args) {\n    var index, argsIndex;\n    // Only run if we're currently tracking changes for this observable array\n    // and there aren't any pending deferred notifications.\n    if (!trackingChanges || pendingNotifications) {\n      return;\n    }\n    var diff = [],\n        arrayLength = rawArray.length,\n        argsLength = args.length,\n        offset = 0;\n\n    function pushDiff(status, value, index) {\n      return diff[diff.length] = { 'status': status, 'value': value, 'index': index };\n    }\n    switch (operationName) {\n      case 'push':\n        offset = arrayLength;\n      case 'unshift':\n        for (index = 0; index < argsLength; index++) {\n          pushDiff('added', args[index], offset + index);\n        }\n        break;\n\n      case 'pop':\n        offset = arrayLength - 1;\n      case 'shift':\n        if (arrayLength) {\n          pushDiff('deleted', rawArray[offset], offset);\n        }\n        break;\n\n      case 'splice':\n        // Negative start index means 'from end of array'. After that we clamp to [0...arrayLength].\n        // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/splice\n        var startIndex = Math.min(Math.max(0, args[0] < 0 ? arrayLength + args[0] : args[0]), arrayLength),\n            endDeleteIndex = argsLength === 1 ? arrayLength : Math.min(startIndex + (args[1] || 0), arrayLength),\n            endAddIndex = startIndex + argsLength - 2,\n            endIndex = Math.max(endDeleteIndex, endAddIndex),\n            additions = [],\n            deletions = [];\n        for (index = startIndex, argsIndex = 2; index < endIndex; ++index, ++argsIndex) {\n          if (index < endDeleteIndex) deletions.push(pushDiff('deleted', rawArray[index], index));\n          if (index < endAddIndex) additions.push(pushDiff('added', args[argsIndex], index));\n        }\n        (0, _tkoUtils.findMovesInArrayComparison)(deletions, additions);\n        break;\n\n      default:\n        return;\n    }\n    cachedDiff = diff;\n  };\n}\n\n// Expose compareArrays for testing.\ntrackArrayChanges.compareArrays = _tkoUtils.compareArrays;\n\n// Add the trackArrayChanges extender so we can use\n// obs.extend({ trackArrayChanges: true })\nextenders.trackArrayChanges = trackArrayChanges;\n\n//\n// Observable Arrays\n// ===\n//\nfunction observableArray(initialValues) {\n  initialValues = initialValues || [];\n\n  if ((typeof initialValues === 'undefined' ? 'undefined' : _typeof(initialValues)) !== 'object' || !('length' in initialValues)) {\n    throw new Error('The argument passed when initializing an observable array must be an array, or null, or undefined.');\n  }\n\n  var result = observable(initialValues);\n  (0, _tkoUtils.setPrototypeOfOrExtend)(result, observableArray.fn);\n  trackArrayChanges(result);\n  // ^== result.extend({ trackArrayChanges: true })\n  return result;\n}\n\nobservableArray.fn = {\n  remove: function remove(valueOrPredicate) {\n    var underlyingArray = this.peek();\n    var removedValues = [];\n    var predicate = typeof valueOrPredicate === 'function' && !isObservable(valueOrPredicate) ? valueOrPredicate : function (value) {\n      return value === valueOrPredicate;\n    };\n    for (var i = 0; i < underlyingArray.length; i++) {\n      var value = underlyingArray[i];\n      if (predicate(value)) {\n        if (removedValues.length === 0) {\n          this.valueWillMutate();\n        }\n        removedValues.push(value);\n        underlyingArray.splice(i, 1);\n        i--;\n      }\n    }\n    if (removedValues.length) {\n      this.valueHasMutated();\n    }\n    return removedValues;\n  },\n\n  removeAll: function removeAll(arrayOfValues) {\n    // If you passed zero args, we remove everything\n    if (arrayOfValues === undefined) {\n      var underlyingArray = this.peek();\n      var allValues = underlyingArray.slice(0);\n      this.valueWillMutate();\n      underlyingArray.splice(0, underlyingArray.length);\n      this.valueHasMutated();\n      return allValues;\n    }\n    // If you passed an arg, we interpret it as an array of entries to remove\n    if (!arrayOfValues) {\n      return [];\n    }\n    return this['remove'](function (value) {\n      return (0, _tkoUtils.arrayIndexOf)(arrayOfValues, value) >= 0;\n    });\n  },\n\n  destroy: function destroy(valueOrPredicate) {\n    var underlyingArray = this.peek();\n    var predicate = typeof valueOrPredicate === 'function' && !isObservable(valueOrPredicate) ? valueOrPredicate : function (value) {\n      return value === valueOrPredicate;\n    };\n    this.valueWillMutate();\n    for (var i = underlyingArray.length - 1; i >= 0; i--) {\n      var value = underlyingArray[i];\n      if (predicate(value)) {\n        underlyingArray[i]['_destroy'] = true;\n      }\n    }\n    this.valueHasMutated();\n  },\n\n  destroyAll: function destroyAll(arrayOfValues) {\n    // If you passed zero args, we destroy everything\n    if (arrayOfValues === undefined) {\n      return this.destroy(function () {\n        return true;\n      });\n    }\n\n    // If you passed an arg, we interpret it as an array of entries to destroy\n    if (!arrayOfValues) {\n      return [];\n    }\n    return this.destroy(function (value) {\n      return (0, _tkoUtils.arrayIndexOf)(arrayOfValues, value) >= 0;\n    });\n  },\n\n  indexOf: function indexOf(item) {\n    var underlyingArray = this();\n    return (0, _tkoUtils.arrayIndexOf)(underlyingArray, item);\n  },\n\n  replace: function replace(oldItem, newItem) {\n    var index = this.indexOf(oldItem);\n    if (index >= 0) {\n      this.valueWillMutate();\n      this.peek()[index] = newItem;\n      this.valueHasMutated();\n    }\n  }\n};\n\n// Note that for browsers that don't support proto assignment, the\n// inheritance chain is created manually in the ko.observableArray constructor\nif (_tkoUtils.canSetPrototype) {\n  (0, _tkoUtils.setPrototypeOf)(observableArray.fn, observable.fn);\n}\n\n// Populate ko.observableArray.fn with read/write functions from native arrays\n// Important: Do not add any additional functions here that may reasonably be used to *read* data from the array\n// because we'll eval them without causing subscriptions, so ko.computed output could end up getting stale\n(0, _tkoUtils.arrayForEach)(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function (methodName) {\n  observableArray.fn[methodName] = function () {\n    // Use \"peek\" to avoid creating a subscription in any computed that we're executing in the context of\n    // (for consistency with mutating regular observables)\n    var underlyingArray = this.peek();\n    this.valueWillMutate();\n    this.cacheDiffForKnownOperation(underlyingArray, methodName, arguments);\n    var methodCallResult = underlyingArray[methodName].apply(underlyingArray, arguments);\n    this.valueHasMutated();\n    // The native sort and reverse methods return a reference to the array, but it makes more sense to return the observable array instead.\n    return methodCallResult === underlyingArray ? this : methodCallResult;\n  };\n});\n\n// Populate ko.observableArray.fn with read-only functions from native arrays\n(0, _tkoUtils.arrayForEach)(['slice'], function (methodName) {\n  observableArray.fn[methodName] = function () {\n    var underlyingArray = this();\n    return underlyingArray[methodName].apply(underlyingArray, arguments);\n  };\n});\n\n//\n// Helpers\n// ---\n// toJS & toJSON\n//\nvar maxNestedObservableDepth = 10; // Escape the (unlikely) pathalogical case where an observable's current value is itself (or similar reference cycle)\n\nfunction toJS(rootObject) {\n  if (arguments.length == 0) throw new Error(\"When calling ko.toJS, pass the object you want to convert.\");\n\n  // We just unwrap everything at every level in the object graph\n  return mapJsObjectGraph(rootObject, function (valueToMap) {\n    // Loop because an observable's value might in turn be another observable wrapper\n    for (var i = 0; isObservable(valueToMap) && i < maxNestedObservableDepth; i++) {\n      valueToMap = valueToMap();\n    }return valueToMap;\n  });\n}\n\nfunction toJSON(rootObject, replacer, space) {\n  // replacer and space are optional\n  var plainJavaScriptObject = toJS(rootObject);\n  return (0, _tkoUtils.stringifyJson)(plainJavaScriptObject, replacer, space);\n}\n\nfunction mapJsObjectGraph(rootObject, mapInputCallback, visitedObjects) {\n  visitedObjects = visitedObjects || new objectLookup();\n\n  rootObject = mapInputCallback(rootObject);\n  var canHaveProperties = (typeof rootObject === 'undefined' ? 'undefined' : _typeof(rootObject)) == \"object\" && rootObject !== null && rootObject !== undefined && !(rootObject instanceof RegExp) && !(rootObject instanceof Date) && !(rootObject instanceof String) && !(rootObject instanceof Number) && !(rootObject instanceof Boolean);\n  if (!canHaveProperties) return rootObject;\n\n  var outputProperties = rootObject instanceof Array ? [] : {};\n  visitedObjects.save(rootObject, outputProperties);\n\n  visitPropertiesOrArrayEntries(rootObject, function (indexer) {\n    var propertyValue = mapInputCallback(rootObject[indexer]);\n\n    switch (typeof propertyValue === 'undefined' ? 'undefined' : _typeof(propertyValue)) {\n      case \"boolean\":\n      case \"number\":\n      case \"string\":\n      case \"function\":\n        outputProperties[indexer] = propertyValue;\n        break;\n      case \"object\":\n      case \"undefined\":\n        var previouslyMappedValue = visitedObjects.get(propertyValue);\n        outputProperties[indexer] = previouslyMappedValue !== undefined ? previouslyMappedValue : mapJsObjectGraph(propertyValue, mapInputCallback, visitedObjects);\n        break;\n    }\n  });\n\n  return outputProperties;\n}\n\nfunction visitPropertiesOrArrayEntries(rootObject, visitorCallback) {\n  if (rootObject instanceof Array) {\n    for (var i = 0; i < rootObject.length; i++) {\n      visitorCallback(i);\n    } // For arrays, also respect toJSON property for custom mappings (fixes #278)\n    if (typeof rootObject['toJSON'] == 'function') visitorCallback('toJSON');\n  } else {\n    for (var propertyName in rootObject) {\n      visitorCallback(propertyName);\n    }\n  }\n}\n\nfunction objectLookup() {\n  this.keys = [];\n  this.values = [];\n}\n\nobjectLookup.prototype = {\n  constructor: objectLookup,\n  save: function save(key, value) {\n    var existingIndex = (0, _tkoUtils.arrayIndexOf)(this.keys, key);\n    if (existingIndex >= 0) this.values[existingIndex] = value;else {\n      this.keys.push(key);\n      this.values.push(value);\n    }\n  },\n  get: function get(key) {\n    var existingIndex = (0, _tkoUtils.arrayIndexOf)(this.keys, key);\n    return existingIndex >= 0 ? this.values[existingIndex] : undefined;\n  }\n};\n\n//\n// Observables.\n// ---\n//\n// The following are added to the root `[t]ko` object.\n//\n\nexports.dependencyDetection = dependencyDetection;\nexports.observable = observable;\nexports.isObservable = isObservable;\nexports.unwrap = unwrap;\nexports.peek = peek;\nexports.isWriteableObservable = isWriteableObservable;\nexports.isWritableObservable = isWriteableObservable;\nexports.isSubscribable = isSubscribable;\nexports.subscribable = subscribable;\nexports.observableArray = observableArray;\nexports.trackArrayChanges = trackArrayChanges;\nexports.arrayChangeEventName = arrayChangeEventName;\nexports.toJS = toJS;\nexports.toJSON = toJSON;\nexports.deferUpdates = deferUpdates;\nexports.valuesArePrimitiveAndEqual = valuesArePrimitiveAndEqual;\nexports.applyExtenders = applyExtenders;\nexports.extenders = extenders;\n//# sourceMappingURL=tko.observable.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///0\n");

/***/ }),
/* 1 */
/*!***********************************************************************************!*\
  !*** c:/Users/pm/Downloads/react/js-framework-benchmark/ko6/src/tko/tko.utils.js ***!
  \***********************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(global) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n//\n// Array utilities\n//\n/* eslint no-cond-assign: 0 */\n\nfunction arrayForEach(array, action) {\n    for (var i = 0, j = array.length; i < j; i++) {\n        action(array[i], i);\n    }\n}\n\nfunction arrayIndexOf(array, item) {\n    // IE9\n    if (typeof Array.prototype.indexOf == \"function\") return Array.prototype.indexOf.call(array, item);\n    for (var i = 0, j = array.length; i < j; i++) {\n        if (array[i] === item) return i;\n    }return -1;\n}\n\nfunction arrayFirst(array, predicate, predicateOwner) {\n    for (var i = 0, j = array.length; i < j; i++) {\n        if (predicate.call(predicateOwner, array[i], i)) return array[i];\n    }return null;\n}\n\nfunction arrayRemoveItem(array, itemToRemove) {\n    var index = arrayIndexOf(array, itemToRemove);\n    if (index > 0) {\n        array.splice(index, 1);\n    } else if (index === 0) {\n        array.shift();\n    }\n}\n\nfunction arrayGetDistinctValues(array) {\n    array = array || [];\n    var result = [];\n    for (var i = 0, j = array.length; i < j; i++) {\n        if (arrayIndexOf(result, array[i]) < 0) result.push(array[i]);\n    }\n    return result;\n}\n\nfunction arrayMap(array, mapping) {\n    array = array || [];\n    var result = [];\n    for (var i = 0, j = array.length; i < j; i++) {\n        result.push(mapping(array[i], i));\n    }return result;\n}\n\nfunction arrayFilter(array, predicate) {\n    array = array || [];\n    var result = [];\n    for (var i = 0, j = array.length; i < j; i++) {\n        if (predicate(array[i], i)) result.push(array[i]);\n    }return result;\n}\n\nfunction arrayPushAll(array, valuesToPush) {\n    if (valuesToPush instanceof Array) array.push.apply(array, valuesToPush);else for (var i = 0, j = valuesToPush.length; i < j; i++) {\n        array.push(valuesToPush[i]);\n    }return array;\n}\n\nfunction addOrRemoveItem(array, value, included) {\n    var existingEntryIndex = arrayIndexOf(typeof array.peek === 'function' ? array.peek() : array, value);\n    if (existingEntryIndex < 0) {\n        if (included) array.push(value);\n    } else {\n        if (!included) array.splice(existingEntryIndex, 1);\n    }\n}\n\nfunction makeArray(arrayLikeObject) {\n    var result = [];\n    for (var i = 0, j = arrayLikeObject.length; i < j; i++) {\n        result.push(arrayLikeObject[i]);\n    }\n    return result;\n}\n\nfunction range(min, max) {\n    min = typeof min === 'function' ? min() : min;\n    max = typeof max === 'function' ? max() : max;\n    var result = [];\n    for (var i = min; i <= max; i++) {\n        result.push(i);\n    }return result;\n}\n\n// Go through the items that have been added and deleted and try to find matches between them.\nfunction findMovesInArrayComparison(left, right, limitFailedCompares) {\n    if (left.length && right.length) {\n        var failedCompares, l, r, leftItem, rightItem;\n        for (failedCompares = l = 0; (!limitFailedCompares || failedCompares < limitFailedCompares) && (leftItem = left[l]); ++l) {\n            for (r = 0; rightItem = right[r]; ++r) {\n                if (leftItem['value'] === rightItem['value']) {\n                    leftItem['moved'] = rightItem['index'];\n                    rightItem['moved'] = leftItem['index'];\n                    right.splice(r, 1); // This item is marked as moved; so remove it from right list\n                    failedCompares = r = 0; // Reset failed compares count because we're checking for consecutive failures\n                    break;\n                }\n            }\n            failedCompares += r;\n        }\n    }\n}\n\nvar statusNotInOld = 'added';\nvar statusNotInNew = 'deleted';\n\n// Simple calculation based on Levenshtein distance.\nfunction compareArrays(oldArray, newArray, options) {\n    // For backward compatibility, if the third arg is actually a bool, interpret\n    // it as the old parameter 'dontLimitMoves'. Newer code should use { dontLimitMoves: true }.\n    options = typeof options === 'boolean' ? { 'dontLimitMoves': options } : options || {};\n    oldArray = oldArray || [];\n    newArray = newArray || [];\n\n    if (oldArray.length < newArray.length) return compareSmallArrayToBigArray(oldArray, newArray, statusNotInOld, statusNotInNew, options);else return compareSmallArrayToBigArray(newArray, oldArray, statusNotInNew, statusNotInOld, options);\n}\n\nfunction compareSmallArrayToBigArray(smlArray, bigArray, statusNotInSml, statusNotInBig, options) {\n    var myMin = Math.min,\n        myMax = Math.max,\n        editDistanceMatrix = [],\n        smlIndex,\n        smlIndexMax = smlArray.length,\n        bigIndex,\n        bigIndexMax = bigArray.length,\n        compareRange = bigIndexMax - smlIndexMax || 1,\n        maxDistance = smlIndexMax + bigIndexMax + 1,\n        thisRow,\n        lastRow,\n        bigIndexMaxForRow,\n        bigIndexMinForRow;\n\n    for (smlIndex = 0; smlIndex <= smlIndexMax; smlIndex++) {\n        lastRow = thisRow;\n        editDistanceMatrix.push(thisRow = []);\n        bigIndexMaxForRow = myMin(bigIndexMax, smlIndex + compareRange);\n        bigIndexMinForRow = myMax(0, smlIndex - 1);\n        for (bigIndex = bigIndexMinForRow; bigIndex <= bigIndexMaxForRow; bigIndex++) {\n            if (!bigIndex) thisRow[bigIndex] = smlIndex + 1;else if (!smlIndex) // Top row - transform empty array into new array via additions\n                thisRow[bigIndex] = bigIndex + 1;else if (smlArray[smlIndex - 1] === bigArray[bigIndex - 1]) thisRow[bigIndex] = lastRow[bigIndex - 1]; // copy value (no edit)\n            else {\n                    var northDistance = lastRow[bigIndex] || maxDistance; // not in big (deletion)\n                    var westDistance = thisRow[bigIndex - 1] || maxDistance; // not in small (addition)\n                    thisRow[bigIndex] = myMin(northDistance, westDistance) + 1;\n                }\n        }\n    }\n\n    var editScript = [],\n        meMinusOne,\n        notInSml = [],\n        notInBig = [];\n    for (smlIndex = smlIndexMax, bigIndex = bigIndexMax; smlIndex || bigIndex;) {\n        meMinusOne = editDistanceMatrix[smlIndex][bigIndex] - 1;\n        if (bigIndex && meMinusOne === editDistanceMatrix[smlIndex][bigIndex - 1]) {\n            notInSml.push(editScript[editScript.length] = { // added\n                'status': statusNotInSml,\n                'value': bigArray[--bigIndex],\n                'index': bigIndex });\n        } else if (smlIndex && meMinusOne === editDistanceMatrix[smlIndex - 1][bigIndex]) {\n            notInBig.push(editScript[editScript.length] = { // deleted\n                'status': statusNotInBig,\n                'value': smlArray[--smlIndex],\n                'index': smlIndex });\n        } else {\n            --bigIndex;\n            --smlIndex;\n            if (!options['sparse']) {\n                editScript.push({\n                    'status': \"retained\",\n                    'value': bigArray[bigIndex] });\n            }\n        }\n    }\n\n    // Set a limit on the number of consecutive non-matching comparisons; having it a multiple of\n    // smlIndexMax keeps the time complexity of this algorithm linear.\n    findMovesInArrayComparison(notInBig, notInSml, !options['dontLimitMoves'] && smlIndexMax * 10);\n\n    return editScript.reverse();\n}\n\n//\n// This becomes ko.options\n// --\n//\n// This is the root 'options', which must be extended by others.\n\nvar _global;\n\ntry {\n    _global = window;\n} catch (e) {\n    _global = global;\n}\n\nvar options = {\n    deferUpdates: false,\n\n    useOnlyNativeEvents: false,\n\n    protoProperty: '__ko_proto__',\n\n    // Modify the default attribute from `data-bind`.\n    defaultBindingAttribute: 'data-bind',\n\n    // Enable/disable <!-- ko binding: ... -> style bindings\n    allowVirtualElements: true,\n\n    // Global variables that can be accessed from bindings.\n    bindingGlobals: _global,\n\n    // An instance of the binding provider.\n    bindingProviderInstance: null,\n\n    // jQuery will be automatically set to _global.jQuery in applyBindings\n    // if it is (strictly equal to) undefined.  Set it to false or null to\n    // disable automatically setting jQuery.\n    jQuery: _global && _global.jQuery,\n\n    Promise: _global && _global.Promise,\n\n    taskScheduler: null,\n\n    debug: false,\n\n    global: _global,\n    document: _global.document,\n\n    // Filters for bindings\n    //   data-bind=\"expression | filter_1 | filter_2\"\n    filters: {},\n\n    onError: function onError(e) {\n        throw e;\n    },\n\n    set: function set(name, value) {\n        options[name] = value;\n    }\n};\n\nObject.defineProperty(options, '$', {\n    get: function get() {\n        return options.jQuery;\n    }\n});\n\n//\n// Error handling\n// ---\n//\n// The default onError handler is to re-throw.\nfunction catchFunctionErrors(delegate) {\n    return options.onError ? function () {\n        try {\n            return delegate.apply(this, arguments);\n        } catch (e) {\n            options.onError(e);\n        }\n    } : delegate;\n}\n\nfunction deferError(error) {\n    safeSetTimeout(function () {\n        options.onError(error);\n    }, 0);\n}\n\nfunction safeSetTimeout(handler, timeout) {\n    return setTimeout(catchFunctionErrors(handler), timeout);\n}\n\n//\n// Asynchronous functionality\n// ---\nfunction throttle(callback, timeout) {\n    var timeoutInstance;\n    return function () {\n        if (!timeoutInstance) {\n            timeoutInstance = safeSetTimeout(function () {\n                timeoutInstance = undefined;\n                callback();\n            }, timeout);\n        }\n    };\n}\n\nfunction debounce(callback, timeout) {\n    var timeoutInstance;\n    return function () {\n        clearTimeout(timeoutInstance);\n        timeoutInstance = safeSetTimeout(callback, timeout);\n    };\n}\n\n//\n// Detection and Workarounds for Internet Explorer\n//\n// Detect IE versions for bug workarounds (uses IE conditionals, not UA string, for robustness)\n// Note that, since IE 10 does not support conditional comments, the following logic only detects IE < 10.\n// Currently this is by design, since IE 10+ behaves correctly when treated as a standard browser.\n// If there is a future need to detect specific versions of IE10+, we will amend this.\nvar ieVersion = options.document && function () {\n    var version = 3,\n        div = options.document.createElement('div'),\n        iElems = div.getElementsByTagName('i');\n\n    // Keep constructing conditional HTML blocks until we hit one that resolves to an empty fragment\n    while (div.innerHTML = '<!--[if gt IE ' + ++version + ']><i></i><![endif]-->', iElems[0]) {}\n    return version > 4 ? version : undefined;\n}();\n\nvar isIe6 = ieVersion === 6;\nvar isIe7 = ieVersion === 7;\n\n//\n// Object functions\n//\n\nfunction extend(target, source) {\n    if (source) {\n        for (var prop in source) {\n            if (source.hasOwnProperty(prop)) {\n                target[prop] = source[prop];\n            }\n        }\n    }\n    return target;\n}\n\nfunction objectForEach(obj, action) {\n    for (var prop in obj) {\n        if (obj.hasOwnProperty(prop)) {\n            action(prop, obj[prop]);\n        }\n    }\n}\n\nfunction objectMap(source, mapping) {\n    if (!source) return source;\n    var target = {};\n    for (var prop in source) {\n        if (source.hasOwnProperty(prop)) {\n            target[prop] = mapping(source[prop], prop, source);\n        }\n    }\n    return target;\n}\n\nfunction getObjectOwnProperty(obj, propName) {\n    return obj.hasOwnProperty(propName) ? obj[propName] : undefined;\n}\n\nfunction clonePlainObjectDeep(obj, seen) {\n    if (!seen) {\n        seen = [];\n    }\n\n    if (!obj || (typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) !== 'object' || obj.constructor !== Object || seen.indexOf(obj) !== -1) {\n        return obj;\n    }\n\n    // Anything that makes it below is a plain object that has not yet\n    // been seen/cloned.\n    seen.push(obj);\n\n    var result = {};\n    for (var prop in obj) {\n        if (obj.hasOwnProperty(prop)) {\n            result[prop] = clonePlainObjectDeep(obj[prop], seen);\n        }\n    }\n    return result;\n}\n\n//\n// Prototype Functions\n//\nvar protoProperty = options.protoProperty;\n\nvar canSetPrototype = { __proto__: [] } instanceof Array;\n\nfunction setPrototypeOf(obj, proto) {\n    obj.__proto__ = proto;\n    return obj;\n}\n\nvar setPrototypeOfOrExtend = canSetPrototype ? setPrototypeOf : extend;\n\nfunction hasPrototype(instance, prototype) {\n    if (instance === null || instance === undefined || instance[protoProperty] === undefined) return false;\n    if (instance[protoProperty] === prototype) return true;\n    return hasPrototype(instance[protoProperty], prototype); // Walk the prototype chain\n}\n\n//\n// String (and JSON)\n//\n\n\nfunction stringTrim(string) {\n    return string === null || string === undefined ? '' : string.trim ? string.trim() : string.toString().replace(/^[\\s\\xa0]+|[\\s\\xa0]+$/g, '');\n}\n\nfunction stringStartsWith(string, startsWith) {\n    string = string || \"\";\n    if (startsWith.length > string.length) return false;\n    return string.substring(0, startsWith.length) === startsWith;\n}\n\nfunction parseJson(jsonString) {\n    if (typeof jsonString == \"string\") {\n        jsonString = stringTrim(jsonString);\n        if (jsonString) {\n            if (JSON && JSON.parse) // Use native parsing where available\n                return JSON.parse(jsonString);\n            return new Function(\"return \" + jsonString)(); // Fallback on less safe parsing for older browsers\n        }\n    }\n    return null;\n}\n\nfunction stringifyJson(data, replacer, space) {\n    // replacer and space are optional\n    if (!JSON || !JSON.stringify) throw new Error(\"Cannot find JSON.stringify(). Some browsers (e.g., IE < 8) don't support it natively, but you can overcome this by adding a script reference to json2.js, downloadable from http://www.json.org/json2.js\");\n    return JSON.stringify(typeof data === 'function' ? data() : data, replacer, space);\n}\n\n//\n// ES6 Symbols\n//\n\nvar useSymbols = typeof Symbol === 'function';\n\nfunction createSymbolOrString(identifier) {\n    return useSymbols ? Symbol(identifier) : identifier;\n}\n\n//\n// DOM - CSS\n//\n\n// For details on the pattern for changing node classes\n// see: https://github.com/knockout/knockout/issues/1597\nvar cssClassNameRegex = /\\S+/g;\n\nfunction toggleDomNodeCssClass(node, classNames, shouldHaveClass) {\n    var addOrRemoveFn;\n    if (!classNames) {\n        return;\n    }\n    if (_typeof(node.classList) === 'object') {\n        addOrRemoveFn = node.classList[shouldHaveClass ? 'add' : 'remove'];\n        arrayForEach(classNames.match(cssClassNameRegex), function (className) {\n            addOrRemoveFn.call(node.classList, className);\n        });\n    } else if (typeof node.className['baseVal'] === 'string') {\n        // SVG tag .classNames is an SVGAnimatedString instance\n        toggleObjectClassPropertyString(node.className, 'baseVal', classNames, shouldHaveClass);\n    } else {\n        // node.className ought to be a string.\n        toggleObjectClassPropertyString(node, 'className', classNames, shouldHaveClass);\n    }\n}\n\nfunction toggleObjectClassPropertyString(obj, prop, classNames, shouldHaveClass) {\n    // obj/prop is either a node/'className' or a SVGAnimatedString/'baseVal'.\n    var currentClassNames = obj[prop].match(cssClassNameRegex) || [];\n    arrayForEach(classNames.match(cssClassNameRegex), function (className) {\n        addOrRemoveItem(currentClassNames, className, shouldHaveClass);\n    });\n    obj[prop] = currentClassNames.join(\" \");\n}\n\n//\n// jQuery\n//\n// TODO: deprecate in favour of options.$\n\nvar jQueryInstance = options.global && options.global.jQuery;\n\nfunction jQuerySetInstance(jquery) {\n    options.jQuery = jQueryInstance = jquery;\n}\n\n//\n//  Tasks Micro-scheduler\n//  ===\n//\n/* eslint no-cond-assign: 0 */\nvar taskQueue = [];\nvar taskQueueLength = 0;\nvar nextHandle = 1;\nvar nextIndexToProcess = 0;\nvar w = options.global;\n\nif (w && w.MutationObserver && !(w.navigator && w.navigator.standalone)) {\n    // Chrome 27+, Firefox 14+, IE 11+, Opera 15+, Safari 6.1+, node\n    // From https://github.com/petkaantonov/bluebird * Copyright (c) 2014 Petka Antonov * License: MIT\n    options.taskScheduler = function (callback) {\n        var div = w.document.createElement(\"div\");\n        new MutationObserver(callback).observe(div, { attributes: true });\n        return function () {\n            div.classList.toggle(\"foo\");\n        };\n    }(scheduledProcess);\n} else if (w && w.document && \"onreadystatechange\" in w.document.createElement(\"script\")) {\n    // IE 6-10\n    // From https://github.com/YuzuJS/setImmediate * Copyright (c) 2012 Barnesandnoble.com, llc, Donavon West, and Domenic Denicola * License: MIT\n    options.taskScheduler = function (callback) {\n        var script = document.createElement(\"script\");\n        script.onreadystatechange = function () {\n            script.onreadystatechange = null;\n            document.documentElement.removeChild(script);\n            script = null;\n            callback();\n        };\n        document.documentElement.appendChild(script);\n    };\n} else {\n    options.taskScheduler = function (callback) {\n        setTimeout(callback, 0);\n    };\n}\n\nfunction processTasks() {\n    if (taskQueueLength) {\n        // Each mark represents the end of a logical group of tasks and the number of these groups is\n        // limited to prevent unchecked recursion.\n        var mark = taskQueueLength,\n            countMarks = 0;\n\n        // nextIndexToProcess keeps track of where we are in the queue; processTasks can be called recursively without issue\n        for (var task; nextIndexToProcess < taskQueueLength;) {\n            if (task = taskQueue[nextIndexToProcess++]) {\n                if (nextIndexToProcess > mark) {\n                    if (++countMarks >= 5000) {\n                        nextIndexToProcess = taskQueueLength; // skip all tasks remaining in the queue since any of them could be causing the recursion\n                        deferError(Error(\"'Too much recursion' after processing \" + countMarks + \" task groups.\"));\n                        break;\n                    }\n                    mark = taskQueueLength;\n                }\n                try {\n                    task();\n                } catch (ex) {\n                    deferError(ex);\n                }\n            }\n        }\n    }\n}\n\nfunction scheduledProcess() {\n    processTasks();\n\n    // Reset the queue\n    nextIndexToProcess = taskQueueLength = taskQueue.length = 0;\n}\n\nfunction scheduleTaskProcessing() {\n    options.taskScheduler(scheduledProcess);\n}\n\nfunction schedule(func) {\n    if (!taskQueueLength) {\n        scheduleTaskProcessing();\n    }\n\n    taskQueue[taskQueueLength++] = func;\n    return nextHandle++;\n}\n\nfunction cancel(handle) {\n    var index = handle - (nextHandle - taskQueueLength);\n    if (index >= nextIndexToProcess && index < taskQueueLength) {\n        taskQueue[index] = null;\n    }\n}\n\n// For testing only: reset the queue and return the previous queue length\nfunction resetForTesting() {\n    var length = taskQueueLength - nextIndexToProcess;\n    nextIndexToProcess = taskQueueLength = taskQueue.length = 0;\n    return length;\n}\n\nvar tasks = Object.freeze({\n    schedule: schedule,\n    cancel: cancel,\n    resetForTesting: resetForTesting,\n    runEarly: processTasks\n});\n\n/*\r\n  tko.util\r\n  ===\r\n\r\n\r\n*/\n// DOM;\n/*\r\nexport * from './dom/event.js';\r\nexport * from './dom/info.js';\r\nexport * from './dom/manipulation.js';\r\nexport * from './dom/fixes.js';\r\nexport * from './dom/html.js';\r\nexport * from './dom/disposal.js';\r\n\r\n// Sub-Modules;\r\nimport * as memoization from './memoization';\r\nimport * as tasks from './tasks.js';\r\nimport * as virtualElements from './dom/virtualElements.js';\r\nimport * as domData from './dom/data.js';\r\n\r\nexport {tasks, virtualElements, domData, memoization};\r\n*/\n\nexports.tasks = tasks;\nexports.jQuerySetInstance = jQuerySetInstance;\nexports.options = options;\nexports.arrayForEach = arrayForEach;\nexports.arrayIndexOf = arrayIndexOf;\nexports.arrayFirst = arrayFirst;\nexports.arrayRemoveItem = arrayRemoveItem;\nexports.arrayGetDistinctValues = arrayGetDistinctValues;\nexports.arrayMap = arrayMap;\nexports.arrayFilter = arrayFilter;\nexports.arrayPushAll = arrayPushAll;\nexports.addOrRemoveItem = addOrRemoveItem;\nexports.makeArray = makeArray;\nexports.range = range;\nexports.findMovesInArrayComparison = findMovesInArrayComparison;\nexports.compareArrays = compareArrays;\nexports.throttle = throttle;\nexports.debounce = debounce;\nexports.catchFunctionErrors = catchFunctionErrors;\nexports.deferError = deferError;\nexports.safeSetTimeout = safeSetTimeout;\nexports.ieVersion = ieVersion;\nexports.isIe6 = isIe6;\nexports.isIe7 = isIe7;\nexports.extend = extend;\nexports.objectForEach = objectForEach;\nexports.objectMap = objectMap;\nexports.getObjectOwnProperty = getObjectOwnProperty;\nexports.clonePlainObjectDeep = clonePlainObjectDeep;\nexports.canSetPrototype = canSetPrototype;\nexports.setPrototypeOf = setPrototypeOf;\nexports.setPrototypeOfOrExtend = setPrototypeOfOrExtend;\nexports.hasPrototype = hasPrototype;\nexports.stringTrim = stringTrim;\nexports.stringStartsWith = stringStartsWith;\nexports.parseJson = parseJson;\nexports.stringifyJson = stringifyJson;\nexports.useSymbols = useSymbols;\nexports.createSymbolOrString = createSymbolOrString;\nexports.toggleDomNodeCssClass = toggleDomNodeCssClass;\n//# sourceMappingURL=tko.utils.js.map\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../node_modules/webpack/buildin/global.js */ 7)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9jOi9Vc2Vycy9wbS9Eb3dubG9hZHMvcmVhY3QvanMtZnJhbWV3b3JrLWJlbmNobWFyay9rbzYvc3JjL3Rrby90a28udXRpbHMuanM/ODRkMiJdLCJzb3VyY2VzQ29udGVudCI6WyIvL1xuLy8gQXJyYXkgdXRpbGl0aWVzXG4vL1xuLyogZXNsaW50IG5vLWNvbmQtYXNzaWduOiAwICovXG5cbmZ1bmN0aW9uIGFycmF5Rm9yRWFjaChhcnJheSwgYWN0aW9uKSB7XG4gICAgZm9yICh2YXIgaSA9IDAsIGogPSBhcnJheS5sZW5ndGg7IGkgPCBqOyBpKyspXG4gICAgICAgIGFjdGlvbihhcnJheVtpXSwgaSk7XG59XG5cbmZ1bmN0aW9uIGFycmF5SW5kZXhPZihhcnJheSwgaXRlbSkge1xuICAgIC8vIElFOVxuICAgIGlmICh0eXBlb2YgQXJyYXkucHJvdG90eXBlLmluZGV4T2YgPT0gXCJmdW5jdGlvblwiKVxuICAgICAgICByZXR1cm4gQXJyYXkucHJvdG90eXBlLmluZGV4T2YuY2FsbChhcnJheSwgaXRlbSk7XG4gICAgZm9yICh2YXIgaSA9IDAsIGogPSBhcnJheS5sZW5ndGg7IGkgPCBqOyBpKyspXG4gICAgICAgIGlmIChhcnJheVtpXSA9PT0gaXRlbSlcbiAgICAgICAgICAgIHJldHVybiBpO1xuICAgIHJldHVybiAtMTtcbn1cblxuZnVuY3Rpb24gYXJyYXlGaXJzdChhcnJheSwgcHJlZGljYXRlLCBwcmVkaWNhdGVPd25lcikge1xuICAgIGZvciAodmFyIGkgPSAwLCBqID0gYXJyYXkubGVuZ3RoOyBpIDwgajsgaSsrKVxuICAgICAgICBpZiAocHJlZGljYXRlLmNhbGwocHJlZGljYXRlT3duZXIsIGFycmF5W2ldLCBpKSlcbiAgICAgICAgICAgIHJldHVybiBhcnJheVtpXTtcbiAgICByZXR1cm4gbnVsbDtcbn1cblxuZnVuY3Rpb24gYXJyYXlSZW1vdmVJdGVtKGFycmF5LCBpdGVtVG9SZW1vdmUpIHtcbiAgICB2YXIgaW5kZXggPSBhcnJheUluZGV4T2YoYXJyYXksIGl0ZW1Ub1JlbW92ZSk7XG4gICAgaWYgKGluZGV4ID4gMCkge1xuICAgICAgICBhcnJheS5zcGxpY2UoaW5kZXgsIDEpO1xuICAgIH1cbiAgICBlbHNlIGlmIChpbmRleCA9PT0gMCkge1xuICAgICAgICBhcnJheS5zaGlmdCgpO1xuICAgIH1cbn1cblxuZnVuY3Rpb24gYXJyYXlHZXREaXN0aW5jdFZhbHVlcyhhcnJheSkge1xuICAgIGFycmF5ID0gYXJyYXkgfHwgW107XG4gICAgdmFyIHJlc3VsdCA9IFtdO1xuICAgIGZvciAodmFyIGkgPSAwLCBqID0gYXJyYXkubGVuZ3RoOyBpIDwgajsgaSsrKSB7XG4gICAgICAgIGlmIChhcnJheUluZGV4T2YocmVzdWx0LCBhcnJheVtpXSkgPCAwKVxuICAgICAgICAgICAgcmVzdWx0LnB1c2goYXJyYXlbaV0pO1xuICAgIH1cbiAgICByZXR1cm4gcmVzdWx0O1xufVxuXG5mdW5jdGlvbiBhcnJheU1hcChhcnJheSwgbWFwcGluZykge1xuICAgIGFycmF5ID0gYXJyYXkgfHwgW107XG4gICAgdmFyIHJlc3VsdCA9IFtdO1xuICAgIGZvciAodmFyIGkgPSAwLCBqID0gYXJyYXkubGVuZ3RoOyBpIDwgajsgaSsrKVxuICAgICAgICByZXN1bHQucHVzaChtYXBwaW5nKGFycmF5W2ldLCBpKSk7XG4gICAgcmV0dXJuIHJlc3VsdDtcbn1cblxuZnVuY3Rpb24gYXJyYXlGaWx0ZXIoYXJyYXksIHByZWRpY2F0ZSkge1xuICAgIGFycmF5ID0gYXJyYXkgfHwgW107XG4gICAgdmFyIHJlc3VsdCA9IFtdO1xuICAgIGZvciAodmFyIGkgPSAwLCBqID0gYXJyYXkubGVuZ3RoOyBpIDwgajsgaSsrKVxuICAgICAgICBpZiAocHJlZGljYXRlKGFycmF5W2ldLCBpKSlcbiAgICAgICAgICAgIHJlc3VsdC5wdXNoKGFycmF5W2ldKTtcbiAgICByZXR1cm4gcmVzdWx0O1xufVxuXG5mdW5jdGlvbiBhcnJheVB1c2hBbGwoYXJyYXksIHZhbHVlc1RvUHVzaCkge1xuICAgIGlmICh2YWx1ZXNUb1B1c2ggaW5zdGFuY2VvZiBBcnJheSlcbiAgICAgICAgYXJyYXkucHVzaC5hcHBseShhcnJheSwgdmFsdWVzVG9QdXNoKTtcbiAgICBlbHNlXG4gICAgICAgIGZvciAodmFyIGkgPSAwLCBqID0gdmFsdWVzVG9QdXNoLmxlbmd0aDsgaSA8IGo7IGkrKylcbiAgICAgICAgICAgIGFycmF5LnB1c2godmFsdWVzVG9QdXNoW2ldKTtcbiAgICByZXR1cm4gYXJyYXk7XG59XG5cbmZ1bmN0aW9uIGFkZE9yUmVtb3ZlSXRlbShhcnJheSwgdmFsdWUsIGluY2x1ZGVkKSB7XG4gICAgdmFyIGV4aXN0aW5nRW50cnlJbmRleCA9IGFycmF5SW5kZXhPZih0eXBlb2YgYXJyYXkucGVlayA9PT0gJ2Z1bmN0aW9uJyA/IGFycmF5LnBlZWsoKSA6IGFycmF5LCB2YWx1ZSk7XG4gICAgaWYgKGV4aXN0aW5nRW50cnlJbmRleCA8IDApIHtcbiAgICAgICAgaWYgKGluY2x1ZGVkKVxuICAgICAgICAgICAgYXJyYXkucHVzaCh2YWx1ZSk7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgaWYgKCFpbmNsdWRlZClcbiAgICAgICAgICAgIGFycmF5LnNwbGljZShleGlzdGluZ0VudHJ5SW5kZXgsIDEpO1xuICAgIH1cbn1cblxuXG5mdW5jdGlvbiBtYWtlQXJyYXkoYXJyYXlMaWtlT2JqZWN0KSB7XG4gICAgdmFyIHJlc3VsdCA9IFtdO1xuICAgIGZvciAodmFyIGkgPSAwLCBqID0gYXJyYXlMaWtlT2JqZWN0Lmxlbmd0aDsgaSA8IGo7IGkrKykge1xuICAgICAgICByZXN1bHQucHVzaChhcnJheUxpa2VPYmplY3RbaV0pO1xuICAgIH1cbiAgICByZXR1cm4gcmVzdWx0O1xufVxuXG5cbmZ1bmN0aW9uIHJhbmdlKG1pbiwgbWF4KSB7XG4gICAgbWluID0gdHlwZW9mIG1pbiA9PT0gJ2Z1bmN0aW9uJyA/IG1pbigpIDogbWluO1xuICAgIG1heCA9IHR5cGVvZiBtYXggPT09ICdmdW5jdGlvbicgPyBtYXgoKSA6IG1heDtcbiAgICB2YXIgcmVzdWx0ID0gW107XG4gICAgZm9yICh2YXIgaSA9IG1pbjsgaSA8PSBtYXg7IGkrKylcbiAgICAgICAgcmVzdWx0LnB1c2goaSk7XG4gICAgcmV0dXJuIHJlc3VsdDtcbn1cblxuLy8gR28gdGhyb3VnaCB0aGUgaXRlbXMgdGhhdCBoYXZlIGJlZW4gYWRkZWQgYW5kIGRlbGV0ZWQgYW5kIHRyeSB0byBmaW5kIG1hdGNoZXMgYmV0d2VlbiB0aGVtLlxuZnVuY3Rpb24gZmluZE1vdmVzSW5BcnJheUNvbXBhcmlzb24obGVmdCwgcmlnaHQsIGxpbWl0RmFpbGVkQ29tcGFyZXMpIHtcbiAgICBpZiAobGVmdC5sZW5ndGggJiYgcmlnaHQubGVuZ3RoKSB7XG4gICAgICAgIHZhciBmYWlsZWRDb21wYXJlcywgbCwgciwgbGVmdEl0ZW0sIHJpZ2h0SXRlbTtcbiAgICAgICAgZm9yIChmYWlsZWRDb21wYXJlcyA9IGwgPSAwOyAoIWxpbWl0RmFpbGVkQ29tcGFyZXMgfHwgZmFpbGVkQ29tcGFyZXMgPCBsaW1pdEZhaWxlZENvbXBhcmVzKSAmJiAobGVmdEl0ZW0gPSBsZWZ0W2xdKTsgKytsKSB7XG4gICAgICAgICAgICBmb3IgKHIgPSAwOyByaWdodEl0ZW0gPSByaWdodFtyXTsgKytyKSB7XG4gICAgICAgICAgICAgICAgaWYgKGxlZnRJdGVtWyd2YWx1ZSddID09PSByaWdodEl0ZW1bJ3ZhbHVlJ10pIHtcbiAgICAgICAgICAgICAgICAgICAgbGVmdEl0ZW1bJ21vdmVkJ10gPSByaWdodEl0ZW1bJ2luZGV4J107XG4gICAgICAgICAgICAgICAgICAgIHJpZ2h0SXRlbVsnbW92ZWQnXSA9IGxlZnRJdGVtWydpbmRleCddO1xuICAgICAgICAgICAgICAgICAgICByaWdodC5zcGxpY2UociwgMSk7ICAgICAgICAgLy8gVGhpcyBpdGVtIGlzIG1hcmtlZCBhcyBtb3ZlZDsgc28gcmVtb3ZlIGl0IGZyb20gcmlnaHQgbGlzdFxuICAgICAgICAgICAgICAgICAgICBmYWlsZWRDb21wYXJlcyA9IHIgPSAwOyAgICAgLy8gUmVzZXQgZmFpbGVkIGNvbXBhcmVzIGNvdW50IGJlY2F1c2Ugd2UncmUgY2hlY2tpbmcgZm9yIGNvbnNlY3V0aXZlIGZhaWx1cmVzXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGZhaWxlZENvbXBhcmVzICs9IHI7XG4gICAgICAgIH1cbiAgICB9XG59XG5cblxuXG52YXIgc3RhdHVzTm90SW5PbGQgPSAnYWRkZWQnO1xudmFyIHN0YXR1c05vdEluTmV3ID0gJ2RlbGV0ZWQnO1xuXG4gICAgLy8gU2ltcGxlIGNhbGN1bGF0aW9uIGJhc2VkIG9uIExldmVuc2h0ZWluIGRpc3RhbmNlLlxuZnVuY3Rpb24gY29tcGFyZUFycmF5cyhvbGRBcnJheSwgbmV3QXJyYXksIG9wdGlvbnMpIHtcbiAgICAvLyBGb3IgYmFja3dhcmQgY29tcGF0aWJpbGl0eSwgaWYgdGhlIHRoaXJkIGFyZyBpcyBhY3R1YWxseSBhIGJvb2wsIGludGVycHJldFxuICAgIC8vIGl0IGFzIHRoZSBvbGQgcGFyYW1ldGVyICdkb250TGltaXRNb3ZlcycuIE5ld2VyIGNvZGUgc2hvdWxkIHVzZSB7IGRvbnRMaW1pdE1vdmVzOiB0cnVlIH0uXG4gICAgb3B0aW9ucyA9ICh0eXBlb2Ygb3B0aW9ucyA9PT0gJ2Jvb2xlYW4nKSA/IHsgJ2RvbnRMaW1pdE1vdmVzJzogb3B0aW9ucyB9IDogKG9wdGlvbnMgfHwge30pO1xuICAgIG9sZEFycmF5ID0gb2xkQXJyYXkgfHwgW107XG4gICAgbmV3QXJyYXkgPSBuZXdBcnJheSB8fCBbXTtcblxuICAgIGlmIChvbGRBcnJheS5sZW5ndGggPCBuZXdBcnJheS5sZW5ndGgpXG4gICAgICAgIHJldHVybiBjb21wYXJlU21hbGxBcnJheVRvQmlnQXJyYXkob2xkQXJyYXksIG5ld0FycmF5LCBzdGF0dXNOb3RJbk9sZCwgc3RhdHVzTm90SW5OZXcsIG9wdGlvbnMpO1xuICAgIGVsc2VcbiAgICAgICAgcmV0dXJuIGNvbXBhcmVTbWFsbEFycmF5VG9CaWdBcnJheShuZXdBcnJheSwgb2xkQXJyYXksIHN0YXR1c05vdEluTmV3LCBzdGF0dXNOb3RJbk9sZCwgb3B0aW9ucyk7XG59XG5cblxuZnVuY3Rpb24gY29tcGFyZVNtYWxsQXJyYXlUb0JpZ0FycmF5KHNtbEFycmF5LCBiaWdBcnJheSwgc3RhdHVzTm90SW5TbWwsIHN0YXR1c05vdEluQmlnLCBvcHRpb25zKSB7XG4gICAgdmFyIG15TWluID0gTWF0aC5taW4sXG4gICAgICAgIG15TWF4ID0gTWF0aC5tYXgsXG4gICAgICAgIGVkaXREaXN0YW5jZU1hdHJpeCA9IFtdLFxuICAgICAgICBzbWxJbmRleCwgc21sSW5kZXhNYXggPSBzbWxBcnJheS5sZW5ndGgsXG4gICAgICAgIGJpZ0luZGV4LCBiaWdJbmRleE1heCA9IGJpZ0FycmF5Lmxlbmd0aCxcbiAgICAgICAgY29tcGFyZVJhbmdlID0gKGJpZ0luZGV4TWF4IC0gc21sSW5kZXhNYXgpIHx8IDEsXG4gICAgICAgIG1heERpc3RhbmNlID0gc21sSW5kZXhNYXggKyBiaWdJbmRleE1heCArIDEsXG4gICAgICAgIHRoaXNSb3csIGxhc3RSb3csXG4gICAgICAgIGJpZ0luZGV4TWF4Rm9yUm93LCBiaWdJbmRleE1pbkZvclJvdztcblxuICAgIGZvciAoc21sSW5kZXggPSAwOyBzbWxJbmRleCA8PSBzbWxJbmRleE1heDsgc21sSW5kZXgrKykge1xuICAgICAgICBsYXN0Um93ID0gdGhpc1JvdztcbiAgICAgICAgZWRpdERpc3RhbmNlTWF0cml4LnB1c2godGhpc1JvdyA9IFtdKTtcbiAgICAgICAgYmlnSW5kZXhNYXhGb3JSb3cgPSBteU1pbihiaWdJbmRleE1heCwgc21sSW5kZXggKyBjb21wYXJlUmFuZ2UpO1xuICAgICAgICBiaWdJbmRleE1pbkZvclJvdyA9IG15TWF4KDAsIHNtbEluZGV4IC0gMSk7XG4gICAgICAgIGZvciAoYmlnSW5kZXggPSBiaWdJbmRleE1pbkZvclJvdzsgYmlnSW5kZXggPD0gYmlnSW5kZXhNYXhGb3JSb3c7IGJpZ0luZGV4KyspIHtcbiAgICAgICAgICAgIGlmICghYmlnSW5kZXgpXG4gICAgICAgICAgICAgICAgdGhpc1Jvd1tiaWdJbmRleF0gPSBzbWxJbmRleCArIDE7XG4gICAgICAgICAgICBlbHNlIGlmICghc21sSW5kZXgpICAvLyBUb3Agcm93IC0gdHJhbnNmb3JtIGVtcHR5IGFycmF5IGludG8gbmV3IGFycmF5IHZpYSBhZGRpdGlvbnNcbiAgICAgICAgICAgICAgICB0aGlzUm93W2JpZ0luZGV4XSA9IGJpZ0luZGV4ICsgMTtcbiAgICAgICAgICAgIGVsc2UgaWYgKHNtbEFycmF5W3NtbEluZGV4IC0gMV0gPT09IGJpZ0FycmF5W2JpZ0luZGV4IC0gMV0pXG4gICAgICAgICAgICAgICAgdGhpc1Jvd1tiaWdJbmRleF0gPSBsYXN0Um93W2JpZ0luZGV4IC0gMV07ICAgICAgICAgICAgICAgICAgLy8gY29weSB2YWx1ZSAobm8gZWRpdClcbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIHZhciBub3J0aERpc3RhbmNlID0gbGFzdFJvd1tiaWdJbmRleF0gfHwgbWF4RGlzdGFuY2U7ICAgICAgIC8vIG5vdCBpbiBiaWcgKGRlbGV0aW9uKVxuICAgICAgICAgICAgICAgIHZhciB3ZXN0RGlzdGFuY2UgPSB0aGlzUm93W2JpZ0luZGV4IC0gMV0gfHwgbWF4RGlzdGFuY2U7ICAgIC8vIG5vdCBpbiBzbWFsbCAoYWRkaXRpb24pXG4gICAgICAgICAgICAgICAgdGhpc1Jvd1tiaWdJbmRleF0gPSBteU1pbihub3J0aERpc3RhbmNlLCB3ZXN0RGlzdGFuY2UpICsgMTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIHZhciBlZGl0U2NyaXB0ID0gW10sIG1lTWludXNPbmUsIG5vdEluU21sID0gW10sIG5vdEluQmlnID0gW107XG4gICAgZm9yIChzbWxJbmRleCA9IHNtbEluZGV4TWF4LCBiaWdJbmRleCA9IGJpZ0luZGV4TWF4OyBzbWxJbmRleCB8fCBiaWdJbmRleDspIHtcbiAgICAgICAgbWVNaW51c09uZSA9IGVkaXREaXN0YW5jZU1hdHJpeFtzbWxJbmRleF1bYmlnSW5kZXhdIC0gMTtcbiAgICAgICAgaWYgKGJpZ0luZGV4ICYmIG1lTWludXNPbmUgPT09IGVkaXREaXN0YW5jZU1hdHJpeFtzbWxJbmRleF1bYmlnSW5kZXgtMV0pIHtcbiAgICAgICAgICAgIG5vdEluU21sLnB1c2goZWRpdFNjcmlwdFtlZGl0U2NyaXB0Lmxlbmd0aF0gPSB7ICAgICAvLyBhZGRlZFxuICAgICAgICAgICAgICAgICdzdGF0dXMnOiBzdGF0dXNOb3RJblNtbCxcbiAgICAgICAgICAgICAgICAndmFsdWUnOiBiaWdBcnJheVstLWJpZ0luZGV4XSxcbiAgICAgICAgICAgICAgICAnaW5kZXgnOiBiaWdJbmRleCB9KTtcbiAgICAgICAgfSBlbHNlIGlmIChzbWxJbmRleCAmJiBtZU1pbnVzT25lID09PSBlZGl0RGlzdGFuY2VNYXRyaXhbc21sSW5kZXggLSAxXVtiaWdJbmRleF0pIHtcbiAgICAgICAgICAgIG5vdEluQmlnLnB1c2goZWRpdFNjcmlwdFtlZGl0U2NyaXB0Lmxlbmd0aF0gPSB7ICAgICAvLyBkZWxldGVkXG4gICAgICAgICAgICAgICAgJ3N0YXR1cyc6IHN0YXR1c05vdEluQmlnLFxuICAgICAgICAgICAgICAgICd2YWx1ZSc6IHNtbEFycmF5Wy0tc21sSW5kZXhdLFxuICAgICAgICAgICAgICAgICdpbmRleCc6IHNtbEluZGV4IH0pO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgLS1iaWdJbmRleDtcbiAgICAgICAgICAgIC0tc21sSW5kZXg7XG4gICAgICAgICAgICBpZiAoIW9wdGlvbnNbJ3NwYXJzZSddKSB7XG4gICAgICAgICAgICAgICAgZWRpdFNjcmlwdC5wdXNoKHtcbiAgICAgICAgICAgICAgICAgICAgJ3N0YXR1cyc6IFwicmV0YWluZWRcIixcbiAgICAgICAgICAgICAgICAgICAgJ3ZhbHVlJzogYmlnQXJyYXlbYmlnSW5kZXhdIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgLy8gU2V0IGEgbGltaXQgb24gdGhlIG51bWJlciBvZiBjb25zZWN1dGl2ZSBub24tbWF0Y2hpbmcgY29tcGFyaXNvbnM7IGhhdmluZyBpdCBhIG11bHRpcGxlIG9mXG4gICAgLy8gc21sSW5kZXhNYXgga2VlcHMgdGhlIHRpbWUgY29tcGxleGl0eSBvZiB0aGlzIGFsZ29yaXRobSBsaW5lYXIuXG4gICAgZmluZE1vdmVzSW5BcnJheUNvbXBhcmlzb24obm90SW5CaWcsIG5vdEluU21sLCAhb3B0aW9uc1snZG9udExpbWl0TW92ZXMnXSAmJiBzbWxJbmRleE1heCAqIDEwKTtcblxuICAgIHJldHVybiBlZGl0U2NyaXB0LnJldmVyc2UoKTtcbn1cblxuLy9cbi8vIFRoaXMgYmVjb21lcyBrby5vcHRpb25zXG4vLyAtLVxuLy9cbi8vIFRoaXMgaXMgdGhlIHJvb3QgJ29wdGlvbnMnLCB3aGljaCBtdXN0IGJlIGV4dGVuZGVkIGJ5IG90aGVycy5cblxudmFyIF9nbG9iYWw7XG5cbnRyeSB7IF9nbG9iYWwgPSB3aW5kb3c7IH0gY2F0Y2ggKGUpIHsgX2dsb2JhbCA9IGdsb2JhbDsgfVxuXG52YXIgb3B0aW9ucyA9IHtcbiAgZGVmZXJVcGRhdGVzOiBmYWxzZSxcblxuICB1c2VPbmx5TmF0aXZlRXZlbnRzOiBmYWxzZSxcblxuICBwcm90b1Byb3BlcnR5OiAnX19rb19wcm90b19fJyxcblxuICAgIC8vIE1vZGlmeSB0aGUgZGVmYXVsdCBhdHRyaWJ1dGUgZnJvbSBgZGF0YS1iaW5kYC5cbiAgZGVmYXVsdEJpbmRpbmdBdHRyaWJ1dGU6ICdkYXRhLWJpbmQnLFxuXG4gICAgLy8gRW5hYmxlL2Rpc2FibGUgPCEtLSBrbyBiaW5kaW5nOiAuLi4gLT4gc3R5bGUgYmluZGluZ3NcbiAgYWxsb3dWaXJ0dWFsRWxlbWVudHM6IHRydWUsXG5cbiAgICAvLyBHbG9iYWwgdmFyaWFibGVzIHRoYXQgY2FuIGJlIGFjY2Vzc2VkIGZyb20gYmluZGluZ3MuXG4gIGJpbmRpbmdHbG9iYWxzOiBfZ2xvYmFsLFxuXG4gICAgLy8gQW4gaW5zdGFuY2Ugb2YgdGhlIGJpbmRpbmcgcHJvdmlkZXIuXG4gIGJpbmRpbmdQcm92aWRlckluc3RhbmNlOiBudWxsLFxuXG4gICAgLy8galF1ZXJ5IHdpbGwgYmUgYXV0b21hdGljYWxseSBzZXQgdG8gX2dsb2JhbC5qUXVlcnkgaW4gYXBwbHlCaW5kaW5nc1xuICAgIC8vIGlmIGl0IGlzIChzdHJpY3RseSBlcXVhbCB0bykgdW5kZWZpbmVkLiAgU2V0IGl0IHRvIGZhbHNlIG9yIG51bGwgdG9cbiAgICAvLyBkaXNhYmxlIGF1dG9tYXRpY2FsbHkgc2V0dGluZyBqUXVlcnkuXG4gIGpRdWVyeTogX2dsb2JhbCAmJiBfZ2xvYmFsLmpRdWVyeSxcblxuICBQcm9taXNlOiBfZ2xvYmFsICYmIF9nbG9iYWwuUHJvbWlzZSxcblxuICB0YXNrU2NoZWR1bGVyOiBudWxsLFxuXG4gIGRlYnVnOiBmYWxzZSxcblxuICBnbG9iYWw6IF9nbG9iYWwsXG4gIGRvY3VtZW50OiBfZ2xvYmFsLmRvY3VtZW50LFxuXG4gICAgLy8gRmlsdGVycyBmb3IgYmluZGluZ3NcbiAgICAvLyAgIGRhdGEtYmluZD1cImV4cHJlc3Npb24gfCBmaWx0ZXJfMSB8IGZpbHRlcl8yXCJcbiAgZmlsdGVyczoge30sXG5cbiAgb25FcnJvcjogZnVuY3Rpb24gKGUpIHsgdGhyb3cgZSB9LFxuXG4gIHNldDogZnVuY3Rpb24gKG5hbWUsIHZhbHVlKSB7XG4gICAgb3B0aW9uc1tuYW1lXSA9IHZhbHVlO1xuICB9XG59O1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkob3B0aW9ucywgJyQnLCB7XG4gIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gb3B0aW9ucy5qUXVlcnkgfVxufSk7XG5cbi8vXG4vLyBFcnJvciBoYW5kbGluZ1xuLy8gLS0tXG4vL1xuLy8gVGhlIGRlZmF1bHQgb25FcnJvciBoYW5kbGVyIGlzIHRvIHJlLXRocm93LlxuZnVuY3Rpb24gY2F0Y2hGdW5jdGlvbkVycm9ycyhkZWxlZ2F0ZSkge1xuICAgIHJldHVybiBvcHRpb25zLm9uRXJyb3IgPyBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICByZXR1cm4gZGVsZWdhdGUuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAgICAgb3B0aW9ucy5vbkVycm9yKGUpO1xuICAgICAgICB9XG4gICAgfSA6IGRlbGVnYXRlO1xufVxuXG5mdW5jdGlvbiBkZWZlckVycm9yKGVycm9yKSB7XG4gICAgc2FmZVNldFRpbWVvdXQoZnVuY3Rpb24gKCkgeyBvcHRpb25zLm9uRXJyb3IoZXJyb3IpOyB9LCAwKTtcbn1cblxuXG5mdW5jdGlvbiBzYWZlU2V0VGltZW91dChoYW5kbGVyLCB0aW1lb3V0KSB7XG4gICAgcmV0dXJuIHNldFRpbWVvdXQoY2F0Y2hGdW5jdGlvbkVycm9ycyhoYW5kbGVyKSwgdGltZW91dCk7XG59XG5cbi8vXG4vLyBBc3luY2hyb25vdXMgZnVuY3Rpb25hbGl0eVxuLy8gLS0tXG5mdW5jdGlvbiB0aHJvdHRsZShjYWxsYmFjaywgdGltZW91dCkge1xuICAgIHZhciB0aW1lb3V0SW5zdGFuY2U7XG4gICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgaWYgKCF0aW1lb3V0SW5zdGFuY2UpIHtcbiAgICAgICAgICAgIHRpbWVvdXRJbnN0YW5jZSA9IHNhZmVTZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICB0aW1lb3V0SW5zdGFuY2UgPSB1bmRlZmluZWQ7XG4gICAgICAgICAgICAgICAgY2FsbGJhY2soKTtcbiAgICAgICAgICAgIH0sIHRpbWVvdXQpO1xuICAgICAgICB9XG4gICAgfTtcbn1cblxuZnVuY3Rpb24gZGVib3VuY2UoY2FsbGJhY2ssIHRpbWVvdXQpIHtcbiAgICB2YXIgdGltZW91dEluc3RhbmNlO1xuICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGNsZWFyVGltZW91dCh0aW1lb3V0SW5zdGFuY2UpO1xuICAgICAgICB0aW1lb3V0SW5zdGFuY2UgPSBzYWZlU2V0VGltZW91dChjYWxsYmFjaywgdGltZW91dCk7XG4gICAgfTtcbn1cblxuLy9cbi8vIERldGVjdGlvbiBhbmQgV29ya2Fyb3VuZHMgZm9yIEludGVybmV0IEV4cGxvcmVyXG4vL1xuLy8gRGV0ZWN0IElFIHZlcnNpb25zIGZvciBidWcgd29ya2Fyb3VuZHMgKHVzZXMgSUUgY29uZGl0aW9uYWxzLCBub3QgVUEgc3RyaW5nLCBmb3Igcm9idXN0bmVzcylcbi8vIE5vdGUgdGhhdCwgc2luY2UgSUUgMTAgZG9lcyBub3Qgc3VwcG9ydCBjb25kaXRpb25hbCBjb21tZW50cywgdGhlIGZvbGxvd2luZyBsb2dpYyBvbmx5IGRldGVjdHMgSUUgPCAxMC5cbi8vIEN1cnJlbnRseSB0aGlzIGlzIGJ5IGRlc2lnbiwgc2luY2UgSUUgMTArIGJlaGF2ZXMgY29ycmVjdGx5IHdoZW4gdHJlYXRlZCBhcyBhIHN0YW5kYXJkIGJyb3dzZXIuXG4vLyBJZiB0aGVyZSBpcyBhIGZ1dHVyZSBuZWVkIHRvIGRldGVjdCBzcGVjaWZpYyB2ZXJzaW9ucyBvZiBJRTEwKywgd2Ugd2lsbCBhbWVuZCB0aGlzLlxudmFyIGllVmVyc2lvbiA9IG9wdGlvbnMuZG9jdW1lbnQgJiYgKGZ1bmN0aW9uICgpIHtcbiAgdmFyIHZlcnNpb24gPSAzLCBkaXYgPSBvcHRpb25zLmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpLCBpRWxlbXMgPSBkaXYuZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ2knKTtcblxuICAgIC8vIEtlZXAgY29uc3RydWN0aW5nIGNvbmRpdGlvbmFsIEhUTUwgYmxvY2tzIHVudGlsIHdlIGhpdCBvbmUgdGhhdCByZXNvbHZlcyB0byBhbiBlbXB0eSBmcmFnbWVudFxuICB3aGlsZSAoXG4gICAgICAgIGRpdi5pbm5lckhUTUwgPSAnPCEtLVtpZiBndCBJRSAnICsgKCsrdmVyc2lvbikgKyAnXT48aT48L2k+PCFbZW5kaWZdLS0+JyxcbiAgICAgICAgaUVsZW1zWzBdXG4gICAgKSB7fVxuICByZXR1cm4gdmVyc2lvbiA+IDQgPyB2ZXJzaW9uIDogdW5kZWZpbmVkXG59KCkpO1xuXG52YXIgaXNJZTYgPSBpZVZlcnNpb24gPT09IDY7XG52YXIgaXNJZTcgPSBpZVZlcnNpb24gPT09IDc7XG5cbi8vXG4vLyBPYmplY3QgZnVuY3Rpb25zXG4vL1xuXG5mdW5jdGlvbiBleHRlbmQodGFyZ2V0LCBzb3VyY2UpIHtcbiAgICBpZiAoc291cmNlKSB7XG4gICAgICAgIGZvcih2YXIgcHJvcCBpbiBzb3VyY2UpIHtcbiAgICAgICAgICAgIGlmKHNvdXJjZS5oYXNPd25Qcm9wZXJ0eShwcm9wKSkge1xuICAgICAgICAgICAgICAgIHRhcmdldFtwcm9wXSA9IHNvdXJjZVtwcm9wXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gdGFyZ2V0O1xufVxuXG5mdW5jdGlvbiBvYmplY3RGb3JFYWNoKG9iaiwgYWN0aW9uKSB7XG4gICAgZm9yICh2YXIgcHJvcCBpbiBvYmopIHtcbiAgICAgICAgaWYgKG9iai5oYXNPd25Qcm9wZXJ0eShwcm9wKSkge1xuICAgICAgICAgICAgYWN0aW9uKHByb3AsIG9ialtwcm9wXSk7XG4gICAgICAgIH1cbiAgICB9XG59XG5cblxuZnVuY3Rpb24gb2JqZWN0TWFwKHNvdXJjZSwgbWFwcGluZykge1xuICAgIGlmICghc291cmNlKVxuICAgICAgICByZXR1cm4gc291cmNlO1xuICAgIHZhciB0YXJnZXQgPSB7fTtcbiAgICBmb3IgKHZhciBwcm9wIGluIHNvdXJjZSkge1xuICAgICAgICBpZiAoc291cmNlLmhhc093blByb3BlcnR5KHByb3ApKSB7XG4gICAgICAgICAgICB0YXJnZXRbcHJvcF0gPSBtYXBwaW5nKHNvdXJjZVtwcm9wXSwgcHJvcCwgc291cmNlKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gdGFyZ2V0O1xufVxuXG5cbmZ1bmN0aW9uIGdldE9iamVjdE93blByb3BlcnR5KG9iaiwgcHJvcE5hbWUpIHtcbiAgICByZXR1cm4gb2JqLmhhc093blByb3BlcnR5KHByb3BOYW1lKSA/IG9ialtwcm9wTmFtZV0gOiB1bmRlZmluZWQ7XG59XG5cblxuZnVuY3Rpb24gY2xvbmVQbGFpbk9iamVjdERlZXAob2JqLCBzZWVuKSB7XG4gICAgaWYgKCFzZWVuKSB7IHNlZW4gPSBbXTsgfVxuXG4gICAgaWYgKCFvYmogfHwgdHlwZW9mIG9iaiAhPT0gJ29iamVjdCdcbiAgICAgICAgfHwgb2JqLmNvbnN0cnVjdG9yICE9PSBPYmplY3RcbiAgICAgICAgfHwgc2Vlbi5pbmRleE9mKG9iaikgIT09IC0xKSB7XG4gICAgICAgIHJldHVybiBvYmo7XG4gICAgfVxuXG4gICAgLy8gQW55dGhpbmcgdGhhdCBtYWtlcyBpdCBiZWxvdyBpcyBhIHBsYWluIG9iamVjdCB0aGF0IGhhcyBub3QgeWV0XG4gICAgLy8gYmVlbiBzZWVuL2Nsb25lZC5cbiAgICBzZWVuLnB1c2gob2JqKTtcblxuICAgIHZhciByZXN1bHQgPSB7fTtcbiAgICBmb3IgKHZhciBwcm9wIGluIG9iaikge1xuICAgICAgICBpZiAob2JqLmhhc093blByb3BlcnR5KHByb3ApKSB7XG4gICAgICAgICAgICByZXN1bHRbcHJvcF0gPSBjbG9uZVBsYWluT2JqZWN0RGVlcChvYmpbcHJvcF0sIHNlZW4pO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiByZXN1bHQ7XG59XG5cbi8vXG4vLyBQcm90b3R5cGUgRnVuY3Rpb25zXG4vL1xudmFyIHByb3RvUHJvcGVydHkgPSBvcHRpb25zLnByb3RvUHJvcGVydHk7XG5cbnZhciBjYW5TZXRQcm90b3R5cGUgPSAoeyBfX3Byb3RvX186IFtdIH0gaW5zdGFuY2VvZiBBcnJheSk7XG5cbmZ1bmN0aW9uIHNldFByb3RvdHlwZU9mKG9iaiwgcHJvdG8pIHtcbiAgICBvYmouX19wcm90b19fID0gcHJvdG87XG4gICAgcmV0dXJuIG9iajtcbn1cblxudmFyIHNldFByb3RvdHlwZU9mT3JFeHRlbmQgPSBjYW5TZXRQcm90b3R5cGUgPyBzZXRQcm90b3R5cGVPZiA6IGV4dGVuZDtcblxuZnVuY3Rpb24gaGFzUHJvdG90eXBlKGluc3RhbmNlLCBwcm90b3R5cGUpIHtcbiAgICBpZiAoKGluc3RhbmNlID09PSBudWxsKSB8fCAoaW5zdGFuY2UgPT09IHVuZGVmaW5lZCkgfHwgKGluc3RhbmNlW3Byb3RvUHJvcGVydHldID09PSB1bmRlZmluZWQpKSByZXR1cm4gZmFsc2U7XG4gICAgaWYgKGluc3RhbmNlW3Byb3RvUHJvcGVydHldID09PSBwcm90b3R5cGUpIHJldHVybiB0cnVlO1xuICAgIHJldHVybiBoYXNQcm90b3R5cGUoaW5zdGFuY2VbcHJvdG9Qcm9wZXJ0eV0sIHByb3RvdHlwZSk7IC8vIFdhbGsgdGhlIHByb3RvdHlwZSBjaGFpblxufVxuXG4vL1xuLy8gU3RyaW5nIChhbmQgSlNPTilcbi8vXG5cblxuZnVuY3Rpb24gc3RyaW5nVHJpbSAoc3RyaW5nKSB7XG4gICAgcmV0dXJuIHN0cmluZyA9PT0gbnVsbCB8fCBzdHJpbmcgPT09IHVuZGVmaW5lZCA/ICcnIDpcbiAgICAgICAgc3RyaW5nLnRyaW0gP1xuICAgICAgICAgICAgc3RyaW5nLnRyaW0oKSA6XG4gICAgICAgICAgICBzdHJpbmcudG9TdHJpbmcoKS5yZXBsYWNlKC9eW1xcc1xceGEwXSt8W1xcc1xceGEwXSskL2csICcnKTtcbn1cblxuXG5mdW5jdGlvbiBzdHJpbmdTdGFydHNXaXRoIChzdHJpbmcsIHN0YXJ0c1dpdGgpIHtcbiAgICBzdHJpbmcgPSBzdHJpbmcgfHwgXCJcIjtcbiAgICBpZiAoc3RhcnRzV2l0aC5sZW5ndGggPiBzdHJpbmcubGVuZ3RoKVxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgcmV0dXJuIHN0cmluZy5zdWJzdHJpbmcoMCwgc3RhcnRzV2l0aC5sZW5ndGgpID09PSBzdGFydHNXaXRoO1xufVxuXG5cbmZ1bmN0aW9uIHBhcnNlSnNvbiAoanNvblN0cmluZykge1xuICAgIGlmICh0eXBlb2YganNvblN0cmluZyA9PSBcInN0cmluZ1wiKSB7XG4gICAgICAgIGpzb25TdHJpbmcgPSBzdHJpbmdUcmltKGpzb25TdHJpbmcpO1xuICAgICAgICBpZiAoanNvblN0cmluZykge1xuICAgICAgICAgICAgaWYgKEpTT04gJiYgSlNPTi5wYXJzZSkgLy8gVXNlIG5hdGl2ZSBwYXJzaW5nIHdoZXJlIGF2YWlsYWJsZVxuICAgICAgICAgICAgICAgIHJldHVybiBKU09OLnBhcnNlKGpzb25TdHJpbmcpO1xuICAgICAgICAgICAgcmV0dXJuIChuZXcgRnVuY3Rpb24oXCJyZXR1cm4gXCIgKyBqc29uU3RyaW5nKSkoKTsgLy8gRmFsbGJhY2sgb24gbGVzcyBzYWZlIHBhcnNpbmcgZm9yIG9sZGVyIGJyb3dzZXJzXG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIG51bGw7XG59XG5cblxuZnVuY3Rpb24gc3RyaW5naWZ5SnNvbiAoZGF0YSwgcmVwbGFjZXIsIHNwYWNlKSB7ICAgLy8gcmVwbGFjZXIgYW5kIHNwYWNlIGFyZSBvcHRpb25hbFxuICAgIGlmICghSlNPTiB8fCAhSlNPTi5zdHJpbmdpZnkpXG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIkNhbm5vdCBmaW5kIEpTT04uc3RyaW5naWZ5KCkuIFNvbWUgYnJvd3NlcnMgKGUuZy4sIElFIDwgOCkgZG9uJ3Qgc3VwcG9ydCBpdCBuYXRpdmVseSwgYnV0IHlvdSBjYW4gb3ZlcmNvbWUgdGhpcyBieSBhZGRpbmcgYSBzY3JpcHQgcmVmZXJlbmNlIHRvIGpzb24yLmpzLCBkb3dubG9hZGFibGUgZnJvbSBodHRwOi8vd3d3Lmpzb24ub3JnL2pzb24yLmpzXCIpO1xuICAgIHJldHVybiBKU09OLnN0cmluZ2lmeSh0eXBlb2YgZGF0YSA9PT0gJ2Z1bmN0aW9uJyA/IGRhdGEoKSA6IGRhdGEsIHJlcGxhY2VyLCBzcGFjZSk7XG59XG5cbi8vXG4vLyBFUzYgU3ltYm9sc1xuLy9cblxudmFyIHVzZVN5bWJvbHMgPSB0eXBlb2YgU3ltYm9sID09PSAnZnVuY3Rpb24nO1xuXG5mdW5jdGlvbiBjcmVhdGVTeW1ib2xPclN0cmluZyhpZGVudGlmaWVyKSB7XG4gICAgcmV0dXJuIHVzZVN5bWJvbHMgPyBTeW1ib2woaWRlbnRpZmllcikgOiBpZGVudGlmaWVyO1xufVxuXG4vL1xuLy8gRE9NIC0gQ1NTXG4vL1xuXG4vLyBGb3IgZGV0YWlscyBvbiB0aGUgcGF0dGVybiBmb3IgY2hhbmdpbmcgbm9kZSBjbGFzc2VzXG4vLyBzZWU6IGh0dHBzOi8vZ2l0aHViLmNvbS9rbm9ja291dC9rbm9ja291dC9pc3N1ZXMvMTU5N1xudmFyIGNzc0NsYXNzTmFtZVJlZ2V4ID0gL1xcUysvZztcblxuXG5mdW5jdGlvbiB0b2dnbGVEb21Ob2RlQ3NzQ2xhc3Mobm9kZSwgY2xhc3NOYW1lcywgc2hvdWxkSGF2ZUNsYXNzKSB7XG4gICAgdmFyIGFkZE9yUmVtb3ZlRm47XG4gICAgaWYgKCFjbGFzc05hbWVzKSB7IHJldHVybjsgfVxuICAgIGlmICh0eXBlb2Ygbm9kZS5jbGFzc0xpc3QgPT09ICdvYmplY3QnKSB7XG4gICAgICAgIGFkZE9yUmVtb3ZlRm4gPSBub2RlLmNsYXNzTGlzdFtzaG91bGRIYXZlQ2xhc3MgPyAnYWRkJyA6ICdyZW1vdmUnXTtcbiAgICAgICAgYXJyYXlGb3JFYWNoKGNsYXNzTmFtZXMubWF0Y2goY3NzQ2xhc3NOYW1lUmVnZXgpLCBmdW5jdGlvbihjbGFzc05hbWUpIHtcbiAgICAgICAgICAgIGFkZE9yUmVtb3ZlRm4uY2FsbChub2RlLmNsYXNzTGlzdCwgY2xhc3NOYW1lKTtcbiAgICAgICAgfSk7XG4gICAgfSBlbHNlIGlmICh0eXBlb2Ygbm9kZS5jbGFzc05hbWVbJ2Jhc2VWYWwnXSA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgLy8gU1ZHIHRhZyAuY2xhc3NOYW1lcyBpcyBhbiBTVkdBbmltYXRlZFN0cmluZyBpbnN0YW5jZVxuICAgICAgICB0b2dnbGVPYmplY3RDbGFzc1Byb3BlcnR5U3RyaW5nKG5vZGUuY2xhc3NOYW1lLCAnYmFzZVZhbCcsIGNsYXNzTmFtZXMsIHNob3VsZEhhdmVDbGFzcyk7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgLy8gbm9kZS5jbGFzc05hbWUgb3VnaHQgdG8gYmUgYSBzdHJpbmcuXG4gICAgICAgIHRvZ2dsZU9iamVjdENsYXNzUHJvcGVydHlTdHJpbmcobm9kZSwgJ2NsYXNzTmFtZScsIGNsYXNzTmFtZXMsIHNob3VsZEhhdmVDbGFzcyk7XG4gICAgfVxufVxuXG5cbmZ1bmN0aW9uIHRvZ2dsZU9iamVjdENsYXNzUHJvcGVydHlTdHJpbmcob2JqLCBwcm9wLCBjbGFzc05hbWVzLCBzaG91bGRIYXZlQ2xhc3MpIHtcbiAgICAvLyBvYmovcHJvcCBpcyBlaXRoZXIgYSBub2RlLydjbGFzc05hbWUnIG9yIGEgU1ZHQW5pbWF0ZWRTdHJpbmcvJ2Jhc2VWYWwnLlxuICAgIHZhciBjdXJyZW50Q2xhc3NOYW1lcyA9IG9ialtwcm9wXS5tYXRjaChjc3NDbGFzc05hbWVSZWdleCkgfHwgW107XG4gICAgYXJyYXlGb3JFYWNoKGNsYXNzTmFtZXMubWF0Y2goY3NzQ2xhc3NOYW1lUmVnZXgpLCBmdW5jdGlvbihjbGFzc05hbWUpIHtcbiAgICAgICAgYWRkT3JSZW1vdmVJdGVtKGN1cnJlbnRDbGFzc05hbWVzLCBjbGFzc05hbWUsIHNob3VsZEhhdmVDbGFzcyk7XG4gICAgfSk7XG4gICAgb2JqW3Byb3BdID0gY3VycmVudENsYXNzTmFtZXMuam9pbihcIiBcIik7XG59XG5cbi8vXG4vLyBqUXVlcnlcbi8vXG4vLyBUT0RPOiBkZXByZWNhdGUgaW4gZmF2b3VyIG9mIG9wdGlvbnMuJFxuXG52YXIgalF1ZXJ5SW5zdGFuY2UgPSBvcHRpb25zLmdsb2JhbCAmJiBvcHRpb25zLmdsb2JhbC5qUXVlcnk7XG5cbmZ1bmN0aW9uIGpRdWVyeVNldEluc3RhbmNlKGpxdWVyeSkge1xuICAgIG9wdGlvbnMualF1ZXJ5ID0galF1ZXJ5SW5zdGFuY2UgPSBqcXVlcnk7XG59XG5cbi8vXG4vLyAgVGFza3MgTWljcm8tc2NoZWR1bGVyXG4vLyAgPT09XG4vL1xuLyogZXNsaW50IG5vLWNvbmQtYXNzaWduOiAwICovXG52YXIgdGFza1F1ZXVlID0gW107XG52YXIgdGFza1F1ZXVlTGVuZ3RoID0gMDtcbnZhciBuZXh0SGFuZGxlID0gMTtcbnZhciBuZXh0SW5kZXhUb1Byb2Nlc3MgPSAwO1xudmFyIHcgPSBvcHRpb25zLmdsb2JhbDtcblxuaWYgKHcgJiYgdy5NdXRhdGlvbk9ic2VydmVyICYmICEody5uYXZpZ2F0b3IgJiYgdy5uYXZpZ2F0b3Iuc3RhbmRhbG9uZSkpIHtcbiAgICAvLyBDaHJvbWUgMjcrLCBGaXJlZm94IDE0KywgSUUgMTErLCBPcGVyYSAxNSssIFNhZmFyaSA2LjErLCBub2RlXG4gICAgLy8gRnJvbSBodHRwczovL2dpdGh1Yi5jb20vcGV0a2FhbnRvbm92L2JsdWViaXJkICogQ29weXJpZ2h0IChjKSAyMDE0IFBldGthIEFudG9ub3YgKiBMaWNlbnNlOiBNSVRcbiAgICBvcHRpb25zLnRhc2tTY2hlZHVsZXIgPSAoZnVuY3Rpb24gKGNhbGxiYWNrKSB7XG4gICAgICAgIHZhciBkaXYgPSB3LmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgICAgIG5ldyBNdXRhdGlvbk9ic2VydmVyKGNhbGxiYWNrKS5vYnNlcnZlKGRpdiwge2F0dHJpYnV0ZXM6IHRydWV9KTtcbiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uICgpIHsgZGl2LmNsYXNzTGlzdC50b2dnbGUoXCJmb29cIik7IH07XG4gICAgfSkoc2NoZWR1bGVkUHJvY2Vzcyk7XG59IGVsc2UgaWYgKHcgJiYgdy5kb2N1bWVudCAmJiBcIm9ucmVhZHlzdGF0ZWNoYW5nZVwiIGluIHcuZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInNjcmlwdFwiKSkge1xuICAgIC8vIElFIDYtMTBcbiAgICAvLyBGcm9tIGh0dHBzOi8vZ2l0aHViLmNvbS9ZdXp1SlMvc2V0SW1tZWRpYXRlICogQ29weXJpZ2h0IChjKSAyMDEyIEJhcm5lc2FuZG5vYmxlLmNvbSwgbGxjLCBEb25hdm9uIFdlc3QsIGFuZCBEb21lbmljIERlbmljb2xhICogTGljZW5zZTogTUlUXG4gICAgb3B0aW9ucy50YXNrU2NoZWR1bGVyID0gZnVuY3Rpb24gKGNhbGxiYWNrKSB7XG4gICAgICAgIHZhciBzY3JpcHQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic2NyaXB0XCIpO1xuICAgICAgICBzY3JpcHQub25yZWFkeXN0YXRlY2hhbmdlID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgc2NyaXB0Lm9ucmVhZHlzdGF0ZWNoYW5nZSA9IG51bGw7XG4gICAgICAgICAgICBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQucmVtb3ZlQ2hpbGQoc2NyaXB0KTtcbiAgICAgICAgICAgIHNjcmlwdCA9IG51bGw7XG4gICAgICAgICAgICBjYWxsYmFjaygpO1xuICAgICAgICB9O1xuICAgICAgICBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuYXBwZW5kQ2hpbGQoc2NyaXB0KTtcbiAgICB9O1xufSBlbHNlIHtcbiAgICBvcHRpb25zLnRhc2tTY2hlZHVsZXIgPSBmdW5jdGlvbiAoY2FsbGJhY2spIHtcbiAgICAgICAgc2V0VGltZW91dChjYWxsYmFjaywgMCk7XG4gICAgfTtcbn1cblxuZnVuY3Rpb24gcHJvY2Vzc1Rhc2tzKCkge1xuICAgIGlmICh0YXNrUXVldWVMZW5ndGgpIHtcbiAgICAgICAgLy8gRWFjaCBtYXJrIHJlcHJlc2VudHMgdGhlIGVuZCBvZiBhIGxvZ2ljYWwgZ3JvdXAgb2YgdGFza3MgYW5kIHRoZSBudW1iZXIgb2YgdGhlc2UgZ3JvdXBzIGlzXG4gICAgICAgIC8vIGxpbWl0ZWQgdG8gcHJldmVudCB1bmNoZWNrZWQgcmVjdXJzaW9uLlxuICAgICAgICB2YXIgbWFyayA9IHRhc2tRdWV1ZUxlbmd0aCwgY291bnRNYXJrcyA9IDA7XG5cbiAgICAgICAgLy8gbmV4dEluZGV4VG9Qcm9jZXNzIGtlZXBzIHRyYWNrIG9mIHdoZXJlIHdlIGFyZSBpbiB0aGUgcXVldWU7IHByb2Nlc3NUYXNrcyBjYW4gYmUgY2FsbGVkIHJlY3Vyc2l2ZWx5IHdpdGhvdXQgaXNzdWVcbiAgICAgICAgZm9yICh2YXIgdGFzazsgbmV4dEluZGV4VG9Qcm9jZXNzIDwgdGFza1F1ZXVlTGVuZ3RoOyApIHtcbiAgICAgICAgICAgIGlmICh0YXNrID0gdGFza1F1ZXVlW25leHRJbmRleFRvUHJvY2VzcysrXSkge1xuICAgICAgICAgICAgICAgIGlmIChuZXh0SW5kZXhUb1Byb2Nlc3MgPiBtYXJrKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmICgrK2NvdW50TWFya3MgPj0gNTAwMCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgbmV4dEluZGV4VG9Qcm9jZXNzID0gdGFza1F1ZXVlTGVuZ3RoOyAgIC8vIHNraXAgYWxsIHRhc2tzIHJlbWFpbmluZyBpbiB0aGUgcXVldWUgc2luY2UgYW55IG9mIHRoZW0gY291bGQgYmUgY2F1c2luZyB0aGUgcmVjdXJzaW9uXG4gICAgICAgICAgICAgICAgICAgICAgICBkZWZlckVycm9yKEVycm9yKFwiJ1RvbyBtdWNoIHJlY3Vyc2lvbicgYWZ0ZXIgcHJvY2Vzc2luZyBcIiArIGNvdW50TWFya3MgKyBcIiB0YXNrIGdyb3Vwcy5cIikpO1xuICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgbWFyayA9IHRhc2tRdWV1ZUxlbmd0aDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICAgICAgdGFzaygpO1xuICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGV4KSB7XG4gICAgICAgICAgICAgICAgICAgIGRlZmVyRXJyb3IoZXgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbn1cblxuZnVuY3Rpb24gc2NoZWR1bGVkUHJvY2VzcygpIHtcbiAgICBwcm9jZXNzVGFza3MoKTtcblxuICAgIC8vIFJlc2V0IHRoZSBxdWV1ZVxuICAgIG5leHRJbmRleFRvUHJvY2VzcyA9IHRhc2tRdWV1ZUxlbmd0aCA9IHRhc2tRdWV1ZS5sZW5ndGggPSAwO1xufVxuXG5mdW5jdGlvbiBzY2hlZHVsZVRhc2tQcm9jZXNzaW5nKCkge1xuICAgIG9wdGlvbnMudGFza1NjaGVkdWxlcihzY2hlZHVsZWRQcm9jZXNzKTtcbn1cblxuXG5mdW5jdGlvbiBzY2hlZHVsZShmdW5jKSB7XG4gICAgaWYgKCF0YXNrUXVldWVMZW5ndGgpIHtcbiAgICAgICAgc2NoZWR1bGVUYXNrUHJvY2Vzc2luZygpO1xuICAgIH1cblxuICAgIHRhc2tRdWV1ZVt0YXNrUXVldWVMZW5ndGgrK10gPSBmdW5jO1xuICAgIHJldHVybiBuZXh0SGFuZGxlKys7XG59XG5cbmZ1bmN0aW9uIGNhbmNlbChoYW5kbGUpIHtcbiAgICB2YXIgaW5kZXggPSBoYW5kbGUgLSAobmV4dEhhbmRsZSAtIHRhc2tRdWV1ZUxlbmd0aCk7XG4gICAgaWYgKGluZGV4ID49IG5leHRJbmRleFRvUHJvY2VzcyAmJiBpbmRleCA8IHRhc2tRdWV1ZUxlbmd0aCkge1xuICAgICAgICB0YXNrUXVldWVbaW5kZXhdID0gbnVsbDtcbiAgICB9XG59XG5cbi8vIEZvciB0ZXN0aW5nIG9ubHk6IHJlc2V0IHRoZSBxdWV1ZSBhbmQgcmV0dXJuIHRoZSBwcmV2aW91cyBxdWV1ZSBsZW5ndGhcbmZ1bmN0aW9uIHJlc2V0Rm9yVGVzdGluZygpIHtcbiAgICB2YXIgbGVuZ3RoID0gdGFza1F1ZXVlTGVuZ3RoIC0gbmV4dEluZGV4VG9Qcm9jZXNzO1xuICAgIG5leHRJbmRleFRvUHJvY2VzcyA9IHRhc2tRdWV1ZUxlbmd0aCA9IHRhc2tRdWV1ZS5sZW5ndGggPSAwO1xuICAgIHJldHVybiBsZW5ndGg7XG59XG5cblxuXG5cbnZhciB0YXNrcyA9IE9iamVjdC5mcmVlemUoe1xuXHRzY2hlZHVsZTogc2NoZWR1bGUsXG5cdGNhbmNlbDogY2FuY2VsLFxuXHRyZXNldEZvclRlc3Rpbmc6IHJlc2V0Rm9yVGVzdGluZyxcblx0cnVuRWFybHk6IHByb2Nlc3NUYXNrc1xufSk7XG5cbi8qXHJcbiAgdGtvLnV0aWxcclxuICA9PT1cclxuXHJcblxyXG4qL1xyXG4vLyBET007XHJcbi8qXHJcbmV4cG9ydCAqIGZyb20gJy4vZG9tL2V2ZW50LmpzJztcclxuZXhwb3J0ICogZnJvbSAnLi9kb20vaW5mby5qcyc7XHJcbmV4cG9ydCAqIGZyb20gJy4vZG9tL21hbmlwdWxhdGlvbi5qcyc7XHJcbmV4cG9ydCAqIGZyb20gJy4vZG9tL2ZpeGVzLmpzJztcclxuZXhwb3J0ICogZnJvbSAnLi9kb20vaHRtbC5qcyc7XHJcbmV4cG9ydCAqIGZyb20gJy4vZG9tL2Rpc3Bvc2FsLmpzJztcclxuXHJcbi8vIFN1Yi1Nb2R1bGVzO1xyXG5pbXBvcnQgKiBhcyBtZW1vaXphdGlvbiBmcm9tICcuL21lbW9pemF0aW9uJztcclxuaW1wb3J0ICogYXMgdGFza3MgZnJvbSAnLi90YXNrcy5qcyc7XHJcbmltcG9ydCAqIGFzIHZpcnR1YWxFbGVtZW50cyBmcm9tICcuL2RvbS92aXJ0dWFsRWxlbWVudHMuanMnO1xyXG5pbXBvcnQgKiBhcyBkb21EYXRhIGZyb20gJy4vZG9tL2RhdGEuanMnO1xyXG5cclxuZXhwb3J0IHt0YXNrcywgdmlydHVhbEVsZW1lbnRzLCBkb21EYXRhLCBtZW1vaXphdGlvbn07XHJcbiovXG5cbmV4cG9ydCB7IHRhc2tzLCBqUXVlcnlTZXRJbnN0YW5jZSwgb3B0aW9ucywgYXJyYXlGb3JFYWNoLCBhcnJheUluZGV4T2YsIGFycmF5Rmlyc3QsIGFycmF5UmVtb3ZlSXRlbSwgYXJyYXlHZXREaXN0aW5jdFZhbHVlcywgYXJyYXlNYXAsIGFycmF5RmlsdGVyLCBhcnJheVB1c2hBbGwsIGFkZE9yUmVtb3ZlSXRlbSwgbWFrZUFycmF5LCByYW5nZSwgZmluZE1vdmVzSW5BcnJheUNvbXBhcmlzb24sIGNvbXBhcmVBcnJheXMsIHRocm90dGxlLCBkZWJvdW5jZSwgY2F0Y2hGdW5jdGlvbkVycm9ycywgZGVmZXJFcnJvciwgc2FmZVNldFRpbWVvdXQsIGllVmVyc2lvbiwgaXNJZTYsIGlzSWU3LCBleHRlbmQsIG9iamVjdEZvckVhY2gsIG9iamVjdE1hcCwgZ2V0T2JqZWN0T3duUHJvcGVydHksIGNsb25lUGxhaW5PYmplY3REZWVwLCBjYW5TZXRQcm90b3R5cGUsIHNldFByb3RvdHlwZU9mLCBzZXRQcm90b3R5cGVPZk9yRXh0ZW5kLCBoYXNQcm90b3R5cGUsIHN0cmluZ1RyaW0sIHN0cmluZ1N0YXJ0c1dpdGgsIHBhcnNlSnNvbiwgc3RyaW5naWZ5SnNvbiwgdXNlU3ltYm9scywgY3JlYXRlU3ltYm9sT3JTdHJpbmcsIHRvZ2dsZURvbU5vZGVDc3NDbGFzcyB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dGtvLnV0aWxzLmpzLm1hcFxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIGM6L1VzZXJzL3BtL0Rvd25sb2Fkcy9yZWFjdC9qcy1mcmFtZXdvcmstYmVuY2htYXJrL2tvNi9zcmMvdGtvL3Rrby51dGlscy5qcyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBREE7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQURBO0FBSUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQURBO0FBSUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFEQTtBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBREE7QUFJQTtBQUNBO0FBQ0E7QUFDQTtBQUlBO0FBREE7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQURBO0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBSUE7QUFDQTtBQUVBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQVNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBR0E7QUFDQTtBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQXpDQTtBQUNBO0FBMkNBO0FBQ0E7QUFBQTtBQUFBO0FBREE7QUFDQTtBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFJQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFJQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFBQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBSUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUpBO0FBQ0E7QUFNQTs7Ozs7O0FBTUE7QUFDQTs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFpQkE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///1\n");

/***/ }),
/* 2 */
/*!**************************************************************************************!*\
  !*** c:/Users/pm/Downloads/react/js-framework-benchmark/ko6/src/tko/tko.computed.js ***!
  \**************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.throttleExtender = exports.pureComputed = exports.isPureComputed = exports.isComputed = exports.computed = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _tkoUtils = __webpack_require__(/*! ./tko.utils.js */ 1);\n\nvar _tkoObservable = __webpack_require__(/*! ./tko.observable.js */ 0);\n\n//\n// Computed Observable Values\n//\n// (before tko, `computed` was also known as `dependentObservable`)\n//\nvar computedState = (0, _tkoUtils.createSymbolOrString)('_state');\n\nfunction computed(evaluatorFunctionOrOptions, evaluatorFunctionTarget, options$$1) {\n  if ((typeof evaluatorFunctionOrOptions === 'undefined' ? 'undefined' : _typeof(evaluatorFunctionOrOptions)) === 'object') {\n    // Single-parameter syntax - everything is on this \"options\" param\n    options$$1 = evaluatorFunctionOrOptions;\n  } else {\n    // Multi-parameter syntax - construct the options according to the params passed\n    options$$1 = options$$1 || {};\n    if (evaluatorFunctionOrOptions) {\n      options$$1.read = evaluatorFunctionOrOptions;\n    }\n  }\n  if (typeof options$$1.read !== 'function') {\n    throw Error('Pass a function that returns the value of the computed');\n  }\n\n  var writeFunction = options$$1.write;\n  var state = {\n    latestValue: undefined,\n    isStale: true,\n    isBeingEvaluated: false,\n    suppressDisposalUntilDisposeWhenReturnsFalse: false,\n    isDisposed: false,\n    pure: false,\n    isSleeping: false,\n    readFunction: options$$1.read,\n    evaluatorFunctionTarget: evaluatorFunctionTarget || options$$1.owner,\n    disposeWhenNodeIsRemoved: options$$1.disposeWhenNodeIsRemoved || options$$1.disposeWhenNodeIsRemoved || null,\n    disposeWhen: options$$1.disposeWhen || options$$1.disposeWhen,\n    domNodeDisposalCallback: null,\n    dependencyTracking: {},\n    dependenciesCount: 0,\n    evaluationTimeoutInstance: null\n  };\n\n  function computedObservable() {\n    if (arguments.length > 0) {\n      if (typeof writeFunction === 'function') {\n        // Writing a value\n        writeFunction.apply(state.evaluatorFunctionTarget, arguments);\n      } else {\n        throw new Error(\"Cannot write a value to a computed unless you specify a 'write' option. If you wish to read the current value, don't pass any parameters.\");\n      }\n      return this; // Permits chained assignments\n    } else {\n      // Reading the value\n      _tkoObservable.dependencyDetection.registerDependency(computedObservable);\n      if (state.isStale || state.isSleeping && computedObservable.haveDependenciesChanged()) {\n        computedObservable.evaluateImmediate();\n      }\n      return state.latestValue;\n    }\n  }\n\n  computedObservable[computedState] = state;\n  computedObservable.hasWriteFunction = typeof writeFunction === 'function';\n\n  // Inherit from 'subscribable'\n  if (!_tkoUtils.canSetPrototype) {\n    // 'subscribable' won't be on the prototype chain unless we put it there directly\n    (0, _tkoUtils.extend)(computedObservable, _tkoObservable.subscribable.fn);\n  }\n  _tkoObservable.subscribable.fn.init(computedObservable);\n\n  // Inherit from 'computed'\n  (0, _tkoUtils.setPrototypeOfOrExtend)(computedObservable, computed.fn);\n\n  if (options$$1.pure) {\n    state.pure = true;\n    state.isSleeping = true; // Starts off sleeping; will awake on the first subscription\n    (0, _tkoUtils.extend)(computedObservable, pureComputedOverrides);\n  } else if (options$$1.deferEvaluation) {\n    (0, _tkoUtils.extend)(computedObservable, deferEvaluationOverrides);\n  }\n\n  if (_tkoUtils.options.deferUpdates) {\n    _tkoObservable.extenders.deferred(computedObservable, true);\n  }\n\n  if (_tkoUtils.options.debug) {\n    // #1731 - Aid debugging by exposing the computed's options\n    computedObservable._options = options$$1;\n  }\n\n  if (state.disposeWhenNodeIsRemoved) {\n    // Since this computed is associated with a DOM node, and we don't want to dispose the computed\n    // until the DOM node is *removed* from the document (as opposed to never having been in the document),\n    // we'll prevent disposal until \"disposeWhen\" first returns false.\n    state.suppressDisposalUntilDisposeWhenReturnsFalse = true;\n\n    // disposeWhenNodeIsRemoved: true can be used to opt into the \"only dispose after first false result\"\n    // behaviour even if there's no specific node to watch. In that case, clear the option so we don't try\n    // to watch for a non-node's disposal. This technique is intended for KO's internal use only and shouldn't\n    // be documented or used by application code, as it's likely to change in a future version of KO.\n    if (!state.disposeWhenNodeIsRemoved.nodeType) {\n      state.disposeWhenNodeIsRemoved = null;\n    }\n  }\n\n  // Evaluate, unless sleeping or deferEvaluation is true\n  if (!state.isSleeping && !options$$1.deferEvaluation) {\n    computedObservable.evaluateImmediate();\n  }\n\n  return computedObservable;\n}\n\n// Utility function that disposes a given dependencyTracking entry\nfunction computedDisposeDependencyCallback(id, entryToDispose) {\n  if (entryToDispose !== null && entryToDispose.dispose) {\n    entryToDispose.dispose();\n  }\n}\n\n// This function gets called each time a dependency is detected while evaluating a computed.\n// It's factored out as a shared function to avoid creating unnecessary function instances during evaluation.\nfunction computedBeginDependencyDetectionCallback(subscribable$$1, id) {\n  var computedObservable = this.computedObservable,\n      state = computedObservable[computedState];\n  if (!state.isDisposed) {\n    if (this.disposalCount && this.disposalCandidates[id]) {\n      // Don't want to dispose this subscription, as it's still being used\n      computedObservable.addDependencyTracking(id, subscribable$$1, this.disposalCandidates[id]);\n      this.disposalCandidates[id] = null; // No need to actually delete the property - disposalCandidates is a transient object anyway\n      --this.disposalCount;\n    } else if (!state.dependencyTracking[id]) {\n      // Brand new subscription - add it\n      computedObservable.addDependencyTracking(id, subscribable$$1, state.isSleeping ? { _target: subscribable$$1 } : computedObservable.subscribeToDependency(subscribable$$1));\n    }\n  }\n}\n\ncomputed.fn = {\n  equalityComparer: _tkoObservable.valuesArePrimitiveAndEqual,\n  getDependenciesCount: function getDependenciesCount() {\n    return this[computedState].dependenciesCount;\n  },\n  addDependencyTracking: function addDependencyTracking(id, target, trackingObj) {\n    if (this[computedState].pure && target === this) {\n      throw Error(\"A 'pure' computed must not be called recursively\");\n    }\n\n    this[computedState].dependencyTracking[id] = trackingObj;\n    trackingObj._order = this[computedState].dependenciesCount++;\n    trackingObj._version = target.getVersion();\n  },\n  haveDependenciesChanged: function haveDependenciesChanged() {\n    var id,\n        dependency,\n        dependencyTracking = this[computedState].dependencyTracking;\n    for (id in dependencyTracking) {\n      if (dependencyTracking.hasOwnProperty(id)) {\n        dependency = dependencyTracking[id];\n        if (dependency._target.hasChanged(dependency._version)) {\n          return true;\n        }\n      }\n    }\n  },\n  markDirty: function markDirty() {\n    // Process \"dirty\" events if we can handle delayed notifications\n    if (this._evalDelayed && !this[computedState].isBeingEvaluated) {\n      this._evalDelayed();\n    }\n  },\n  isActive: function isActive() {\n    return this[computedState].isStale || this[computedState].dependenciesCount > 0;\n  },\n  respondToChange: function respondToChange() {\n    // Ignore \"change\" events if we've already scheduled a delayed notification\n    if (!this._notificationIsPending) {\n      this.evaluatePossiblyAsync();\n    }\n  },\n  subscribeToDependency: function subscribeToDependency(target) {\n    if (target._deferUpdates && !this[computedState].disposeWhenNodeIsRemoved) {\n      var dirtySub = target.subscribe(this.markDirty, this, 'dirty'),\n          changeSub = target.subscribe(this.respondToChange, this);\n      return {\n        _target: target,\n        dispose: function dispose() {\n          dirtySub.dispose();\n          changeSub.dispose();\n        }\n      };\n    } else {\n      return target.subscribe(this.evaluatePossiblyAsync, this);\n    }\n  },\n  evaluatePossiblyAsync: function evaluatePossiblyAsync() {\n    var computedObservable = this,\n        throttleEvaluationTimeout = computedObservable.throttleEvaluation;\n    if (throttleEvaluationTimeout && throttleEvaluationTimeout >= 0) {\n      clearTimeout(this[computedState].evaluationTimeoutInstance);\n      this[computedState].evaluationTimeoutInstance = (0, _tkoUtils.safeSetTimeout)(function () {\n        computedObservable.evaluateImmediate(true /* notifyChange */);\n      }, throttleEvaluationTimeout);\n    } else if (computedObservable._evalDelayed) {\n      computedObservable._evalDelayed();\n    } else {\n      computedObservable.evaluateImmediate(true /* notifyChange */);\n    }\n  },\n  evaluateImmediate: function evaluateImmediate(notifyChange) {\n    var computedObservable = this,\n        state = computedObservable[computedState],\n        disposeWhen = state.disposeWhen;\n\n    if (state.isBeingEvaluated) {\n      // If the evaluation of a ko.computed causes side effects, it's possible that it will trigger its own re-evaluation.\n      // This is not desirable (it's hard for a developer to realise a chain of dependencies might cause this, and they almost\n      // certainly didn't intend infinite re-evaluations). So, for predictability, we simply prevent ko.computeds from causing\n      // their own re-evaluation. Further discussion at https://github.com/SteveSanderson/knockout/pull/387\n      return;\n    }\n\n    // Do not evaluate (and possibly capture new dependencies) if disposed\n    if (state.isDisposed) {\n      return;\n    }\n\n    // It just did return false, so we can stop suppressing now\n    state.suppressDisposalUntilDisposeWhenReturnsFalse = false;\n\n    state.isBeingEvaluated = true;\n    try {\n      this.evaluateImmediate_CallReadWithDependencyDetection(notifyChange);\n    } finally {\n      state.isBeingEvaluated = false;\n    }\n\n    if (!state.dependenciesCount) {\n      computedObservable.dispose();\n    }\n  },\n  evaluateImmediate_CallReadWithDependencyDetection: function evaluateImmediate_CallReadWithDependencyDetection(notifyChange) {\n    // This function is really just part of the evaluateImmediate logic. You would never call it from anywhere else.\n    // Factoring it out into a separate function means it can be independent of the try/catch block in evaluateImmediate,\n    // which contributes to saving about 40% off the CPU overhead of computed evaluation (on V8 at least).\n\n    var computedObservable = this,\n        state = computedObservable[computedState];\n\n    // Initially, we assume that none of the subscriptions are still being used (i.e., all are candidates for disposal).\n    // Then, during evaluation, we cross off any that are in fact still being used.\n    var isInitial = state.pure ? undefined : !state.dependenciesCount,\n        // If we're evaluating when there are no previous dependencies, it must be the first time\n    dependencyDetectionContext = {\n      computedObservable: computedObservable,\n      disposalCandidates: state.dependencyTracking,\n      disposalCount: state.dependenciesCount\n    };\n\n    _tkoObservable.dependencyDetection.begin({\n      callbackTarget: dependencyDetectionContext,\n      callback: computedBeginDependencyDetectionCallback,\n      computed: computedObservable,\n      isInitial: isInitial\n    });\n\n    state.dependencyTracking = {};\n    state.dependenciesCount = 0;\n\n    var newValue = this.evaluateImmediate_CallReadThenEndDependencyDetection(state, dependencyDetectionContext);\n\n    if (computedObservable.isDifferent(state.latestValue, newValue)) {\n      if (!state.isSleeping) {\n        computedObservable.notifySubscribers(state.latestValue, 'beforeChange');\n      }\n\n      state.latestValue = newValue;\n\n      if (state.isSleeping) {\n        computedObservable.updateVersion();\n      } else if (notifyChange) {\n        computedObservable.notifySubscribers(state.latestValue);\n      }\n    }\n\n    if (isInitial) {\n      computedObservable.notifySubscribers(state.latestValue, 'awake');\n    }\n  },\n  evaluateImmediate_CallReadThenEndDependencyDetection: function evaluateImmediate_CallReadThenEndDependencyDetection(state, dependencyDetectionContext) {\n    // This function is really part of the evaluateImmediate_CallReadWithDependencyDetection logic.\n    // You'd never call it from anywhere else. Factoring it out means that evaluateImmediate_CallReadWithDependencyDetection\n    // can be independent of try/finally blocks, which contributes to saving about 40% off the CPU\n    // overhead of computed evaluation (on V8 at least).\n\n    try {\n      var readFunction = state.readFunction;\n      return state.evaluatorFunctionTarget ? readFunction.call(state.evaluatorFunctionTarget) : readFunction();\n    } finally {\n      _tkoObservable.dependencyDetection.end();\n\n      // For each subscription no longer being used, remove it from the active subscriptions list and dispose it\n      if (dependencyDetectionContext.disposalCount && !state.isSleeping) {\n        (0, _tkoUtils.objectForEach)(dependencyDetectionContext.disposalCandidates, computedDisposeDependencyCallback);\n      }\n\n      state.isStale = false;\n    }\n  },\n  peek: function peek() {\n    // Peek won't re-evaluate, except while the computed is sleeping or to get the initial value when \"deferEvaluation\" is set.\n    var state = this[computedState];\n    if (state.isStale && !state.dependenciesCount || state.isSleeping && this.haveDependenciesChanged()) {\n      this.evaluateImmediate();\n    }\n    return state.latestValue;\n  },\n  limit: function limit(limitFunction) {\n    // Override the limit function with one that delays evaluation as well\n    _tkoObservable.subscribable.fn.limit.call(this, limitFunction);\n    this._evalDelayed = function () {\n      this._limitBeforeChange(this[computedState].latestValue);\n\n      this[computedState].isStale = true; // Mark as dirty\n\n      // Pass the observable to the \"limit\" code, which will access it when\n      // it's time to do the notification.\n      this._limitChange(this);\n    };\n  },\n  dispose: function dispose() {\n    var state = this[computedState];\n    if (!state.isSleeping && state.dependencyTracking) {\n      (0, _tkoUtils.objectForEach)(state.dependencyTracking, function (id, dependency) {\n        if (dependency.dispose) {\n          dependency.dispose();\n        }\n      });\n    }\n    state.dependencyTracking = null;\n    state.dependenciesCount = 0;\n    state.isDisposed = true;\n    state.isStale = false;\n    state.isSleeping = false;\n    state.disposeWhenNodeIsRemoved = null;\n    state.readFunction = null;\n    if (_tkoUtils.options.debug) {\n      this._options = null;\n    }\n  }\n};\n\nvar pureComputedOverrides = {\n  beforeSubscriptionAdd: function beforeSubscriptionAdd(event) {\n    // If asleep, wake up the computed by subscribing to any dependencies.\n    var computedObservable = this,\n        state = computedObservable[computedState];\n    if (!state.isDisposed && state.isSleeping && event == 'change') {\n      state.isSleeping = false;\n      if (state.isStale || computedObservable.haveDependenciesChanged()) {\n        state.dependencyTracking = null;\n        state.dependenciesCount = 0;\n        state.isStale = true;\n        computedObservable.evaluateImmediate();\n      } else {\n        // First put the dependencies in order\n        var dependeciesOrder = [];\n        (0, _tkoUtils.objectForEach)(state.dependencyTracking, function (id, dependency) {\n          dependeciesOrder[dependency._order] = id;\n        });\n        // Next, subscribe to each one\n        (0, _tkoUtils.arrayForEach)(dependeciesOrder, function (id, order) {\n          var dependency = state.dependencyTracking[id],\n              subscription = computedObservable.subscribeToDependency(dependency._target);\n          subscription._order = order;\n          subscription._version = dependency._version;\n          state.dependencyTracking[id] = subscription;\n        });\n      }\n      if (!state.isDisposed) {\n        // test since evaluating could trigger disposal\n        computedObservable.notifySubscribers(state.latestValue, 'awake');\n      }\n    }\n  },\n  afterSubscriptionRemove: function afterSubscriptionRemove(event) {\n    var state = this[computedState];\n    if (!state.isDisposed && event == 'change' && !this.hasSubscriptionsForEvent('change')) {\n      (0, _tkoUtils.objectForEach)(state.dependencyTracking, function (id, dependency) {\n        if (dependency.dispose) {\n          state.dependencyTracking[id] = {\n            _target: dependency._target,\n            _order: dependency._order,\n            _version: dependency._version\n          };\n          dependency.dispose();\n        }\n      });\n      state.isSleeping = true;\n      this.notifySubscribers(undefined, 'asleep');\n    }\n  },\n  getVersion: function getVersion() {\n    // Because a pure computed is not automatically updated while it is sleeping, we can't\n    // simply return the version number. Instead, we check if any of the dependencies have\n    // changed and conditionally re-evaluate the computed observable.\n    var state = this[computedState];\n    if (state.isSleeping && (state.isStale || this.haveDependenciesChanged())) {\n      this.evaluateImmediate();\n    }\n    return _tkoObservable.subscribable.fn.getVersion.call(this);\n  }\n};\n\nvar deferEvaluationOverrides = {\n  beforeSubscriptionAdd: function beforeSubscriptionAdd(event) {\n    // This will force a computed with deferEvaluation to evaluate when the first subscription is registered.\n    if (event == 'change' || event == 'beforeChange') {\n      this.peek();\n    }\n  }\n};\n\n// Note that for browsers that don't support proto assignment, the\n// inheritance chain is created manually in the ko.computed constructor\nif (_tkoUtils.canSetPrototype) {\n  (0, _tkoUtils.setPrototypeOf)(computed.fn, _tkoObservable.subscribable.fn);\n}\n\n// Set the proto chain values for ko.hasPrototype\nvar protoProp = _tkoObservable.observable.protoProperty; // == \"__ko_proto__\"\ncomputed[protoProp] = _tkoObservable.observable;\ncomputed.fn[protoProp] = computed;\n\nfunction isComputed(instance) {\n  return (0, _tkoUtils.hasPrototype)(instance, computed);\n}\n\nfunction isPureComputed(instance) {\n  return (0, _tkoUtils.hasPrototype)(instance, computed) && instance[computedState] && instance[computedState].pure;\n}\n\nfunction pureComputed(evaluatorFunctionOrOptions, evaluatorFunctionTarget) {\n  if (typeof evaluatorFunctionOrOptions === 'function') {\n    return computed(evaluatorFunctionOrOptions, evaluatorFunctionTarget, { 'pure': true });\n  } else {\n    evaluatorFunctionOrOptions = (0, _tkoUtils.extend)({}, evaluatorFunctionOrOptions); // make a copy of the parameter object\n    evaluatorFunctionOrOptions.pure = true;\n    return computed(evaluatorFunctionOrOptions, evaluatorFunctionTarget);\n  }\n}\n\nfunction throttleExtender(target, timeout) {\n  // Throttling means two things:\n\n  // (1) For dependent observables, we throttle *evaluations* so that, no matter how fast its dependencies\n  //     notify updates, the target doesn't re-evaluate (and hence doesn't notify) faster than a certain rate\n  target.throttleEvaluation = timeout;\n\n  // (2) For writable targets (observables, or writable dependent observables), we throttle *writes*\n  //     so the target cannot change value synchronously or faster than a certain rate\n  var writeTimeoutInstance = null;\n  return computed({\n    read: target,\n    write: function write(value) {\n      clearTimeout(writeTimeoutInstance);\n      writeTimeoutInstance = setTimeout(function () {\n        target(value);\n      }, timeout);\n    }\n  });\n}\n\n_tkoObservable.extenders.throttle = throttleExtender;\n\n//\n// tko.computed - Exports\n//\n// knockout -> tko changes:\n//      Deprecates `dependentObservable` (use `computed`)\n//\n\nexports.computed = computed;\nexports.isComputed = isComputed;\nexports.isPureComputed = isPureComputed;\nexports.pureComputed = pureComputed;\nexports.throttleExtender = throttleExtender;\n//# sourceMappingURL=tko.computed.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///2\n");

/***/ }),
/* 3 */
/*!*******************************************************************************!*\
  !*** c:/Users/pm/Downloads/react/js-framework-benchmark/ko6/src/renderCtx.js ***!
  \*******************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.createStamp = exports.insertNode = exports.duplicateCtx = exports.createCtx = exports.renderCtx = undefined;\n\nvar _tkoUtils = __webpack_require__(/*! ./tko/tko.utils.js */ 1);\n\nvar _tkoObservable = __webpack_require__(/*! ./tko/tko.observable.js */ 0);\n\nvar _tkoComputed = __webpack_require__(/*! ./tko/tko.computed.js */ 2);\n\nvar _blockComponent = __webpack_require__(/*! ./blocks/blockComponent.js */ 5);\n\nvar _blockComponent2 = _interopRequireDefault(_blockComponent);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction renderCtx(parentEl, tpl, ctx, level) {\n\tif (Array.isArray(tpl)) {\n\t\tfor (var i = 0; i < tpl.length; i++) {\n\t\t\trenderCtx(parentEl, tpl[i], ctx, level);\n\t\t}\n\t} else if (tpl.block) {\n\t\tvar blockFn = renderCtx.blocks[tpl.block];\n\t\tif (blockFn && blockFn.call) {\n\t\t\tblockFn(parentEl, tpl, ctx, level, renderCtx);\n\t\t} else {\n\t\t\ttpl.attrs._name = function () {\n\t\t\t\treturn tpl.block;\n\t\t\t};\n\t\t\t(0, _blockComponent2.default)(parentEl, tpl, ctx, level, renderCtx);\n\t\t}\n\t} else if (tpl.tag) {\n\t\tvar el = document.createElement(tpl.tag);\n\t\tif (level == 0) ctx.rootNodes.push(el);\n\t\tfor (var key in tpl.attrs) {\n\t\t\tvar val = tpl.attrs[key];\n\t\t\tif (typeof val == \"function\") {\n\t\t\t\tattrExpr(el, key, val, ctx);\n\t\t\t} else {\n\t\t\t\tel.setAttribute(key, val);\n\t\t\t}\n\t\t}\n\t\tinsertNode(parentEl, el);\n\t\tif (tpl.children) (0, _tkoUtils.arrayForEach)(tpl.children, function (x) {\n\t\t\trenderCtx(el, x, ctx, level + 1);\n\t\t});\n\t} else if (tpl && typeof tpl == \"function\") {\n\t\tvar n = document.createTextNode(\"\");\n\t\tif (level == 0) ctx.rootNodes.push(n);\n\t\tinsertNode(parentEl, n);\n\t\ttextExpr(n, tpl, ctx, level);\n\t} else if (tpl !== undefined || tpl !== null) {\n\t\tvar n = document.createTextNode(\"\" + tpl);\n\t\tif (level == 0) ctx.rootNodes.push(n);\n\t\tinsertNode(parentEl, n);\n\t}\n}\n\nfunction insertNode(parentEl, n) {\n\tif (parentEl.nodeType) {\n\t\tparentEl.appendChild(n);\n\t} else {\n\t\tparentEl[0].insertBefore(n, parentEl[1]);\n\t}\n}\n\nfunction createStamp(parentEl, name) {\n\tvar stamp = document.createComment(name);\n\tif (parentEl.nodeType) {\n\t\tparentEl.appendChild(stamp);\n\t\treturn [parentEl, stamp];\n\t} else {\n\t\tparentEl[0].insertBefore(stamp, parentEl[1]);\n\t\treturn [parentEl[0], stamp];\n\t}\n}\n\nfunction attrExpr(el, key, val, ctx) {\n\tvar binding = renderCtx.bindingHandlers[key];\n\tif (binding) {\n\t\tif (binding.init) {\n\t\t\tvar val2 = val(ctx.model, ctx);\n\t\t\tbinding.init(el, val2, ctx);\n\t\t}\n\t\tif (binding.update) {\n\t\t\tvar kv = (0, _tkoComputed.computed)(function () {\n\t\t\t\tvar val2 = val(ctx.model, ctx);\n\t\t\t\tbinding.update(el, val2, ctx);\n\t\t\t}, this);\n\t\t\tkv.extend({ notify: 'always' });\n\t\t\tkv();\n\t\t\tctx.subscribers.push(kv);\n\t\t}\n\t\tif (binding.dispose && binding.dispose.call) {\n\t\t\tvar obj = {};\n\t\t\tobj.dispose = function () {\n\t\t\t\tbinding.dispose(el, ctx);\n\t\t\t};\n\t\t\tctx.subscribers.push(obj);\n\t\t}\n\t} else {\n\t\tvar kv = (0, _tkoComputed.computed)(function () {\n\t\t\tvar val2 = val(ctx.model, ctx);\n\t\t\tval2 = (0, _tkoObservable.unwrap)(val2);\n\t\t\tel.setAttribute(key, val2);\n\t\t}, this);\n\t\tkv.extend({ notify: 'always' });\n\t\tkv();\n\t\tif (kv.getDependenciesCount() > 0) {\n\t\t\tctx.subscribers.push(kv);\n\t\t} else {\n\t\t\tkv.dispose();\n\t\t}\n\t}\n};\n\nfunction textExpr(n, val, ctx, level) {\n\tvar kv = (0, _tkoComputed.computed)(function () {\n\t\tvar val2 = val(ctx.model, ctx);\n\t\tval2 = (0, _tkoObservable.unwrap)(val2);\n\t\tn.nodeValue = \"\" + val2;\n\t\treturn val2;\n\t}, this);\n\tkv.extend({ notify: 'always' });\n\tkv();\n\tif (kv.getDependenciesCount() > 0) {\n\t\tctx.subscribers.push(kv);\n\t} else {\n\t\tkv.dispose();\n\t}\n};\n\nrenderCtx.blocks = {};\n\nrenderCtx.bindingHandlers = {};\n\nfunction createCtx(model, parentCtx, component) {\n\tvar ctx = {};\n\tctx.model = model;\n\tctx.componet = component ? component : parentCtx ? parentCtx.conponent : null;\n\tctx.root = parentCtx ? parentCtx.root : model;\n\tctx.parent = function (index) {\n\t\tif (index < 0) {\n\t\t\treturn ctx.root;\n\t\t}\n\t\tif (index == 0) {\n\t\t\treturn ctx.model;\n\t\t}\n\t\tvar parent1 = ctx;\n\t\twhile (index-- > 0) {\n\t\t\tif (!parent1.parentCtx) return parent1.model;\n\t\t\tparent1 = parent1.parentCtx;\n\t\t}\n\t\treturn parent1.model;\n\t};\n\tctx.parentCtx = parentCtx;\n\tctx.rootNodes = [];\n\tctx.subscribers = [];\n\tctx.dispose = function (removeNodes) {\n\t\t(0, _tkoUtils.arrayForEach)(ctx.subscribers, function (e) {\n\t\t\tif (e.dispose) e.dispose();\n\t\t});\n\t\tctx.subscribers = [];\n\t\tif (!(removeNodes === false)) (0, _tkoUtils.arrayForEach)(ctx.rootNodes, function (n) {\n\t\t\tif (n.parentNode) n.parentNode.removeChild(n);\n\t\t});\n\t\tctx.rootNodes = [];\n\t};\n\n\treturn ctx;\n}\n\nfunction duplicateCtx(ctx) {\n\n\tvar ctx0 = {};\n\tfor (var attr in ctx) {\n\t\tif (ctx.hasOwnProperty(attr)) ctx0[attr] = ctx[attr];\n\t}ctx0.subscribers = [];\n\tctx0.rootNodes = [];\n\tctx0.dispose = function () {\n\t\t(0, _tkoUtils.arrayForEach)(ctx0.subscribers, function (e) {\n\t\t\tif (e.dispose) e.dispose();\n\t\t});\n\t\tctx0.subscribers = [];\n\t\t(0, _tkoUtils.arrayForEach)(ctx0.rootNodes, function (n) {\n\t\t\tif (n.parentNode) n.parentNode.removeChild(n);\n\t\t});\n\t\tctx0.rootNodes = [];\n\t};\n\treturn ctx0;\n}\n\nexports.renderCtx = renderCtx;\nexports.createCtx = createCtx;\nexports.duplicateCtx = duplicateCtx;\nexports.insertNode = insertNode;\nexports.createStamp = createStamp;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///3\n");

/***/ }),
/* 4 */
/*!*************************************************************************************!*\
  !*** c:/Users/pm/Downloads/react/js-framework-benchmark/ko6/src/himalaya/compat.js ***!
  \*************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.startsWith = startsWith;\nexports.endsWith = endsWith;\nexports.stringIncludes = stringIncludes;\nexports.isRealNaN = isRealNaN;\nexports.arrayIncludes = arrayIncludes;\n/*\n  We don't want to include babel-polyfill in our project.\n    - Library authors should be using babel-runtime for non-global polyfilling\n    - Adding babel-polyfill/-runtime increases bundle size significantly\n\n  We will include our polyfill instance methods as regular functions.\n*/\n\nfunction startsWith(str, searchString, position) {\n  return str.substr(position || 0, searchString.length) === searchString;\n}\n\nfunction endsWith(str, searchString, position) {\n  var index = (position || str.length) - searchString.length;\n  var lastIndex = str.lastIndexOf(searchString, index);\n  return lastIndex !== -1 && lastIndex === index;\n}\n\nfunction stringIncludes(str, searchString, position) {\n  return str.indexOf(searchString, position || 0) !== -1;\n}\n\nfunction isRealNaN(x) {\n  return typeof x === 'number' && isNaN(x);\n}\n\nfunction arrayIncludes(array, searchElement, position) {\n  var len = array.length;\n  if (len === 0) return false;\n\n  var lookupIndex = position | 0;\n  var isNaNElement = isRealNaN(searchElement);\n  var searchIndex = lookupIndex >= 0 ? lookupIndex : len + lookupIndex;\n  while (searchIndex < len) {\n    var element = array[searchIndex++];\n    if (element === searchElement) return true;\n    if (isNaNElement && isRealNaN(element)) return true;\n  }\n\n  return false;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9jOi9Vc2Vycy9wbS9Eb3dubG9hZHMvcmVhY3QvanMtZnJhbWV3b3JrLWJlbmNobWFyay9rbzYvc3JjL2hpbWFsYXlhL2NvbXBhdC5qcz85Y2QzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qXG4gIFdlIGRvbid0IHdhbnQgdG8gaW5jbHVkZSBiYWJlbC1wb2x5ZmlsbCBpbiBvdXIgcHJvamVjdC5cbiAgICAtIExpYnJhcnkgYXV0aG9ycyBzaG91bGQgYmUgdXNpbmcgYmFiZWwtcnVudGltZSBmb3Igbm9uLWdsb2JhbCBwb2x5ZmlsbGluZ1xuICAgIC0gQWRkaW5nIGJhYmVsLXBvbHlmaWxsLy1ydW50aW1lIGluY3JlYXNlcyBidW5kbGUgc2l6ZSBzaWduaWZpY2FudGx5XG5cbiAgV2Ugd2lsbCBpbmNsdWRlIG91ciBwb2x5ZmlsbCBpbnN0YW5jZSBtZXRob2RzIGFzIHJlZ3VsYXIgZnVuY3Rpb25zLlxuKi9cblxuZXhwb3J0IGZ1bmN0aW9uIHN0YXJ0c1dpdGggKHN0ciwgc2VhcmNoU3RyaW5nLCBwb3NpdGlvbikge1xuICByZXR1cm4gc3RyLnN1YnN0cihwb3NpdGlvbiB8fCAwLCBzZWFyY2hTdHJpbmcubGVuZ3RoKSA9PT0gc2VhcmNoU3RyaW5nXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBlbmRzV2l0aCAoc3RyLCBzZWFyY2hTdHJpbmcsIHBvc2l0aW9uKSB7XG4gIGNvbnN0IGluZGV4ID0gKHBvc2l0aW9uIHx8IHN0ci5sZW5ndGgpIC0gc2VhcmNoU3RyaW5nLmxlbmd0aFxuICBjb25zdCBsYXN0SW5kZXggPSBzdHIubGFzdEluZGV4T2Yoc2VhcmNoU3RyaW5nLCBpbmRleClcbiAgcmV0dXJuIGxhc3RJbmRleCAhPT0gLTEgJiYgbGFzdEluZGV4ID09PSBpbmRleFxufVxuXG5leHBvcnQgZnVuY3Rpb24gc3RyaW5nSW5jbHVkZXMgKHN0ciwgc2VhcmNoU3RyaW5nLCBwb3NpdGlvbikge1xuICByZXR1cm4gc3RyLmluZGV4T2Yoc2VhcmNoU3RyaW5nLCBwb3NpdGlvbiB8fCAwKSAhPT0gLTFcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGlzUmVhbE5hTiAoeCkge1xuICByZXR1cm4gdHlwZW9mIHggPT09ICdudW1iZXInICYmIGlzTmFOKHgpXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBhcnJheUluY2x1ZGVzIChhcnJheSwgc2VhcmNoRWxlbWVudCwgcG9zaXRpb24pIHtcbiAgY29uc3QgbGVuID0gYXJyYXkubGVuZ3RoXG4gIGlmIChsZW4gPT09IDApIHJldHVybiBmYWxzZVxuXG4gIGNvbnN0IGxvb2t1cEluZGV4ID0gcG9zaXRpb24gfCAwXG4gIGNvbnN0IGlzTmFORWxlbWVudCA9IGlzUmVhbE5hTihzZWFyY2hFbGVtZW50KVxuICBsZXQgc2VhcmNoSW5kZXggPSBsb29rdXBJbmRleCA+PSAwID8gbG9va3VwSW5kZXggOiBsZW4gKyBsb29rdXBJbmRleFxuICB3aGlsZSAoc2VhcmNoSW5kZXggPCBsZW4pIHtcbiAgICBjb25zdCBlbGVtZW50ID0gYXJyYXlbc2VhcmNoSW5kZXgrK11cbiAgICBpZiAoZWxlbWVudCA9PT0gc2VhcmNoRWxlbWVudCkgcmV0dXJuIHRydWVcbiAgICBpZiAoaXNOYU5FbGVtZW50ICYmIGlzUmVhbE5hTihlbGVtZW50KSkgcmV0dXJuIHRydWVcbiAgfVxuXG4gIHJldHVybiBmYWxzZVxufVxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIGM6L1VzZXJzL3BtL0Rvd25sb2Fkcy9yZWFjdC9qcy1mcmFtZXdvcmstYmVuY2htYXJrL2tvNi9zcmMvaGltYWxheWEvY29tcGF0LmpzIl0sIm1hcHBpbmdzIjoiOzs7OztBQVFBO0FBSUE7QUFNQTtBQUlBO0FBSUE7QUExQkE7Ozs7Ozs7O0FBUUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///4\n");

/***/ }),
/* 5 */
/*!*******************************************************************************************!*\
  !*** c:/Users/pm/Downloads/react/js-framework-benchmark/ko6/src/blocks/blockComponent.js ***!
  \*******************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.default = blockComponent;\n\nvar _tkoUtils = __webpack_require__(/*! ../tko/tko.utils.js */ 1);\n\nvar _tkoObservable = __webpack_require__(/*! ../tko/tko.observable.js */ 0);\n\nvar _tkoComputed = __webpack_require__(/*! ../tko/tko.computed.js */ 2);\n\nvar _renderCtx = __webpack_require__(/*! ../renderCtx.js */ 3);\n\nfunction blockComponent(parent, tpl, ctx, level) {\n\n\tif (tpl.children && tpl.children.length > 0 && tpl.attrs && tpl.attrs['_name']) {\n\n\t\tvar _name = tpl.attrs['_name'];\n\t\tvar stamp = (0, _renderCtx.createStamp)(parent, 'component');\n\t\tif (level == 0) ctx.rootNodes.push(stamp[1]);\n\n\t\tvar lastName = '';\n\t\tvar lastCtx = null;\n\n\t\tvar kv = (0, _tkoComputed.computed)(function () {\n\t\t\tvar val2 = value(ctx.model, ctx);\n\n\t\t\tif (val2 == lastVal) return;\n\t\t\tlastVal = val2;\n\n\t\t\t//remove old componet\n\t\t\tif (lastCtx && lastCtx.dispose) {\n\t\t\t\t_tkoObservable.dependencyDetection.ignore(function () {\n\t\t\t\t\tlastCtx.dispose();\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (val2) {\n\t\t\t\t//render children tpl\n\t\t\t\t_tkoObservable.dependencyDetection.ignore(function () {\n\t\t\t\t\t(0, _renderCtx.renderCtx)(stamp, tpl.children, ctx0, 0);\n\t\t\t\t});\n\t\t\t} else {}\n\t\t}, this);\n\t\tkv();\n\t\tif (kv.getDependenciesCount() > 0) {\n\t\t\tctx.subscribers.push(kv);\n\t\t} else {\n\t\t\tkv.dispose();\n\t\t}\n\t}\n}\n\nfunction renderComponent(parent, tpl, ctx, level, componentDef) {}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9jOi9Vc2Vycy9wbS9Eb3dubG9hZHMvcmVhY3QvanMtZnJhbWV3b3JrLWJlbmNobWFyay9rbzYvc3JjL2Jsb2Nrcy9ibG9ja0NvbXBvbmVudC5qcz9mMjRlIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGFycmF5Rm9yRWFjaCB9ICBmcm9tICcuLi90a28vdGtvLnV0aWxzLmpzJztcclxuaW1wb3J0IHsgdW53cmFwLCBkZXBlbmRlbmN5RGV0ZWN0aW9uIH0gIGZyb20gJy4uL3Rrby90a28ub2JzZXJ2YWJsZS5qcyc7XHJcbmltcG9ydCB7IGNvbXB1dGVkIH0gIGZyb20gJy4uL3Rrby90a28uY29tcHV0ZWQuanMnO1xyXG5pbXBvcnQgeyByZW5kZXJDdHgsIGNyZWF0ZVN0YW1wLCBkdXBsaWNhdGVDdHggfSAgZnJvbSAnLi4vcmVuZGVyQ3R4LmpzJztcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGJsb2NrQ29tcG9uZW50KHBhcmVudCwgdHBsLCBjdHgsIGxldmVsKXtcclxuXHJcblx0aWYodHBsLmNoaWxkcmVuICYmIHRwbC5jaGlsZHJlbi5sZW5ndGg+MCAmJiB0cGwuYXR0cnMgJiYgdHBsLmF0dHJzWydfbmFtZSddKXtcclxuXHRcdFxyXG5cdFx0dmFyIF9uYW1lID0gdHBsLmF0dHJzWydfbmFtZSddO1xyXG5cdFx0dmFyIHN0YW1wID1cdGNyZWF0ZVN0YW1wKHBhcmVudCwgJ2NvbXBvbmVudCcpO1xyXG5cdFx0aWYobGV2ZWw9PTApIGN0eC5yb290Tm9kZXMucHVzaChzdGFtcFsxXSk7XHJcblxyXG5cdFx0dmFyIGxhc3ROYW1lID0gJyc7XHJcblx0XHR2YXIgbGFzdEN0eCA9IG51bGw7XHJcblxyXG5cdFx0dmFyIGt2ID0gY29tcHV0ZWQoZnVuY3Rpb24oKXtcclxuXHRcdFx0dmFyIHZhbDIgPSB2YWx1ZShjdHgubW9kZWwsIGN0eCk7XHJcblx0XHRcdFxyXG5cdFx0XHRpZih2YWwyPT1sYXN0VmFsKSByZXR1cm47XHJcblx0XHRcdGxhc3RWYWwgPSB2YWwyO1xyXG5cclxuXHRcdFx0Ly9yZW1vdmUgb2xkIGNvbXBvbmV0XHJcblx0XHRcdGlmKGxhc3RDdHggJiYgbGFzdEN0eC5kaXNwb3NlKXtcclxuXHRcdFx0XHRkZXBlbmRlbmN5RGV0ZWN0aW9uLmlnbm9yZShmdW5jdGlvbigpe1xyXG5cdFx0XHRcdFx0bGFzdEN0eC5kaXNwb3NlKCk7XHJcblx0XHRcdFx0fSk7XHJcblx0XHRcdH1cclxuXHJcblx0XHRcdGlmKHZhbDIpe1xyXG5cdFx0XHRcdC8vcmVuZGVyIGNoaWxkcmVuIHRwbFxyXG5cdFx0XHRcdGRlcGVuZGVuY3lEZXRlY3Rpb24uaWdub3JlKGZ1bmN0aW9uKCl7XHJcblx0XHRcdFx0XHRyZW5kZXJDdHgoc3RhbXAsIHRwbC5jaGlsZHJlbiwgY3R4MCwgMCk7XHJcblx0XHRcdFx0fSk7XHJcblx0XHRcdH0gZWxzZSB7XHJcblx0XHRcdH1cclxuXHRcdH0sIHRoaXMpO1xyXG5cdFx0a3YoKTtcclxuXHRcdGlmKGt2LmdldERlcGVuZGVuY2llc0NvdW50KCk+MCl7XHJcblx0XHRcdGN0eC5zdWJzY3JpYmVycy5wdXNoKGt2KTtcclxuXHRcdH0gZWxzZSB7XHJcblx0XHRcdGt2LmRpc3Bvc2UoKTtcclxuXHRcdH1cclxuXHR9XHJcblxyXG59XHJcblxyXG5mdW5jdGlvbiByZW5kZXJDb21wb25lbnQocGFyZW50LCB0cGwsIGN0eCwgbGV2ZWwsIGNvbXBvbmVudERlZil7XHJcblxyXG59XG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIGM6L1VzZXJzL3BtL0Rvd25sb2Fkcy9yZWFjdC9qcy1mcmFtZXdvcmstYmVuY2htYXJrL2tvNi9zcmMvYmxvY2tzL2Jsb2NrQ29tcG9uZW50LmpzIl0sIm1hcHBpbmdzIjoiOzs7OztBQUtBO0FBQ0E7QUFOQTtBQUNBO0FBQUE7QUFDQTtBQUFBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///5\n");

/***/ }),
/* 6 */
/*!**************************************************************************!*\
  !*** c:/Users/pm/Downloads/react/js-framework-benchmark/ko6/src/main.js ***!
  \**************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _tkoUtils = __webpack_require__(/*! ./tko/tko.utils.js */ 1);\n\nvar _ko = __webpack_require__(/*! ./ko6.js */ 8);\n\nwindow.count = 0;\n\nvar startTime;\nvar lastMeasure;\n\nvar startMeasure = function startMeasure(name) {\n\tstartTime = performance.now();\n\tlastMeasure = name;\n};\nvar stopMeasure = function stopMeasure() {\n\twindow.setTimeout(function () {\n\t\tvar stop = performance.now();\n\t\tconsole.log(lastMeasure + \" took \" + (stop - startTime), window.count);\n\t\tif (window.mainModel) window.mainModel.log(lastMeasure + \" took \" + (stop - startTime).toFixed(0) + \"ms subscribers \" + window.count);\n\t}, 0);\n};\n\nvar HomeViewModel = function HomeViewModel() {\n\tvar self = this;\n\tself.id = 1;\n\n\tself.log = (0, _ko.observable)();\n\n\tself.step = (0, _ko.observable)(1);\n\n\tself.tpl1 = (0, _ko.computed)(function () {\n\t\tif (self.step() == 1) return (0, _ko.parserko6)('<p><i><span>step </span>{m.step()}</i></p>');\n\t\tif (self.step() == 2) return (0, _ko.parserko6)('<p><b><span>step </span>{m.step()}</b></p>');\n\t\tif (self.step() == 3) return (0, _ko.parserko6)('<p><b><i><span>step </span>{m.step()}</i></b></p>');\n\t\treturn (0, _ko.parserko6)('<p><span>step </span>{m.step().length}</p>');\n\t}, this);\n\n\tfunction _random(max) {\n\t\treturn Math.round(Math.random() * 1000) % max;\n\t}\n\n\tfunction buildData(count) {\n\t\tvar adjectives = [\"pretty\", \"large\", \"big\", \"small\", \"tall\", \"short\", \"long\", \"handsome\", \"plain\", \"quaint\", \"clean\", \"elegant\", \"easy\", \"angry\", \"crazy\", \"helpful\", \"mushy\", \"odd\", \"unsightly\", \"adorable\", \"important\", \"inexpensive\", \"cheap\", \"expensive\", \"fancy\"];\n\t\tvar colours = [\"red\", \"yellow\", \"blue\", \"green\", \"pink\", \"brown\", \"purple\", \"brown\", \"white\", \"black\", \"orange\"];\n\t\tvar nouns = [\"table\", \"chair\", \"house\", \"bbq\", \"desk\", \"car\", \"pony\", \"cookie\", \"sandwich\", \"burger\", \"pizza\", \"mouse\", \"keyboard\"];\n\t\tvar data = [];\n\t\tfor (var i = 0; i < count; i++) {\n\t\t\tdata.push(new ItemViewModel({\n\t\t\t\tid: self.id++,\n\t\t\t\tlabel: adjectives[_random(adjectives.length)] + \" \" + colours[_random(colours.length)] + \" \" + nouns[_random(nouns.length)]\n\t\t\t}, self));\n\t\t}\n\t\treturn data;\n\t}\n\n\tself.selected = (0, _ko.observable)(null);\n\tself.data = (0, _ko.observableArray)();\n\n\tself.run = function () {\n\t\tstartMeasure(\"run\");\n\t\tself.data(buildData(1000));\n\t\tself.selected(null);\n\t\tstopMeasure();\n\t};\n\n\tself.runLots = function () {\n\t\tstartMeasure(\"runLots\");\n\t\tself.data(buildData(10000));\n\t\tself.selected(null);\n\t\tstopMeasure();\n\t};\n\n\tself.add = function () {\n\t\tstartMeasure(\"add\");\n\t\t(0, _tkoUtils.arrayPushAll)(self.data, buildData(1000));\n\t\tstopMeasure();\n\t};\n\n\tself.update = function () {\n\t\tstartMeasure(\"update\");\n\t\tvar tmp = self.data();\n\t\tfor (var i = 0; i < tmp.length; i += 10) {\n\t\t\ttmp[i].label(tmp[i].label() + ' !!!');\n\t\t}\n\t\tstopMeasure();\n\t};\n\n\tself.clear = function () {\n\t\tstartMeasure(\"clear\");\n\t\tself.data.removeAll();\n\t\tself.selected(null);\n\t\tstopMeasure();\n\t};\n\n\tself.swapRows = function () {\n\t\tstartMeasure(\"swapRows\");\n\t\tvar tmp = self.data();\n\t\tif (tmp.length >= 10) {\n\t\t\tvar a = tmp[4];\n\t\t\ttmp[4] = tmp[9];\n\t\t\ttmp[9] = a;\n\t\t\tself.data(tmp);\n\t\t}\n\t\tstopMeasure();\n\t};\n\n\tself.del1000 = function () {\n\t\tstartMeasure(\"delete1000\");\n\t\tvar max = self.data().length;\n\t\tif (max > 1000) self.data.splice(max - 1000, max);\n\t\tconsole.log('new size', self.data().length);\n\t\tstopMeasure();\n\t};\n\n\tself.select = function (id) {\n\t\tstartMeasure(\"select\");\n\t\tself.selected(id);\n\t\tstopMeasure();\n\t};\n\n\tself.del = function (item) {\n\t\tstartMeasure(\"delete\");\n\t\tself.data.remove(function (d) {\n\t\t\treturn d.id === item.id;\n\t\t});\n\t\tstopMeasure();\n\t};\n};\n\nvar ItemViewModel = function ItemViewModel(data, parent) {\n\tvar self = this;\n\n\tself.id = data.id;\n\tself.label = (0, _ko.observable)(data.label);\n\n\tself.del = function () {\n\t\tparent.del(self);\n\t};\n\n\tself.select = function () {\n\t\tparent.select(self.id);\n\t};\n};\n\n/** @jsx kox */\n/** @jsx-arrow(m,ctx) */\nvar x = '\\n    <div class=\"container\">\\n        <div class=\"jumbotron\">\\n            <div class=\"row\">\\n                <div class=\"col-md-6\">\\n                    <h1>Knockout JSX</h1>\\n                    <p>{m.log}</p>\\n\\n                    <If value={m.step()<4}>\\n\\t                   \\t<div><span>step </span>{m.step}</div>\\n\\t                   \\t<Template value={m.tpl1} />\\n\\t\\t\\t\\t\\t\\t<Html value={\\'steppp \\'+m.step()} />\\n\\t                </If>\\n\\n                </div>\\n                <div class=\"col-md-6\">\\n                    <div class=\"row\">\\n                        <div class=\"col-sm-6 smallpad\">\\n                            <button type=\"button\" class=\"btn btn-primary btn-block\" id=\"run\" click={m.run}>Create 1,000 rows</button>\\n                        </div>\\n                        <div class=\"col-sm-6 smallpad\">\\n                            <button type=\"button\" class=\"btn btn-primary btn-block\" id=\"runlots\" click={m.runLots}>Create 10,000 rows</button>\\n                        </div>\\n                        <div class=\"col-sm-6 smallpad\">\\n                            <button type=\"button\" class=\"btn btn-primary btn-block\" id=\"add\" click={m.add}>Append 1,000 rows</button>\\n                        </div>\\n                        <div class=\"col-sm-6 smallpad\">\\n                            <button type=\"button\" class=\"btn btn-primary btn-block\" id=\"update\" click={m.update}>Update every 10th row</button>\\n                        </div>\\n                        <div class=\"col-sm-6 smallpad\">\\n                            <button type=\"button\" class=\"btn btn-primary btn-block\" id=\"clear\" click={m.clear}>Clear</button>\\n                        </div>\\n                        <div class=\"col-sm-6 smallpad\">\\n                            <button type=\"button\" class=\"btn btn-primary btn-block\" id=\"remove1000\" click={m.del1000}>Remove last 1000</button>\\n                            <button type=\"button\" class=\"btn btn-primary btn-block\" id=\"swaprows\" click={m.swapRows}>Swap Rows</button>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <table class=\"table table-hover table-striped test-data\">\\n\\t\\t\\t<tbody>\\n\\t\\t\\t\\t<tr><td>1</td><td>1</td><td>1</td><td>1</td></tr>\\n\\t\\t\\t\\t<Foreach items={m.data} key={m.id}>\\n\\t\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t\\t<td class=\"col-md-1\">{m.id}</td>\\n\\t\\t\\t\\t\\t\\t<td class=\"col-md-4\">\\n\\t\\t\\t\\t\\t\\t\\t<a xclick={m.select}>{m.label}</a>\\n\\t\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t\\t\\t<td class=\"col-md-1\"><a xclick={m.del}><span class=\"glyphicon glyphicon-remove\" aria-hidden=\"true\"></span></a></td>\\n\\t\\t\\t\\t\\t\\t<td class=\"col-md-6\"></td>\\n\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t</Foreach>\\n\\t\\t\\t\\t<tr><td>2</td><td>2</td><td>2</td><td>2</td></tr>\\n\\t\\t\\t</tbody>\\n        </table>\\n        <span class=\"preloadicon glyphicon glyphicon-remove\" aria-hidden=\"true\"></span>\\n    </div>';\n\nconsole.log('start');\nwindow.mainModel = new HomeViewModel();\n\n/*\r\nsetInterval(function(){ \r\n\tvar raw = window.mainModel.step()+1;\r\n\tif(raw>5) raw = 1;\r\n\twindow.mainModel.step(raw);\r\n}, 1000);\r\n*/\n\nvar el = document.getElementById(\"main\");\n(0, _ko.ko6)(el, x, window.mainModel);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///6\n");

/***/ }),
/* 7 */
/*!***********************************!*\
  !*** (webpack)/buildin/global.js ***!
  \***********************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

eval("var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\n} catch(e) {\n\t// This works if the window reference is available\n\tif(typeof window === \"object\")\n\t\tg = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8od2VicGFjaykvYnVpbGRpbi9nbG9iYWwuanM/MzY5OCJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgZztcblxuLy8gVGhpcyB3b3JrcyBpbiBub24tc3RyaWN0IG1vZGVcbmcgPSAoZnVuY3Rpb24oKSB7XG5cdHJldHVybiB0aGlzO1xufSkoKTtcblxudHJ5IHtcblx0Ly8gVGhpcyB3b3JrcyBpZiBldmFsIGlzIGFsbG93ZWQgKHNlZSBDU1ApXG5cdGcgPSBnIHx8IEZ1bmN0aW9uKFwicmV0dXJuIHRoaXNcIikoKSB8fCAoMSxldmFsKShcInRoaXNcIik7XG59IGNhdGNoKGUpIHtcblx0Ly8gVGhpcyB3b3JrcyBpZiB0aGUgd2luZG93IHJlZmVyZW5jZSBpcyBhdmFpbGFibGVcblx0aWYodHlwZW9mIHdpbmRvdyA9PT0gXCJvYmplY3RcIilcblx0XHRnID0gd2luZG93O1xufVxuXG4vLyBnIGNhbiBzdGlsbCBiZSB1bmRlZmluZWQsIGJ1dCBub3RoaW5nIHRvIGRvIGFib3V0IGl0Li4uXG4vLyBXZSByZXR1cm4gdW5kZWZpbmVkLCBpbnN0ZWFkIG9mIG5vdGhpbmcgaGVyZSwgc28gaXQnc1xuLy8gZWFzaWVyIHRvIGhhbmRsZSB0aGlzIGNhc2UuIGlmKCFnbG9iYWwpIHsgLi4ufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGc7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAod2VicGFjaykvYnVpbGRpbi9nbG9iYWwuanNcbi8vIG1vZHVsZSBpZCA9IDdcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///7\n");

/***/ }),
/* 8 */
/*!*************************************************************************!*\
  !*** c:/Users/pm/Downloads/react/js-framework-benchmark/ko6/src/ko6.js ***!
  \*************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.renderCtx = exports.computed = exports.observableArray = exports.observable = exports.parserko6 = exports.ko6 = undefined;\n\nvar _tkoObservable = __webpack_require__(/*! ./tko/tko.observable.js */ 0);\n\nvar _tkoComputed = __webpack_require__(/*! ./tko/tko.computed.js */ 2);\n\nvar _renderCtx = __webpack_require__(/*! ./renderCtx.js */ 3);\n\nvar _parserko = __webpack_require__(/*! ./parserko6.js */ 9);\n\nvar _blockComponent = __webpack_require__(/*! ./blocks/blockComponent.js */ 5);\n\nvar _blockComponent2 = _interopRequireDefault(_blockComponent);\n\nvar _blockForeach = __webpack_require__(/*! ./blocks/blockForeach.js */ 13);\n\nvar _blockForeach2 = _interopRequireDefault(_blockForeach);\n\nvar _blockIf = __webpack_require__(/*! ./blocks/blockIf.js */ 14);\n\nvar _blockIf2 = _interopRequireDefault(_blockIf);\n\nvar _blockHtml = __webpack_require__(/*! ./blocks/blockHtml.js */ 15);\n\nvar _blockHtml2 = _interopRequireDefault(_blockHtml);\n\nvar _blockTemplate = __webpack_require__(/*! ./blocks/blockTemplate.js */ 16);\n\nvar _blockTemplate2 = _interopRequireDefault(_blockTemplate);\n\nvar _click = __webpack_require__(/*! ./bindings/click.js */ 17);\n\nvar _click2 = _interopRequireDefault(_click);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n_renderCtx.renderCtx.blocks['Component'] = _blockComponent2.default;\n_renderCtx.renderCtx.blocks['Foreach'] = _blockForeach2.default;\n_renderCtx.renderCtx.blocks['If'] = _blockIf2.default;\n_renderCtx.renderCtx.blocks['Html'] = _blockHtml2.default;\n_renderCtx.renderCtx.blocks['Template'] = _blockTemplate2.default;\n\n_renderCtx.renderCtx.bindingHandlers['click'] = _click2.default;\n\nfunction ko6(parent, tpl, model) {\n\tvar ctx = (0, _renderCtx.createCtx)(model, null, null);\n\tparent.innerHtml = '';\n\tvar tpl2 = (0, _parserko.parserko6)(tpl);\n\t(0, _renderCtx.renderCtx)(parent, tpl2, ctx, 0);\n\twindow.rootCtx = ctx;\n\treturn ctx;\n};\n\nexports.ko6 = ko6;\nexports.parserko6 = _parserko.parserko6;\nexports.observable = _tkoObservable.observable;\nexports.observableArray = _tkoObservable.observableArray;\nexports.computed = _tkoComputed.computed;\nexports.renderCtx = _renderCtx.renderCtx;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9jOi9Vc2Vycy9wbS9Eb3dubG9hZHMvcmVhY3QvanMtZnJhbWV3b3JrLWJlbmNobWFyay9rbzYvc3JjL2tvNi5qcz84YmM3Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IG9ic2VydmFibGUsIG9ic2VydmFibGVBcnJheSB9IGZyb20gJy4vdGtvL3Rrby5vYnNlcnZhYmxlLmpzJztcclxuaW1wb3J0IHsgY29tcHV0ZWQgfSAgZnJvbSAnLi90a28vdGtvLmNvbXB1dGVkLmpzJztcclxuaW1wb3J0IHsgcmVuZGVyQ3R4LCBjcmVhdGVDdHggfSAgZnJvbSAnLi9yZW5kZXJDdHguanMnO1xyXG5pbXBvcnQgeyBwYXJzZXJrbzYgfSAgZnJvbSAnLi9wYXJzZXJrbzYuanMnO1xyXG5cclxuaW1wb3J0IGJsb2NrQ29tcG9uZW50ICBmcm9tICcuL2Jsb2Nrcy9ibG9ja0NvbXBvbmVudC5qcyc7XHJcbmltcG9ydCBibG9ja0ZvcmVhY2ggIGZyb20gJy4vYmxvY2tzL2Jsb2NrRm9yZWFjaC5qcyc7XHJcbmltcG9ydCBibG9ja0lmICBmcm9tICcuL2Jsb2Nrcy9ibG9ja0lmLmpzJztcclxuaW1wb3J0IGJsb2NrSHRtbCAgZnJvbSAnLi9ibG9ja3MvYmxvY2tIdG1sLmpzJztcclxuaW1wb3J0IGJsb2NrVGVtcGxhdGUgIGZyb20gJy4vYmxvY2tzL2Jsb2NrVGVtcGxhdGUuanMnO1xyXG5cclxuaW1wb3J0IGNsaWNrSGFuZGxlciAgZnJvbSAnLi9iaW5kaW5ncy9jbGljay5qcyc7XHJcblxyXG5yZW5kZXJDdHguYmxvY2tzWydDb21wb25lbnQnXSA9IGJsb2NrQ29tcG9uZW50O1xyXG5yZW5kZXJDdHguYmxvY2tzWydGb3JlYWNoJ10gPSBibG9ja0ZvcmVhY2g7XHJcbnJlbmRlckN0eC5ibG9ja3NbJ0lmJ10gPSBibG9ja0lmO1xyXG5yZW5kZXJDdHguYmxvY2tzWydIdG1sJ10gPSBibG9ja0h0bWw7XHJcbnJlbmRlckN0eC5ibG9ja3NbJ1RlbXBsYXRlJ10gPSBibG9ja1RlbXBsYXRlO1xyXG5cclxucmVuZGVyQ3R4LmJpbmRpbmdIYW5kbGVyc1snY2xpY2snXSA9IGNsaWNrSGFuZGxlcjtcclxuXHJcbmZ1bmN0aW9uIGtvNihwYXJlbnQsIHRwbCwgbW9kZWwpe1xyXG5cdHZhciBjdHggPSBjcmVhdGVDdHgobW9kZWwsIG51bGwsIG51bGwpO1xyXG5cdHBhcmVudC5pbm5lckh0bWwgPSAnJztcclxuXHR2YXIgdHBsMiA9IHBhcnNlcmtvNih0cGwpO1xyXG5cdHJlbmRlckN0eChwYXJlbnQsIHRwbDIsIGN0eCwgMCk7XHJcblx0d2luZG93LnJvb3RDdHggPSBjdHg7XHJcblx0cmV0dXJuIGN0eDtcclxufTtcclxuXHJcbmV4cG9ydCB7XHJcblx0a282LFxyXG5cdHBhcnNlcmtvNixcclxuXHRvYnNlcnZhYmxlLFxyXG5cdG9ic2VydmFibGVBcnJheSxcclxuXHRjb21wdXRlZCxcclxuXHRyZW5kZXJDdHhcclxufTtcblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gYzovVXNlcnMvcG0vRG93bmxvYWRzL3JlYWN0L2pzLWZyYW1ld29yay1iZW5jaG1hcmsva282L3NyYy9rbzYuanMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUNBO0FBQUE7QUFDQTtBQUFBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQUE7QUFDQTs7O0FBQUE7QUFDQTs7O0FBQUE7QUFDQTs7O0FBQUE7QUFDQTs7O0FBQ0E7QUFDQTs7Ozs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///8\n");

/***/ }),
/* 9 */
/*!*******************************************************************************!*\
  !*** c:/Users/pm/Downloads/react/js-framework-benchmark/ko6/src/parserko6.js ***!
  \*******************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.parseDefaults = undefined;\nexports.parserko6 = parserko6;\n\nvar _lexer = __webpack_require__(/*! ./himalaya/lexer.js */ 10);\n\nvar _lexer2 = _interopRequireDefault(_lexer);\n\nvar _parser = __webpack_require__(/*! ./himalaya/parser.js */ 11);\n\nvar _parser2 = _interopRequireDefault(_parser);\n\nvar _tags = __webpack_require__(/*! ./himalaya/tags.js */ 12);\n\nvar _compat = __webpack_require__(/*! ./himalaya/compat.js */ 4);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar parseDefaults = exports.parseDefaults = {\n  voidTags: _tags.voidTags,\n  closingTags: _tags.closingTags,\n  childlessTags: _tags.childlessTags,\n  closingTagAncestorBreakers: _tags.closingTagAncestorBreakers\n};\n\nfunction parserko6(str) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : parseDefaults;\n\n  var startTime = performance.now();\n\n  var tokens = (0, _lexer2.default)(str, options);\n  var nodes = (0, _parser2.default)(tokens, options);\n  var map = format(nodes, options);\n\n  var finishTime = performance.now();\n  console.log('parserko6', finishTime - startTime);\n  return map;\n}\n\nfunction format(nodes) {\n  var arr = [];\n  nodes.forEach(function (node) {\n    var type = node.type;\n    if (type === 'element') {\n      var tag = node.tagName;\n      var attrs = formatAttributes(node.attributes);\n      var children = format(node.children);\n\n      var obj = {};\n      if (tag.toLowerCase() != tag || tag.indexOf('-') > 0) {\n        obj.block = tag;\n      } else {\n        obj.tag = tag;\n      }\n      if (attrs && Object.keys(attrs).length > 0) {\n        obj.attrs = attrs;\n      }\n      if (children && children.length > 0) {\n        obj.children = children;\n      }\n      arr.push(obj);\n    }\n    if (!isEmptyOrSpaces(node.content)) {\n      arr.push(parseJsExression(node.content));\n    }\n  });\n  return arr;\n}\n\nfunction formatAttributes(attributes) {\n  var attrs = {};\n  attributes.forEach(function (attribute) {\n    var parts = splitHead(attribute.trim(), '=');\n    var key = parts[0];\n    var value = typeof parts[1] === 'string' ? unquote(parts[1]) : null;\n    attrs[key] = parseJsExression(value);\n  });\n  return attrs;\n}\n\nfunction splitHead(str, sep) {\n  var idx = str.indexOf(sep);\n  if (idx === -1) return [str];\n  return [str.slice(0, idx), str.slice(idx + sep.length)];\n}\n\nfunction unquote(str) {\n  var car = str.charAt(0);\n  var end = str.length - 1;\n  var isQuoteStart = car === '\"' || car === \"'\";\n  if (isQuoteStart && car === str.charAt(end)) {\n    return str.slice(1, end);\n  }\n  return str;\n}\n\nfunction parseJsExression(s) {\n  if ((0, _compat.startsWith)(s, '{') && (0, _compat.endsWith)(s, '}')) {\n    s = s.slice(1, s.length - 1);\n    console.log(s);\n    return new Function('m', 'ctx', 'return ' + s);\n  }\n  return s;\n}\n\nfunction isEmptyOrSpaces(str) {\n  return !str || !str.match || str.match(/^\\s*$/) !== null;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9jOi9Vc2Vycy9wbS9Eb3dubG9hZHMvcmVhY3QvanMtZnJhbWV3b3JrLWJlbmNobWFyay9rbzYvc3JjL3BhcnNlcmtvNi5qcz9mOWJlIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBsZXhlciBmcm9tICcuL2hpbWFsYXlhL2xleGVyLmpzJ1xyXG5pbXBvcnQgcGFyc2VyIGZyb20gJy4vaGltYWxheWEvcGFyc2VyLmpzJ1xyXG5pbXBvcnQge1xyXG4gIHZvaWRUYWdzLFxyXG4gIGNsb3NpbmdUYWdzLFxyXG4gIGNoaWxkbGVzc1RhZ3MsXHJcbiAgY2xvc2luZ1RhZ0FuY2VzdG9yQnJlYWtlcnNcclxufSBmcm9tICcuL2hpbWFsYXlhL3RhZ3MuanMnXHJcblxyXG5pbXBvcnQge1xyXG4gIHN0YXJ0c1dpdGgsXHJcbiAgZW5kc1dpdGhcclxufSBmcm9tICcuL2hpbWFsYXlhL2NvbXBhdC5qcydcclxuXHJcblxyXG5leHBvcnQgY29uc3QgcGFyc2VEZWZhdWx0cyA9IHtcclxuICB2b2lkVGFncyxcclxuICBjbG9zaW5nVGFncyxcclxuICBjaGlsZGxlc3NUYWdzLFxyXG4gIGNsb3NpbmdUYWdBbmNlc3RvckJyZWFrZXJzXHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBwYXJzZXJrbzYgKHN0ciwgb3B0aW9ucyA9IHBhcnNlRGVmYXVsdHMpIHtcclxuICBjb25zdCBzdGFydFRpbWUgPSBwZXJmb3JtYW5jZS5ub3coKTtcclxuXHJcbiAgY29uc3QgdG9rZW5zID0gbGV4ZXIoc3RyLCBvcHRpb25zKVxyXG4gIGNvbnN0IG5vZGVzID0gcGFyc2VyKHRva2Vucywgb3B0aW9ucylcclxuICBjb25zdCBtYXAgPSBmb3JtYXQobm9kZXMsIG9wdGlvbnMpXHJcblxyXG4gIGNvbnN0IGZpbmlzaFRpbWUgPSBwZXJmb3JtYW5jZS5ub3coKTtcclxuICBjb25zb2xlLmxvZygncGFyc2Vya282JywgKGZpbmlzaFRpbWUtc3RhcnRUaW1lKSk7XHJcbiAgcmV0dXJuIG1hcDtcclxufVxyXG5cclxuZnVuY3Rpb24gZm9ybWF0IChub2Rlcykge1xyXG4gIHZhciBhcnIgPSBbXTtcclxuICBub2Rlcy5mb3JFYWNoKG5vZGUgPT4ge1xyXG4gICAgY29uc3QgdHlwZSA9IG5vZGUudHlwZVxyXG4gICAgaWYgKHR5cGUgPT09ICdlbGVtZW50Jykge1xyXG4gICAgICBjb25zdCB0YWcgPSBub2RlLnRhZ05hbWU7XHJcbiAgICAgIGNvbnN0IGF0dHJzID0gZm9ybWF0QXR0cmlidXRlcyhub2RlLmF0dHJpYnV0ZXMpXHJcbiAgICAgIGNvbnN0IGNoaWxkcmVuID0gZm9ybWF0KG5vZGUuY2hpbGRyZW4pXHJcblxyXG4gICAgICBjb25zdCBvYmogPSB7fVxyXG4gICAgICBpZih0YWcudG9Mb3dlckNhc2UoKSE9dGFnIHx8IHRhZy5pbmRleE9mKCctJyk+MCl7XHJcbiAgICAgICAgb2JqLmJsb2NrID0gdGFnO1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIG9iai50YWcgPSB0YWc7XHJcbiAgICAgIH1cclxuICAgICAgaWYoYXR0cnMgJiYgT2JqZWN0LmtleXMoYXR0cnMpLmxlbmd0aD4wKXtcclxuICAgICAgICBvYmouYXR0cnMgPSBhdHRycztcclxuICAgICAgfVxyXG4gICAgICBpZihjaGlsZHJlbiAmJiBjaGlsZHJlbi5sZW5ndGg+MCl7XHJcbiAgICAgICAgb2JqLmNoaWxkcmVuID0gY2hpbGRyZW47XHJcbiAgICAgIH1cclxuICAgICAgYXJyLnB1c2gob2JqKVxyXG4gICAgfVxyXG4gICAgaWYoIWlzRW1wdHlPclNwYWNlcyhub2RlLmNvbnRlbnQpKXtcclxuICAgICAgYXJyLnB1c2gocGFyc2VKc0V4cmVzc2lvbihub2RlLmNvbnRlbnQpKVxyXG4gICAgfVxyXG4gIH0pXHJcbiAgcmV0dXJuIGFycjtcclxufVxyXG5cclxuZnVuY3Rpb24gZm9ybWF0QXR0cmlidXRlcyAoYXR0cmlidXRlcykge1xyXG4gIHZhciBhdHRycyA9IHt9XHJcbiAgYXR0cmlidXRlcy5mb3JFYWNoKGF0dHJpYnV0ZSA9PiB7XHJcbiAgICBjb25zdCBwYXJ0cyA9IHNwbGl0SGVhZChhdHRyaWJ1dGUudHJpbSgpLCAnPScpXHJcbiAgICBjb25zdCBrZXkgPSBwYXJ0c1swXVxyXG4gICAgY29uc3QgdmFsdWUgPSB0eXBlb2YgcGFydHNbMV0gPT09ICdzdHJpbmcnXHJcbiAgICAgID8gdW5xdW90ZShwYXJ0c1sxXSlcclxuICAgICAgOiBudWxsXHJcbiAgICBhdHRyc1trZXldID0gcGFyc2VKc0V4cmVzc2lvbih2YWx1ZSk7XHJcbiAgfSlcclxuICByZXR1cm4gYXR0cnNcclxufSBcclxuXHJcbmZ1bmN0aW9uIHNwbGl0SGVhZCAoc3RyLCBzZXApIHtcclxuICBjb25zdCBpZHggPSBzdHIuaW5kZXhPZihzZXApXHJcbiAgaWYgKGlkeCA9PT0gLTEpIHJldHVybiBbc3RyXVxyXG4gIHJldHVybiBbc3RyLnNsaWNlKDAsIGlkeCksIHN0ci5zbGljZShpZHggKyBzZXAubGVuZ3RoKV1cclxufVxyXG5cclxuZnVuY3Rpb24gdW5xdW90ZSAoc3RyKSB7XHJcbiAgY29uc3QgY2FyID0gc3RyLmNoYXJBdCgwKVxyXG4gIGNvbnN0IGVuZCA9IHN0ci5sZW5ndGggLSAxXHJcbiAgY29uc3QgaXNRdW90ZVN0YXJ0ID0gY2FyID09PSAnXCInIHx8IGNhciA9PT0gXCInXCJcclxuICBpZiAoaXNRdW90ZVN0YXJ0ICYmIGNhciA9PT0gc3RyLmNoYXJBdChlbmQpKSB7XHJcbiAgICByZXR1cm4gc3RyLnNsaWNlKDEsIGVuZClcclxuICB9XHJcbiAgcmV0dXJuIHN0clxyXG59XHJcblxyXG5mdW5jdGlvbiBwYXJzZUpzRXhyZXNzaW9uKHMpe1xyXG4gICAgICBpZihzdGFydHNXaXRoKHMsICd7JykgJiYgZW5kc1dpdGgocywgJ30nKSl7XHJcbiAgICAgICAgcyA9IHMuc2xpY2UoMSwgcy5sZW5ndGgtMSk7XHJcbiAgICAgICAgY29uc29sZS5sb2cocyk7XHJcbiAgICAgICAgcmV0dXJuIG5ldyBGdW5jdGlvbignbScsICdjdHgnLCAncmV0dXJuICcrcyk7XHJcbiAgICAgIH1cclxuICAgICAgcmV0dXJuIHM7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGlzRW1wdHlPclNwYWNlcyhzdHIpe1xyXG4gICAgcmV0dXJuICFzdHIgfHwgIXN0ci5tYXRjaCB8fCBzdHIubWF0Y2goL15cXHMqJC8pICE9PSBudWxsO1xyXG59XG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIGM6L1VzZXJzL3BtL0Rvd25sb2Fkcy9yZWFjdC9qcy1mcmFtZXdvcmstYmVuY2htYXJrL2tvNi9zcmMvcGFyc2Vya282LmpzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFzQkE7QUFDQTtBQXZCQTtBQUNBOzs7QUFBQTtBQUNBOzs7QUFBQTtBQUNBO0FBTUE7QUFDQTs7O0FBS0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUpBO0FBQ0E7QUFNQTtBQUFBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///9\n");

/***/ }),
/* 10 */
/*!************************************************************************************!*\
  !*** c:/Users/pm/Downloads/react/js-framework-benchmark/ko6/src/himalaya/lexer.js ***!
  \************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = lexer;\nexports.lex = lex;\nexports.findTextEnd = findTextEnd;\nexports.lexText = lexText;\nexports.lexComment = lexComment;\nexports.lexTag = lexTag;\nexports.isWhitespaceChar = isWhitespaceChar;\nexports.lexTagName = lexTagName;\nexports.lexTagAttributes = lexTagAttributes;\nexports.lexSkipTag = lexSkipTag;\n\nvar _compat = __webpack_require__(/*! ./compat.js */ 4);\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction lexer(str, options) {\n  var state = { str: str, options: options, cursor: 0, tokens: [] };\n  lex(state);\n  return state.tokens;\n}\n\nfunction lex(state) {\n  var str = state.str;\n\n  var len = str.length;\n  while (state.cursor < len) {\n    var start = state.cursor;\n    lexText(state);\n    if (state.cursor === start) {\n      var isComment = (0, _compat.startsWith)(str, '!--', state.cursor + 1);\n      if (isComment) {\n        lexComment(state);\n      } else {\n        var tagName = lexTag(state);\n        var safeTag = tagName.toLowerCase();\n        var childlessTags = state.options.childlessTags;\n\n        if ((0, _compat.arrayIncludes)(childlessTags, safeTag)) {\n          lexSkipTag(tagName, state);\n        }\n      }\n    }\n  }\n}\n\nvar alphanumeric = /[A-Za-z0-9]/;\nfunction findTextEnd(str, index) {\n  while (true) {\n    var textEnd = str.indexOf('<', index);\n    if (textEnd === -1) {\n      return textEnd;\n    }\n    var char = str.charAt(textEnd + 1);\n    if (char === '/' || char === '!' || alphanumeric.test(char)) {\n      return textEnd;\n    }\n    index = textEnd + 1;\n  }\n}\n\nfunction lexText(state) {\n  var type = 'text';\n  var str = state.str,\n      cursor = state.cursor;\n\n  var textEnd = findTextEnd(str, cursor);\n  if (textEnd === -1) {\n    // there is only text left\n    var _content = str.slice(cursor);\n    state.cursor = str.length;\n    state.tokens.push({ type: type, content: _content });\n    return;\n  }\n\n  if (textEnd === cursor) return;\n\n  var content = str.slice(cursor, textEnd);\n  state.cursor = textEnd;\n  state.tokens.push({ type: type, content: content });\n}\n\nfunction lexComment(state) {\n  state.cursor += 4; // \"<!--\".length\n  var str = state.str,\n      cursor = state.cursor;\n\n  var commentEnd = str.indexOf('-->', cursor);\n  var type = 'comment';\n  if (commentEnd === -1) {\n    // there is only the comment left\n    var _content2 = str.slice(cursor);\n    state.cursor = str.length;\n    state.tokens.push({ type: type, content: _content2 });\n    return;\n  }\n\n  var content = str.slice(cursor, commentEnd);\n  state.cursor = commentEnd + 3; // \"-->\".length\n  state.tokens.push({ type: type, content: content });\n}\n\nfunction lexTag(state) {\n  var str = state.str;\n\n  {\n    var secondChar = str.charAt(state.cursor + 1);\n    var close = secondChar === '/';\n    state.tokens.push({ type: 'tag-start', close: close });\n    state.cursor += close ? 2 : 1;\n  }\n  var tagName = lexTagName(state);\n  lexTagAttributes(state);\n  {\n    var firstChar = str.charAt(state.cursor);\n    var _close = firstChar === '/';\n    state.tokens.push({ type: 'tag-end', close: _close });\n    state.cursor += _close ? 2 : 1;\n  }\n  return tagName;\n}\n\n// See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions#special-white-space\nvar whitespace = /\\s/;\nfunction isWhitespaceChar(char) {\n  return whitespace.test(char);\n}\n\nfunction lexTagName(state) {\n  var str = state.str,\n      cursor = state.cursor;\n\n  var len = str.length;\n  var start = cursor;\n  while (start < len) {\n    var char = str.charAt(start);\n    var isTagChar = !(isWhitespaceChar(char) || char === '/' || char === '>');\n    if (isTagChar) break;\n    start++;\n  }\n\n  var end = start + 1;\n  while (end < len) {\n    var _char = str.charAt(end);\n    var _isTagChar = !(isWhitespaceChar(_char) || _char === '/' || _char === '>');\n    if (!_isTagChar) break;\n    end++;\n  }\n\n  state.cursor = end;\n  var tagName = str.slice(start, end);\n  state.tokens.push({ type: 'tag', content: tagName });\n  return tagName;\n}\n\nfunction lexTagAttributes(state) {\n  var str = state.str,\n      tokens = state.tokens;\n\n  var cursor = state.cursor;\n  var quote = null; // null, single-, or double-quote\n  var wordBegin = cursor; // index of word start\n  var words = []; // \"key\", \"key=value\", \"key='value'\", etc\n  var len = str.length;\n  while (cursor < len) {\n    var char = str.charAt(cursor);\n    if (quote) {\n      var isQuoteEnd = char === quote;\n      if (isQuoteEnd) {\n        quote = null;\n      }\n      cursor++;\n      continue;\n    }\n\n    var isTagEnd = char === '/' || char === '>';\n    if (isTagEnd) {\n      if (cursor !== wordBegin) {\n        words.push(str.slice(wordBegin, cursor));\n      }\n      break;\n    }\n\n    var isWordEnd = isWhitespaceChar(char);\n    if (isWordEnd) {\n      if (cursor !== wordBegin) {\n        words.push(str.slice(wordBegin, cursor));\n      }\n      wordBegin = cursor + 1;\n      cursor++;\n      continue;\n    }\n\n    var isQuoteStart = char === '\\'' || char === '\"';\n    if (isQuoteStart) {\n      quote = char;\n      cursor++;\n      continue;\n    }\n\n    cursor++;\n  }\n  state.cursor = cursor;\n\n  var wLen = words.length;\n  var type = 'attribute';\n  for (var i = 0; i < wLen; i++) {\n    var word = words[i];\n    var isNotPair = word.indexOf('=') === -1;\n    if (isNotPair) {\n      var secondWord = words[i + 1];\n      if (secondWord && (0, _compat.startsWith)(secondWord, '=')) {\n        if (secondWord.length > 1) {\n          var newWord = word + secondWord;\n          tokens.push({ type: type, content: newWord });\n          i += 1;\n          continue;\n        }\n        var thirdWord = words[i + 2];\n        i += 1;\n        if (thirdWord) {\n          var _newWord = word + '=' + thirdWord;\n          tokens.push({ type: type, content: _newWord });\n          i += 1;\n          continue;\n        }\n      }\n    }\n    if ((0, _compat.endsWith)(word, '=')) {\n      var _secondWord = words[i + 1];\n      if (_secondWord && !(0, _compat.stringIncludes)(_secondWord, '=')) {\n        var _newWord3 = word + _secondWord;\n        tokens.push({ type: type, content: _newWord3 });\n        i += 1;\n        continue;\n      }\n\n      var _newWord2 = word.slice(0, -1);\n      tokens.push({ type: type, content: _newWord2 });\n      continue;\n    }\n\n    tokens.push({ type: type, content: word });\n  }\n}\n\nfunction lexSkipTag(tagName, state) {\n  var str = state.str,\n      cursor = state.cursor,\n      tokens = state.tokens;\n\n  var len = str.length;\n  var index = cursor;\n  while (index < len) {\n    var nextTag = str.indexOf('</', index);\n    if (nextTag === -1) {\n      lexText(state);\n      break;\n    }\n\n    var tagState = { str: str, cursor: nextTag + 2, tokens: [] };\n    var name = lexTagName(tagState);\n    var safeTagName = tagName.toLowerCase();\n    if (safeTagName !== name.toLowerCase()) {\n      index = tagState.cursor;\n      continue;\n    }\n\n    var content = str.slice(cursor, nextTag);\n    tokens.push({ type: 'text', content: content });\n    var openTag = { type: 'tag-start', close: true };\n    var closeTag = { type: 'tag-end', close: false };\n    lexTagAttributes(tagState);\n    tokens.push.apply(tokens, [openTag].concat(_toConsumableArray(tagState.tokens), [closeTag]));\n    state.cursor = tagState.cursor + 1;\n    break;\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///10\n");

/***/ }),
/* 11 */
/*!*************************************************************************************!*\
  !*** c:/Users/pm/Downloads/react/js-framework-benchmark/ko6/src/himalaya/parser.js ***!
  \*************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = parser;\nexports.hasTerminalParent = hasTerminalParent;\nexports.parse = parse;\n\nvar _compat = __webpack_require__(/*! ./compat.js */ 4);\n\nfunction parser(tokens, options) {\n  var root = { tagName: null, children: [] };\n  var state = { tokens: tokens, options: options, cursor: 0, stack: [root] };\n  parse(state);\n  return root.children;\n}\n\nfunction hasTerminalParent(tagName, stack, terminals) {\n  var tagParents = terminals[tagName];\n  if (tagParents) {\n    var currentIndex = stack.length - 1;\n    while (currentIndex >= 0) {\n      var parentTagName = stack[currentIndex].tagName;\n      if (parentTagName === tagName) {\n        break;\n      }\n      if ((0, _compat.arrayIncludes)(tagParents, parentTagName)) {\n        return true;\n      }\n      currentIndex--;\n    }\n  }\n  return false;\n}\n\nfunction parse(state) {\n  var tokens = state.tokens,\n      options = state.options;\n  var stack = state.stack;\n\n  var nodes = stack[stack.length - 1].children;\n  var len = tokens.length;\n  var cursor = state.cursor;\n\n  while (cursor < len) {\n    var token = tokens[cursor];\n    if (token.type !== 'tag-start') {\n      nodes.push(token);\n      cursor++;\n      continue;\n    }\n\n    var tagToken = tokens[++cursor];\n    cursor++;\n    var tagName = tagToken.content.toLowerCase();\n    if (token.close) {\n      var item = void 0;\n      while (item = stack.pop()) {\n        if (tagName === item.tagName) break;\n      }\n      while (cursor < len) {\n        var endToken = tokens[cursor];\n        if (endToken.type !== 'tag-end') break;\n        cursor++;\n      }\n      break;\n    }\n\n    var isClosingTag = (0, _compat.arrayIncludes)(options.closingTags, tagName);\n    var shouldRewindToAutoClose = isClosingTag;\n    if (shouldRewindToAutoClose) {\n      var terminals = options.closingTagAncestorBreakers;\n\n      shouldRewindToAutoClose = !hasTerminalParent(tagName, stack, terminals);\n    }\n\n    if (shouldRewindToAutoClose) {\n      // rewind the stack to just above the previous\n      // closing tag of the same name\n      var currentIndex = stack.length - 1;\n      while (currentIndex > 0) {\n        if (tagName === stack[currentIndex].tagName) {\n          stack = stack.slice(0, currentIndex);\n          var previousIndex = currentIndex - 1;\n          nodes = stack[previousIndex].children;\n          break;\n        }\n        currentIndex = currentIndex - 1;\n      }\n    }\n\n    var attributes = [];\n    var attrToken = void 0;\n    while (cursor < len) {\n      attrToken = tokens[cursor];\n      if (attrToken.type === 'tag-end') break;\n      attributes.push(attrToken.content);\n      cursor++;\n    }\n\n    cursor++;\n    var children = [];\n    nodes.push({\n      type: 'element',\n      tagName: tagToken.content,\n      attributes: attributes,\n      children: children\n    });\n\n    var hasChildren = !(attrToken.close || (0, _compat.arrayIncludes)(options.voidTags, tagName));\n    if (hasChildren) {\n      stack.push({ tagName: tagName, children: children });\n      var innerState = { tokens: tokens, options: options, cursor: cursor, stack: stack };\n      parse(innerState);\n      cursor = innerState.cursor;\n    }\n  }\n  state.cursor = cursor;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTEuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vYzovVXNlcnMvcG0vRG93bmxvYWRzL3JlYWN0L2pzLWZyYW1ld29yay1iZW5jaG1hcmsva282L3NyYy9oaW1hbGF5YS9wYXJzZXIuanM/MWY5NiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge2FycmF5SW5jbHVkZXN9IGZyb20gJy4vY29tcGF0LmpzJ1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBwYXJzZXIgKHRva2Vucywgb3B0aW9ucykge1xuICBjb25zdCByb290ID0ge3RhZ05hbWU6IG51bGwsIGNoaWxkcmVuOiBbXX1cbiAgY29uc3Qgc3RhdGUgPSB7dG9rZW5zLCBvcHRpb25zLCBjdXJzb3I6IDAsIHN0YWNrOiBbcm9vdF19XG4gIHBhcnNlKHN0YXRlKVxuICByZXR1cm4gcm9vdC5jaGlsZHJlblxufVxuXG5leHBvcnQgZnVuY3Rpb24gaGFzVGVybWluYWxQYXJlbnQgKHRhZ05hbWUsIHN0YWNrLCB0ZXJtaW5hbHMpIHtcbiAgY29uc3QgdGFnUGFyZW50cyA9IHRlcm1pbmFsc1t0YWdOYW1lXVxuICBpZiAodGFnUGFyZW50cykge1xuICAgIGxldCBjdXJyZW50SW5kZXggPSBzdGFjay5sZW5ndGggLSAxXG4gICAgd2hpbGUgKGN1cnJlbnRJbmRleCA+PSAwKSB7XG4gICAgICBjb25zdCBwYXJlbnRUYWdOYW1lID0gc3RhY2tbY3VycmVudEluZGV4XS50YWdOYW1lXG4gICAgICBpZiAocGFyZW50VGFnTmFtZSA9PT0gdGFnTmFtZSkge1xuICAgICAgICBicmVha1xuICAgICAgfVxuICAgICAgaWYgKGFycmF5SW5jbHVkZXModGFnUGFyZW50cywgcGFyZW50VGFnTmFtZSkpIHtcbiAgICAgICAgcmV0dXJuIHRydWVcbiAgICAgIH1cbiAgICAgIGN1cnJlbnRJbmRleC0tXG4gICAgfVxuICB9XG4gIHJldHVybiBmYWxzZVxufVxuXG5leHBvcnQgZnVuY3Rpb24gcGFyc2UgKHN0YXRlKSB7XG4gIGNvbnN0IHt0b2tlbnMsIG9wdGlvbnN9ID0gc3RhdGVcbiAgbGV0IHtzdGFja30gPSBzdGF0ZVxuICBsZXQgbm9kZXMgPSBzdGFja1tzdGFjay5sZW5ndGggLSAxXS5jaGlsZHJlblxuICBjb25zdCBsZW4gPSB0b2tlbnMubGVuZ3RoXG4gIGxldCB7Y3Vyc29yfSA9IHN0YXRlXG4gIHdoaWxlIChjdXJzb3IgPCBsZW4pIHtcbiAgICBjb25zdCB0b2tlbiA9IHRva2Vuc1tjdXJzb3JdXG4gICAgaWYgKHRva2VuLnR5cGUgIT09ICd0YWctc3RhcnQnKSB7XG4gICAgICBub2Rlcy5wdXNoKHRva2VuKVxuICAgICAgY3Vyc29yKytcbiAgICAgIGNvbnRpbnVlXG4gICAgfVxuXG4gICAgY29uc3QgdGFnVG9rZW4gPSB0b2tlbnNbKytjdXJzb3JdXG4gICAgY3Vyc29yKytcbiAgICBjb25zdCB0YWdOYW1lID0gdGFnVG9rZW4uY29udGVudC50b0xvd2VyQ2FzZSgpXG4gICAgaWYgKHRva2VuLmNsb3NlKSB7XG4gICAgICBsZXQgaXRlbVxuICAgICAgd2hpbGUgKChpdGVtID0gc3RhY2sucG9wKCkpKSB7XG4gICAgICAgIGlmICh0YWdOYW1lID09PSBpdGVtLnRhZ05hbWUpIGJyZWFrXG4gICAgICB9XG4gICAgICB3aGlsZSAoY3Vyc29yIDwgbGVuKSB7XG4gICAgICAgIGNvbnN0IGVuZFRva2VuID0gdG9rZW5zW2N1cnNvcl1cbiAgICAgICAgaWYgKGVuZFRva2VuLnR5cGUgIT09ICd0YWctZW5kJykgYnJlYWtcbiAgICAgICAgY3Vyc29yKytcbiAgICAgIH1cbiAgICAgIGJyZWFrXG4gICAgfVxuXG4gICAgY29uc3QgaXNDbG9zaW5nVGFnID0gYXJyYXlJbmNsdWRlcyhvcHRpb25zLmNsb3NpbmdUYWdzLCB0YWdOYW1lKVxuICAgIGxldCBzaG91bGRSZXdpbmRUb0F1dG9DbG9zZSA9IGlzQ2xvc2luZ1RhZ1xuICAgIGlmIChzaG91bGRSZXdpbmRUb0F1dG9DbG9zZSkge1xuICAgICAgY29uc3QgeyBjbG9zaW5nVGFnQW5jZXN0b3JCcmVha2VyczogdGVybWluYWxzIH0gPSBvcHRpb25zXG4gICAgICBzaG91bGRSZXdpbmRUb0F1dG9DbG9zZSA9ICFoYXNUZXJtaW5hbFBhcmVudCh0YWdOYW1lLCBzdGFjaywgdGVybWluYWxzKVxuICAgIH1cblxuICAgIGlmIChzaG91bGRSZXdpbmRUb0F1dG9DbG9zZSkge1xuICAgICAgLy8gcmV3aW5kIHRoZSBzdGFjayB0byBqdXN0IGFib3ZlIHRoZSBwcmV2aW91c1xuICAgICAgLy8gY2xvc2luZyB0YWcgb2YgdGhlIHNhbWUgbmFtZVxuICAgICAgbGV0IGN1cnJlbnRJbmRleCA9IHN0YWNrLmxlbmd0aCAtIDFcbiAgICAgIHdoaWxlIChjdXJyZW50SW5kZXggPiAwKSB7XG4gICAgICAgIGlmICh0YWdOYW1lID09PSBzdGFja1tjdXJyZW50SW5kZXhdLnRhZ05hbWUpIHtcbiAgICAgICAgICBzdGFjayA9IHN0YWNrLnNsaWNlKDAsIGN1cnJlbnRJbmRleClcbiAgICAgICAgICBjb25zdCBwcmV2aW91c0luZGV4ID0gY3VycmVudEluZGV4IC0gMVxuICAgICAgICAgIG5vZGVzID0gc3RhY2tbcHJldmlvdXNJbmRleF0uY2hpbGRyZW5cbiAgICAgICAgICBicmVha1xuICAgICAgICB9XG4gICAgICAgIGN1cnJlbnRJbmRleCA9IGN1cnJlbnRJbmRleCAtIDFcbiAgICAgIH1cbiAgICB9XG5cbiAgICBsZXQgYXR0cmlidXRlcyA9IFtdXG4gICAgbGV0IGF0dHJUb2tlblxuICAgIHdoaWxlIChjdXJzb3IgPCBsZW4pIHtcbiAgICAgIGF0dHJUb2tlbiA9IHRva2Vuc1tjdXJzb3JdXG4gICAgICBpZiAoYXR0clRva2VuLnR5cGUgPT09ICd0YWctZW5kJykgYnJlYWtcbiAgICAgIGF0dHJpYnV0ZXMucHVzaChhdHRyVG9rZW4uY29udGVudClcbiAgICAgIGN1cnNvcisrXG4gICAgfVxuXG4gICAgY3Vyc29yKytcbiAgICBjb25zdCBjaGlsZHJlbiA9IFtdXG4gICAgbm9kZXMucHVzaCh7XG4gICAgICB0eXBlOiAnZWxlbWVudCcsXG4gICAgICB0YWdOYW1lOiB0YWdUb2tlbi5jb250ZW50LFxuICAgICAgYXR0cmlidXRlcyxcbiAgICAgIGNoaWxkcmVuXG4gICAgfSlcblxuICAgIGNvbnN0IGhhc0NoaWxkcmVuID0gIShhdHRyVG9rZW4uY2xvc2UgfHwgYXJyYXlJbmNsdWRlcyhvcHRpb25zLnZvaWRUYWdzLCB0YWdOYW1lKSlcbiAgICBpZiAoaGFzQ2hpbGRyZW4pIHtcbiAgICAgIHN0YWNrLnB1c2goe3RhZ05hbWUsIGNoaWxkcmVufSlcbiAgICAgIGNvbnN0IGlubmVyU3RhdGUgPSB7dG9rZW5zLCBvcHRpb25zLCBjdXJzb3IsIHN0YWNrfVxuICAgICAgcGFyc2UoaW5uZXJTdGF0ZSlcbiAgICAgIGN1cnNvciA9IGlubmVyU3RhdGUuY3Vyc29yXG4gICAgfVxuICB9XG4gIHN0YXRlLmN1cnNvciA9IGN1cnNvclxufVxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIGM6L1VzZXJzL3BtL0Rvd25sb2Fkcy9yZWFjdC9qcy1mcmFtZXdvcmstYmVuY2htYXJrL2tvNi9zcmMvaGltYWxheWEvcGFyc2VyLmpzIl0sIm1hcHBpbmdzIjoiOzs7OztBQUVBO0FBT0E7QUFrQkE7QUFDQTtBQTVCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBRUE7QUFDQTtBQUpBO0FBQ0E7QUFLQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFKQTtBQUNBO0FBTUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///11\n");

/***/ }),
/* 12 */
/*!***********************************************************************************!*\
  !*** c:/Users/pm/Downloads/react/js-framework-benchmark/ko6/src/himalaya/tags.js ***!
  \***********************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/*\n  Tags which contain arbitary non-parsed content\n  For example: <script> JavaScript should not be parsed\n*/\nvar childlessTags = exports.childlessTags = ['style', 'script', 'template'];\n\n/*\n  Tags which auto-close because they cannot be nested\n  For example: <p>Outer<p>Inner is <p>Outer</p><p>Inner</p>\n*/\nvar closingTags = exports.closingTags = ['html', 'head', 'body', 'p', 'dt', 'dd', 'li', 'option', 'thead', 'th', 'tbody', 'tr', 'td', 'tfoot', 'colgroup'];\n\n/*\n  Closing tags which have ancestor tags which\n  may exist within them which prevent the\n  closing tag from auto-closing.\n  For example: in <li><ul><li></ul></li>,\n  the top-level <li> should not auto-close.\n*/\nvar closingTagAncestorBreakers = exports.closingTagAncestorBreakers = {\n  li: ['ul', 'ol', 'menu'],\n  dt: ['dl'],\n  dd: ['dl'],\n  tbody: ['table'],\n  thead: ['table'],\n  tfoot: ['table'],\n  tr: ['table'],\n  td: ['table']\n\n  /*\n    Tags which do not need the closing tag\n    For example: <img> does not need </img>\n  */\n};var voidTags = exports.voidTags = ['!doctype', 'area', 'base', 'br', 'col', 'command', 'embed', 'hr', 'img', 'input', 'keygen', 'link', 'meta', 'param', 'source', 'track', 'wbr'];//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTIuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vYzovVXNlcnMvcG0vRG93bmxvYWRzL3JlYWN0L2pzLWZyYW1ld29yay1iZW5jaG1hcmsva282L3NyYy9oaW1hbGF5YS90YWdzLmpzP2U5MDkiXSwic291cmNlc0NvbnRlbnQiOlsiLypcbiAgVGFncyB3aGljaCBjb250YWluIGFyYml0YXJ5IG5vbi1wYXJzZWQgY29udGVudFxuICBGb3IgZXhhbXBsZTogPHNjcmlwdD4gSmF2YVNjcmlwdCBzaG91bGQgbm90IGJlIHBhcnNlZFxuKi9cbmV4cG9ydCBjb25zdCBjaGlsZGxlc3NUYWdzID0gWydzdHlsZScsICdzY3JpcHQnLCAndGVtcGxhdGUnXVxuXG4vKlxuICBUYWdzIHdoaWNoIGF1dG8tY2xvc2UgYmVjYXVzZSB0aGV5IGNhbm5vdCBiZSBuZXN0ZWRcbiAgRm9yIGV4YW1wbGU6IDxwPk91dGVyPHA+SW5uZXIgaXMgPHA+T3V0ZXI8L3A+PHA+SW5uZXI8L3A+XG4qL1xuZXhwb3J0IGNvbnN0IGNsb3NpbmdUYWdzID0gW1xuICAnaHRtbCcsICdoZWFkJywgJ2JvZHknLCAncCcsICdkdCcsICdkZCcsICdsaScsICdvcHRpb24nLFxuICAndGhlYWQnLCAndGgnLCAndGJvZHknLCAndHInLCAndGQnLCAndGZvb3QnLCAnY29sZ3JvdXAnXG5dXG5cbi8qXG4gIENsb3NpbmcgdGFncyB3aGljaCBoYXZlIGFuY2VzdG9yIHRhZ3Mgd2hpY2hcbiAgbWF5IGV4aXN0IHdpdGhpbiB0aGVtIHdoaWNoIHByZXZlbnQgdGhlXG4gIGNsb3NpbmcgdGFnIGZyb20gYXV0by1jbG9zaW5nLlxuICBGb3IgZXhhbXBsZTogaW4gPGxpPjx1bD48bGk+PC91bD48L2xpPixcbiAgdGhlIHRvcC1sZXZlbCA8bGk+IHNob3VsZCBub3QgYXV0by1jbG9zZS5cbiovXG5leHBvcnQgY29uc3QgY2xvc2luZ1RhZ0FuY2VzdG9yQnJlYWtlcnMgPSB7XG4gIGxpOiBbJ3VsJywgJ29sJywgJ21lbnUnXSxcbiAgZHQ6IFsnZGwnXSxcbiAgZGQ6IFsnZGwnXSxcbiAgdGJvZHk6IFsndGFibGUnXSxcbiAgdGhlYWQ6IFsndGFibGUnXSxcbiAgdGZvb3Q6IFsndGFibGUnXSxcbiAgdHI6IFsndGFibGUnXSxcbiAgdGQ6IFsndGFibGUnXVxufVxuXG4vKlxuICBUYWdzIHdoaWNoIGRvIG5vdCBuZWVkIHRoZSBjbG9zaW5nIHRhZ1xuICBGb3IgZXhhbXBsZTogPGltZz4gZG9lcyBub3QgbmVlZCA8L2ltZz5cbiovXG5leHBvcnQgY29uc3Qgdm9pZFRhZ3MgPSBbXG4gICchZG9jdHlwZScsICdhcmVhJywgJ2Jhc2UnLCAnYnInLCAnY29sJywgJ2NvbW1hbmQnLFxuICAnZW1iZWQnLCAnaHInLCAnaW1nJywgJ2lucHV0JywgJ2tleWdlbicsICdsaW5rJyxcbiAgJ21ldGEnLCAncGFyYW0nLCAnc291cmNlJywgJ3RyYWNrJywgJ3dicidcbl1cblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyBjOi9Vc2Vycy9wbS9Eb3dubG9hZHMvcmVhY3QvanMtZnJhbWV3b3JrLWJlbmNobWFyay9rbzYvc3JjL2hpbWFsYXlhL3RhZ3MuanMiXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7Ozs7QUFJQTtBQUNBO0FBQ0E7Ozs7QUFJQTtBQUNBO0FBSUE7Ozs7Ozs7QUFPQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBOzs7O0FBWEEiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///12\n");

/***/ }),
/* 13 */
/*!*****************************************************************************************!*\
  !*** c:/Users/pm/Downloads/react/js-framework-benchmark/ko6/src/blocks/blockForeach.js ***!
  \*****************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.default = blockForeach;\n\nvar _tkoUtils = __webpack_require__(/*! ../tko/tko.utils.js */ 1);\n\nvar _tkoObservable = __webpack_require__(/*! ../tko/tko.observable.js */ 0);\n\nvar _tkoComputed = __webpack_require__(/*! ../tko/tko.computed.js */ 2);\n\nvar _renderCtx = __webpack_require__(/*! ../renderCtx.js */ 3);\n\nfunction blockForeach(parent, tpl, ctx, level) {\n\tif (!(tpl && tpl.children && tpl.children.length > 0)) {\n\t\tconsole.log(\"empty foreach\", tpl);\n\t}\n\tif (tpl.attrs && tpl.attrs['items'] && tpl.attrs['items'].call) {\n\n\t\tvar items = tpl.attrs['items'];\n\t\tvar ctx0 = { subctx: [], tpl: tpl, ctx: ctx };\n\t\tctx0.dispose = function () {\n\t\t\t(0, _tkoUtils.arrayForEach)(ctx0.subctx, function (e) {\n\t\t\t\tif (e.dispose) e.dispose();\n\t\t\t});\n\t\t\tctx0.subctx = [];\n\t\t};\n\t\tctx.subscribers.push(ctx0);\n\n\t\tvar stamp = (0, _renderCtx.createStamp)(parent, 'foreach');\n\t\tif (level == 0) ctx.rootNodes.push(stamp[1]);\n\n\t\tvar renderItems = function renderItems(items2) {\n\n\t\t\tif (items2.length == 0) {\n\t\t\t\t//remove all\n\t\t\t\tconsole.log('removeAll');\n\t\t\t\t(0, _tkoUtils.arrayForEach)(ctx0.subctx, function (e) {\n\t\t\t\t\te.dispose();\n\t\t\t\t});\n\t\t\t\tctx0.subctx = [];\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar eqMin = arrEq(ctx0.subctx, items2);\n\n\t\t\tif (eqMin == ctx0.subctx.length) {\n\t\t\t\t//only Append\n\t\t\t\tconsole.log('onlyAppend', eqMin);\n\t\t\t\tfor (var i = eqMin; i < items2.length; i++) {\n\t\t\t\t\tappendItem(items2[i], stamp, ctx0);\n\t\t\t\t}return;\n\t\t\t}\n\t\t\tif (ctx0.subctx.length > items2.length && eqMin == items2.length) {\n\t\t\t\t//only remove\n\t\t\t\tconsole.log('onlyRemove', eqMin, ctx0.subctx.length, '<', items2.length);\n\t\t\t\tfor (var i = ctx0.subctx.length - 1; i >= items2.length; i--) {\n\t\t\t\t\tctx0.subctx[i].dispose();\n\t\t\t\t}ctx0.subctx = ctx0.subctx.slice(0, items2.length);\n\t\t\t\tconsole.log('onlyRemove', eqMin, ctx0.subctx.length, '=', items2.length);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (Map && Map.call) {\n\t\t\t\t//merge contenxt in Map\n\t\t\t\tmergeItemsMap(ctx0, items2, eqMin, stamp[0], stamp[1], new Map());\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t(0, _tkoUtils.arrayForEach)(ctx0.subctx, function (e) {\n\t\t\t\te.dispose();\n\t\t\t});\n\t\t\tctx0.subctx = [];\n\t\t\tfor (var i = 0; i < items2.length; i++) {\n\t\t\t\tappendItem(items2[i], stamp, ctx0);\n\t\t\t}\n\t\t};\n\n\t\tvar kv = (0, _tkoComputed.computed)(function () {\n\t\t\tvar val2 = items(ctx.model, ctx);\n\t\t\tval2 = (0, _tkoObservable.unwrap)(val2);\n\t\t\t_tkoObservable.dependencyDetection.ignore(function () {\n\t\t\t\trenderItems(val2);\n\t\t\t});\n\t\t}, this);\n\t\tkv();\n\t\tif (kv.getDependenciesCount() > 0) {\n\t\t\tctx.subscribers.push(kv);\n\t\t} else {\n\t\t\tkv.dispose();\n\t\t}\n\t}\n};\n\nfunction arrEq(subctx, items2, start) {\n\tstart = start || 0;\n\tvar max = subctx.length < items2.length ? subctx.length : items2.length;\n\tfor (var i = 0; i < max; i++) {\n\t\tif (subctx[i].model != items2[i]) return i;\n\t}\n\treturn max;\n}\n\nfunction appendItem(m2, parent, ctx0) {\n\tvar ctx2 = (0, _renderCtx.createCtx)(m2, ctx0.ctx, null);\n\t(0, _renderCtx.renderCtx)(parent, ctx0.tpl.children, ctx2, 0);\n\tctx0.subctx.push(ctx2);\n\treturn ctx2;\n}\n\nfunction mergeItemsMap(ctx0, items2, eqMin, parent, stamp, oldMap) {\n\tvar old = ctx0.subctx;\n\t//index old\n\tfor (var i = eqMin; i < ctx0.subctx.length; i++) {\n\t\tvar ctx2 = ctx0.subctx[i];\n\t\tctx2._oldIndex = i;\n\t\tctx2._newIndex = -1;\n\t\toldMap.set(ctx2.model, ctx2);\n\t}\n\t//index new\n\tvar reusedCtx = [];\n\tfor (var i = eqMin; i < items2.length; i++) {\n\t\tvar ctx2 = oldMap.get(items2[i]);\n\t\tif (ctx2) {\n\t\t\tctx2._newIndex = i;\n\t\t\treusedCtx[i] = ctx2;\n\t\t}\n\t}\n\n\tctx0.subctx = ctx0.subctx.slice(0, eqMin);\n\tvar aktPosOld = nextOldPos(old, eqMin);\n\tfor (var i = eqMin; i < items2.length; i++) {\n\t\tvar m2 = items2[i];\n\t\tif (aktPosOld < old.length && old[aktPosOld].model === m2) {\n\t\t\t//the same models, all is ok\n\t\t\tctx0.subctx.push(old[aktPosOld]);\n\t\t\told[aktPosOld] = null;\n\t\t\taktPosOld = nextOldPos(old, aktPosOld + 1);\n\t\t\tcontinue;\n\t\t}\n\t\tvar beforeNode = aktPosOld < old.length ? old[aktPosOld].rootNodes[0] : stamp;\n\t\tvar ctx2 = reusedCtx[i];\n\t\tif (ctx2) {\n\t\t\t//reuse\n\t\t\t(0, _tkoUtils.arrayForEach)(ctx2.rootNodes, function (n) {\n\t\t\t\tparent.insertBefore(n, beforeNode);\n\t\t\t});\n\t\t\tctx0.subctx.push(ctx2);\n\t\t\told[ctx2._oldIndex] = null;\n\t\t} else {\n\t\t\t//create new\n\t\t\tctx2 = appendItem(m2, beforeNode ? [parent, beforeNode] : parent, ctx0);\n\t\t\tctx0.subctx.push(ctx2);\n\t\t}\n\t}\n}\n\nfunction nextOldPos(old, aktPosOld) {\n\twhile (aktPosOld < old.length) {\n\t\tvar v = old[aktPosOld];\n\t\tif (v != null) {\n\t\t\tif (v._newIndex >= 0) return aktPosOld;\n\t\t\tv.dispose();\n\t\t\told[aktPosOld] = null;\n\t\t}\n\t\taktPosOld++;\n\t}\n\treturn aktPosOld;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vYzovVXNlcnMvcG0vRG93bmxvYWRzL3JlYWN0L2pzLWZyYW1ld29yay1iZW5jaG1hcmsva282L3NyYy9ibG9ja3MvYmxvY2tGb3JlYWNoLmpzPzNhODgiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgYXJyYXlGb3JFYWNoIH0gIGZyb20gJy4uL3Rrby90a28udXRpbHMuanMnO1xyXG5pbXBvcnQgeyB1bndyYXAsIGRlcGVuZGVuY3lEZXRlY3Rpb24gfSAgZnJvbSAnLi4vdGtvL3Rrby5vYnNlcnZhYmxlLmpzJztcclxuaW1wb3J0IHsgY29tcHV0ZWQgfSAgZnJvbSAnLi4vdGtvL3Rrby5jb21wdXRlZC5qcyc7XHJcbmltcG9ydCB7IHJlbmRlckN0eCwgY3JlYXRlQ3R4LCBjcmVhdGVTdGFtcCB9ICBmcm9tICcuLi9yZW5kZXJDdHguanMnO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gYmxvY2tGb3JlYWNoKHBhcmVudCwgdHBsLCBjdHgsIGxldmVsKXtcclxuXHRpZighKHRwbCAmJiB0cGwuY2hpbGRyZW4gJiYgdHBsLmNoaWxkcmVuLmxlbmd0aD4wKSl7XHJcblx0XHRjb25zb2xlLmxvZyhcImVtcHR5IGZvcmVhY2hcIiAsdHBsKTtcclxuXHR9XHJcblx0aWYodHBsLmF0dHJzICYmIHRwbC5hdHRyc1snaXRlbXMnXSAmJiB0cGwuYXR0cnNbJ2l0ZW1zJ10uY2FsbCl7XHJcblxyXG5cdFx0dmFyIGl0ZW1zID0gdHBsLmF0dHJzWydpdGVtcyddO1xyXG5cdFx0dmFyIGN0eDAgPSB7IHN1YmN0eCA6IFtdLCB0cGwgOiB0cGwsIGN0eDogY3R4IH07XHJcblx0XHRjdHgwLmRpc3Bvc2UgPSBmdW5jdGlvbigpIHtcclxuXHRcdFx0YXJyYXlGb3JFYWNoKGN0eDAuc3ViY3R4LCBmdW5jdGlvbihlKSB7IGlmKGUuZGlzcG9zZSkgZS5kaXNwb3NlKCk7IH0gKTtcclxuXHRcdFx0Y3R4MC5zdWJjdHggPSBbXTtcclxuXHRcdH07XHJcblx0XHRjdHguc3Vic2NyaWJlcnMucHVzaChjdHgwKTtcclxuXHJcblx0XHR2YXIgc3RhbXAgPVx0Y3JlYXRlU3RhbXAocGFyZW50LCAnZm9yZWFjaCcpO1xyXG5cdFx0aWYobGV2ZWw9PTApIGN0eC5yb290Tm9kZXMucHVzaChzdGFtcFsxXSk7XHJcblxyXG5cdFx0dmFyIHJlbmRlckl0ZW1zID0gZnVuY3Rpb24oaXRlbXMyKXtcclxuXHJcblx0XHRcdGlmKGl0ZW1zMi5sZW5ndGg9PTApe1xyXG5cdFx0XHRcdC8vcmVtb3ZlIGFsbFxyXG5cdFx0XHRcdGNvbnNvbGUubG9nKCdyZW1vdmVBbGwnKTtcclxuXHRcdFx0XHRhcnJheUZvckVhY2goY3R4MC5zdWJjdHgsIGZ1bmN0aW9uKGUpIHsgZS5kaXNwb3NlKCk7IH0pO1xyXG5cdFx0XHRcdGN0eDAuc3ViY3R4ID0gW107XHJcblx0XHRcdFx0cmV0dXJuO1xyXG5cdFx0XHR9XHJcblxyXG5cdFx0XHR2YXIgZXFNaW4gPSBhcnJFcShjdHgwLnN1YmN0eCwgaXRlbXMyKTtcclxuXHJcblx0XHRcdGlmKGVxTWluPT1jdHgwLnN1YmN0eC5sZW5ndGgpe1xyXG5cdFx0XHRcdC8vb25seSBBcHBlbmRcclxuXHRcdFx0XHRjb25zb2xlLmxvZygnb25seUFwcGVuZCcsIGVxTWluKTtcclxuXHRcdFx0XHRmb3IodmFyIGk9ZXFNaW47IGk8aXRlbXMyLmxlbmd0aDsgaSsrKSBhcHBlbmRJdGVtKGl0ZW1zMltpXSwgc3RhbXAsIGN0eDApO1xyXG5cdFx0XHRcdHJldHVybjtcclxuXHRcdFx0fVxyXG5cdFx0XHRpZihjdHgwLnN1YmN0eC5sZW5ndGg+aXRlbXMyLmxlbmd0aCAmJiBlcU1pbj09aXRlbXMyLmxlbmd0aCl7XHJcblx0XHRcdFx0Ly9vbmx5IHJlbW92ZVxyXG5cdFx0XHRcdGNvbnNvbGUubG9nKCdvbmx5UmVtb3ZlJywgZXFNaW4sIGN0eDAuc3ViY3R4Lmxlbmd0aCwgJzwnLCBpdGVtczIubGVuZ3RoKTtcclxuXHRcdFx0XHRmb3IodmFyIGk9Y3R4MC5zdWJjdHgubGVuZ3RoLTE7IGk+PWl0ZW1zMi5sZW5ndGg7IGktLSkgY3R4MC5zdWJjdHhbaV0uZGlzcG9zZSgpO1xyXG5cdFx0XHRcdGN0eDAuc3ViY3R4ID0gY3R4MC5zdWJjdHguc2xpY2UoMCwgaXRlbXMyLmxlbmd0aCk7XHJcblx0XHRcdFx0Y29uc29sZS5sb2coJ29ubHlSZW1vdmUnLCBlcU1pbiwgY3R4MC5zdWJjdHgubGVuZ3RoLCAnPScsIGl0ZW1zMi5sZW5ndGgpO1xyXG5cdFx0XHRcdHJldHVybjtcclxuXHRcdFx0fVxyXG5cclxuXHRcdFx0aWYoTWFwICYmIE1hcC5jYWxsKXtcclxuXHRcdFx0XHQvL21lcmdlIGNvbnRlbnh0IGluIE1hcFxyXG5cdFx0XHRcdG1lcmdlSXRlbXNNYXAoY3R4MCwgaXRlbXMyLCBlcU1pbiwgc3RhbXBbMF0sIHN0YW1wWzFdLCBuZXcgTWFwKCkpO1xyXG5cdFx0XHRcdHJldHVybjtcclxuXHRcdFx0fVxyXG5cclxuXHRcdFx0YXJyYXlGb3JFYWNoKGN0eDAuc3ViY3R4LCBmdW5jdGlvbihlKSB7IGUuZGlzcG9zZSgpOyB9KTtcclxuXHRcdFx0Y3R4MC5zdWJjdHggPSBbXTtcclxuXHRcdFx0Zm9yKHZhciBpPTA7IGk8aXRlbXMyLmxlbmd0aDsgaSsrKSBhcHBlbmRJdGVtKGl0ZW1zMltpXSwgc3RhbXAsIGN0eDApO1xyXG5cdFx0fTtcclxuXHRcdFxyXG5cdFx0dmFyIGt2ID0gY29tcHV0ZWQoZnVuY3Rpb24oKXtcclxuXHRcdFx0XHR2YXIgdmFsMiA9IGl0ZW1zKGN0eC5tb2RlbCwgY3R4KTtcclxuXHRcdFx0XHR2YWwyID0gdW53cmFwKHZhbDIpO1xyXG5cdFx0XHRcdGRlcGVuZGVuY3lEZXRlY3Rpb24uaWdub3JlKGZ1bmN0aW9uKCl7XHJcblx0XHRcdFx0XHRyZW5kZXJJdGVtcyh2YWwyKTtcclxuXHRcdFx0XHR9KTtcclxuXHRcdH0sIHRoaXMpO1xyXG5cdFx0a3YoKTtcclxuXHRcdGlmKGt2LmdldERlcGVuZGVuY2llc0NvdW50KCk+MCl7XHJcblx0XHRcdGN0eC5zdWJzY3JpYmVycy5wdXNoKGt2KTtcclxuXHRcdH0gZWxzZSB7XHJcblx0XHRcdGt2LmRpc3Bvc2UoKTtcclxuXHRcdH1cclxuXHR9XHJcbn07XHJcblxyXG5mdW5jdGlvbiBhcnJFcShzdWJjdHgsIGl0ZW1zMiwgc3RhcnQpe1xyXG5cdHN0YXJ0ID0gc3RhcnQgfHwgMDtcclxuXHR2YXIgbWF4ID0gc3ViY3R4Lmxlbmd0aDxpdGVtczIubGVuZ3RoID8gc3ViY3R4Lmxlbmd0aCA6IGl0ZW1zMi5sZW5ndGg7XHJcblx0Zm9yKHZhciBpID0gMDsgaTxtYXg7IGkrKyl7XHJcblx0XHRpZihzdWJjdHhbaV0ubW9kZWwhPWl0ZW1zMltpXSkgcmV0dXJuIGk7XHJcblx0fVxyXG5cdHJldHVybiBtYXg7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGFwcGVuZEl0ZW0obTIsIHBhcmVudCwgY3R4MCl7XHJcblx0dmFyIGN0eDIgPSBjcmVhdGVDdHgobTIsIGN0eDAuY3R4LCBudWxsKTtcclxuXHRyZW5kZXJDdHgocGFyZW50LCBjdHgwLnRwbC5jaGlsZHJlbiwgY3R4MiwgMCk7XHJcblx0Y3R4MC5zdWJjdHgucHVzaChjdHgyKTtcclxuXHRyZXR1cm4gY3R4MjtcclxufVxyXG5cclxuZnVuY3Rpb24gbWVyZ2VJdGVtc01hcChjdHgwLCBpdGVtczIsIGVxTWluLCBwYXJlbnQsIHN0YW1wLCBvbGRNYXApe1xyXG5cdHZhciBvbGQgPSBjdHgwLnN1YmN0eDtcclxuXHQvL2luZGV4IG9sZFxyXG5cdGZvcih2YXIgaT1lcU1pbjsgaTxjdHgwLnN1YmN0eC5sZW5ndGg7IGkrKyl7XHJcblx0XHR2YXIgY3R4MiA9IGN0eDAuc3ViY3R4W2ldO1xyXG5cdFx0Y3R4Mi5fb2xkSW5kZXggPSBpO1xyXG5cdFx0Y3R4Mi5fbmV3SW5kZXggPSAtMTtcclxuXHRcdG9sZE1hcC5zZXQoY3R4Mi5tb2RlbCwgY3R4Mik7XHJcblx0fVxyXG5cdC8vaW5kZXggbmV3XHJcblx0dmFyIHJldXNlZEN0eCA9IFtdO1xyXG5cdGZvcih2YXIgaT1lcU1pbjsgaTxpdGVtczIubGVuZ3RoOyBpKyspe1xyXG5cdFx0dmFyIGN0eDIgPSBvbGRNYXAuZ2V0KGl0ZW1zMltpXSk7XHJcblx0XHRpZihjdHgyKSB7IFxyXG5cdFx0XHRjdHgyLl9uZXdJbmRleCA9IGk7IFxyXG5cdFx0XHRyZXVzZWRDdHhbaV0gPSBjdHgyOyBcclxuXHRcdH1cclxuXHR9XHJcblxyXG5cdGN0eDAuc3ViY3R4ID0gY3R4MC5zdWJjdHguc2xpY2UoMCwgZXFNaW4pO1xyXG5cdHZhciBha3RQb3NPbGQgPSBuZXh0T2xkUG9zKG9sZCwgZXFNaW4pO1xyXG5cdGZvcih2YXIgaT1lcU1pbjsgaTxpdGVtczIubGVuZ3RoOyBpKyspe1xyXG5cdFx0dmFyIG0yID0gaXRlbXMyW2ldO1xyXG5cdFx0aWYoYWt0UG9zT2xkPG9sZC5sZW5ndGggJiYgb2xkW2FrdFBvc09sZF0ubW9kZWw9PT1tMikge1xyXG5cdFx0XHQvL3RoZSBzYW1lIG1vZGVscywgYWxsIGlzIG9rXHJcblx0XHRcdGN0eDAuc3ViY3R4LnB1c2gob2xkW2FrdFBvc09sZF0pO1xyXG5cdFx0XHRvbGRbYWt0UG9zT2xkXSA9IG51bGw7XHJcblx0XHRcdGFrdFBvc09sZCA9IG5leHRPbGRQb3Mob2xkLCBha3RQb3NPbGQrMSk7XHJcblx0XHRcdGNvbnRpbnVlO1xyXG5cdFx0fVxyXG5cdFx0dmFyIGJlZm9yZU5vZGUgPSBha3RQb3NPbGQ8b2xkLmxlbmd0aCA/IG9sZFtha3RQb3NPbGRdLnJvb3ROb2Rlc1swXSA6IHN0YW1wO1xyXG5cdFx0dmFyIGN0eDIgPSByZXVzZWRDdHhbaV07XHJcblx0XHRpZihjdHgyKXtcclxuXHRcdFx0Ly9yZXVzZVxyXG5cdFx0XHRhcnJheUZvckVhY2goY3R4Mi5yb290Tm9kZXMsIGZ1bmN0aW9uKG4pIHsgXHJcblx0XHRcdFx0cGFyZW50Lmluc2VydEJlZm9yZShuLGJlZm9yZU5vZGUpO1xyXG5cdFx0XHR9KTtcclxuXHRcdFx0Y3R4MC5zdWJjdHgucHVzaChjdHgyKTtcclxuXHRcdFx0b2xkW2N0eDIuX29sZEluZGV4XSA9IG51bGw7XHJcblx0XHR9IGVsc2Uge1xyXG5cdFx0XHQvL2NyZWF0ZSBuZXdcclxuXHRcdFx0Y3R4MiA9IGFwcGVuZEl0ZW0obTIsIGJlZm9yZU5vZGUgPyBbIHBhcmVudCwgYmVmb3JlTm9kZV0gOiBwYXJlbnQgLCBjdHgwKTtcclxuXHRcdFx0Y3R4MC5zdWJjdHgucHVzaChjdHgyKTtcclxuXHRcdH1cclxuXHR9XHJcbn1cclxuXHJcbmZ1bmN0aW9uIG5leHRPbGRQb3Mob2xkLCBha3RQb3NPbGQpe1xyXG5cdHdoaWxlKGFrdFBvc09sZDxvbGQubGVuZ3RoKSB7XHJcblx0XHR2YXIgdiA9IG9sZFtha3RQb3NPbGRdO1xyXG5cdFx0aWYodiE9bnVsbCl7XHJcblx0XHRcdGlmKHYuX25ld0luZGV4Pj0wKSByZXR1cm4gYWt0UG9zT2xkO1xyXG5cdFx0XHR2LmRpc3Bvc2UoKTtcclxuXHRcdFx0b2xkW2FrdFBvc09sZF0gPSBudWxsO1xyXG5cdFx0fVxyXG5cdFx0YWt0UG9zT2xkKys7XHJcblx0fVxyXG5cdHJldHVybiBha3RQb3NPbGQ7XHJcbn1cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gYzovVXNlcnMvcG0vRG93bmxvYWRzL3JlYWN0L2pzLWZyYW1ld29yay1iZW5jaG1hcmsva282L3NyYy9ibG9ja3MvYmxvY2tGb3JlYWNoLmpzIl0sIm1hcHBpbmdzIjoiOzs7OztBQUtBO0FBQ0E7QUFOQTtBQUNBO0FBQUE7QUFDQTtBQUFBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///13\n");

/***/ }),
/* 14 */
/*!************************************************************************************!*\
  !*** c:/Users/pm/Downloads/react/js-framework-benchmark/ko6/src/blocks/blockIf.js ***!
  \************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.default = blockIf;\n\nvar _tkoUtils = __webpack_require__(/*! ../tko/tko.utils.js */ 1);\n\nvar _tkoObservable = __webpack_require__(/*! ../tko/tko.observable.js */ 0);\n\nvar _tkoComputed = __webpack_require__(/*! ../tko/tko.computed.js */ 2);\n\nvar _renderCtx = __webpack_require__(/*! ../renderCtx.js */ 3);\n\nfunction blockIf(parent, tpl, ctx, level) {\n\n\tif (tpl.children && tpl.children.length > 0 && tpl.attrs && tpl.attrs['value'] && tpl.attrs['value'].call) {\n\n\t\tvar value = tpl.attrs['value'];\n\t\tvar stamp = (0, _renderCtx.createStamp)(parent, 'if');\n\t\tif (level == 0) ctx.rootNodes.push(stamp[1]);\n\n\t\tvar ctx0 = (0, _renderCtx.duplicateCtx)(ctx);\n\t\tctx.subscribers.push(ctx0);\n\n\t\tvar lastVal = false;\n\n\t\tvar kv = (0, _tkoComputed.computed)(function () {\n\t\t\tvar val2 = value(ctx.model, ctx);\n\t\t\tval2 = (0, _tkoObservable.unwrap)(val2) ? true : false;\n\t\t\tif (val2 == lastVal) return;\n\n\t\t\tlastVal = val2;\n\t\t\t//remove children tpl\n\t\t\t_tkoObservable.dependencyDetection.ignore(function () {\n\t\t\t\tctx0.dispose();\n\t\t\t});\n\n\t\t\tif (val2) {\n\t\t\t\t//render children tpl\n\t\t\t\t_tkoObservable.dependencyDetection.ignore(function () {\n\t\t\t\t\t(0, _renderCtx.renderCtx)(stamp, tpl.children, ctx0, 0);\n\t\t\t\t});\n\t\t\t} else {}\n\t\t}, this);\n\t\tkv();\n\t\tif (kv.getDependenciesCount() > 0) {\n\t\t\tctx.subscribers.push(kv);\n\t\t} else {\n\t\t\tkv.dispose();\n\t\t}\n\t}\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTQuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vYzovVXNlcnMvcG0vRG93bmxvYWRzL3JlYWN0L2pzLWZyYW1ld29yay1iZW5jaG1hcmsva282L3NyYy9ibG9ja3MvYmxvY2tJZi5qcz9iYTE4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGFycmF5Rm9yRWFjaCB9ICBmcm9tICcuLi90a28vdGtvLnV0aWxzLmpzJztcclxuaW1wb3J0IHsgdW53cmFwLCBkZXBlbmRlbmN5RGV0ZWN0aW9uIH0gIGZyb20gJy4uL3Rrby90a28ub2JzZXJ2YWJsZS5qcyc7XHJcbmltcG9ydCB7IGNvbXB1dGVkIH0gIGZyb20gJy4uL3Rrby90a28uY29tcHV0ZWQuanMnO1xyXG5pbXBvcnQgeyByZW5kZXJDdHgsIGNyZWF0ZVN0YW1wLCBkdXBsaWNhdGVDdHggfSAgZnJvbSAnLi4vcmVuZGVyQ3R4LmpzJztcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGJsb2NrSWYocGFyZW50LCB0cGwsIGN0eCwgbGV2ZWwpe1xyXG5cclxuXHRpZih0cGwuY2hpbGRyZW4gJiYgdHBsLmNoaWxkcmVuLmxlbmd0aD4wICYmIHRwbC5hdHRycyAmJiB0cGwuYXR0cnNbJ3ZhbHVlJ10gJiYgdHBsLmF0dHJzWyd2YWx1ZSddLmNhbGwpe1xyXG5cdFx0XHJcblx0XHR2YXIgdmFsdWUgPSB0cGwuYXR0cnNbJ3ZhbHVlJ107XHJcblx0XHR2YXIgc3RhbXAgPVx0Y3JlYXRlU3RhbXAocGFyZW50LCAnaWYnKTtcclxuXHRcdGlmKGxldmVsPT0wKSBjdHgucm9vdE5vZGVzLnB1c2goc3RhbXBbMV0pO1xyXG5cclxuXHRcdHZhciBjdHgwID0gZHVwbGljYXRlQ3R4KGN0eCk7XHJcblx0XHRjdHguc3Vic2NyaWJlcnMucHVzaChjdHgwKTtcclxuXHJcblx0XHR2YXIgbGFzdFZhbCA9IGZhbHNlO1xyXG5cclxuXHRcdHZhciBrdiA9IGNvbXB1dGVkKGZ1bmN0aW9uKCl7XHJcblx0XHRcdHZhciB2YWwyID0gdmFsdWUoY3R4Lm1vZGVsLCBjdHgpO1xyXG5cdFx0XHR2YWwyID0gdW53cmFwKHZhbDIpID8gdHJ1ZSA6IGZhbHNlO1xyXG5cdFx0XHRpZih2YWwyPT1sYXN0VmFsKSByZXR1cm47XHJcblxyXG5cdFx0XHRsYXN0VmFsID0gdmFsMjtcclxuXHRcdFx0Ly9yZW1vdmUgY2hpbGRyZW4gdHBsXHJcblx0XHRcdGRlcGVuZGVuY3lEZXRlY3Rpb24uaWdub3JlKGZ1bmN0aW9uKCl7XHJcblx0XHRcdFx0Y3R4MC5kaXNwb3NlKCk7XHJcblx0XHRcdH0pO1xyXG5cclxuXHRcdFx0aWYodmFsMil7XHJcblx0XHRcdFx0Ly9yZW5kZXIgY2hpbGRyZW4gdHBsXHJcblx0XHRcdFx0ZGVwZW5kZW5jeURldGVjdGlvbi5pZ25vcmUoZnVuY3Rpb24oKXtcclxuXHRcdFx0XHRcdHJlbmRlckN0eChzdGFtcCwgdHBsLmNoaWxkcmVuLCBjdHgwLCAwKTtcclxuXHRcdFx0XHR9KTtcclxuXHRcdFx0fSBlbHNlIHtcclxuXHRcdFx0fVxyXG5cdFx0fSwgdGhpcyk7XHJcblx0XHRrdigpO1xyXG5cdFx0aWYoa3YuZ2V0RGVwZW5kZW5jaWVzQ291bnQoKT4wKXtcclxuXHRcdFx0Y3R4LnN1YnNjcmliZXJzLnB1c2goa3YpO1xyXG5cdFx0fSBlbHNlIHtcclxuXHRcdFx0a3YuZGlzcG9zZSgpO1xyXG5cdFx0fVxyXG5cdH1cclxuXHJcbn1cclxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIGM6L1VzZXJzL3BtL0Rvd25sb2Fkcy9yZWFjdC9qcy1mcmFtZXdvcmstYmVuY2htYXJrL2tvNi9zcmMvYmxvY2tzL2Jsb2NrSWYuanMiXSwibWFwcGluZ3MiOiI7Ozs7O0FBS0E7QUFDQTtBQU5BO0FBQ0E7QUFBQTtBQUNBO0FBQUE7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUEiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///14\n");

/***/ }),
/* 15 */
/*!**************************************************************************************!*\
  !*** c:/Users/pm/Downloads/react/js-framework-benchmark/ko6/src/blocks/blockHtml.js ***!
  \**************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.default = blockHtml;\n\nvar _tkoObservable = __webpack_require__(/*! ../tko/tko.observable.js */ 0);\n\nvar _tkoComputed = __webpack_require__(/*! ../tko/tko.computed.js */ 2);\n\nvar _renderCtx = __webpack_require__(/*! ../renderCtx.js */ 3);\n\nfunction blockHtml(parent, tpl, ctx, level) {\n\n\tif (tpl.attrs && tpl.attrs['value'] && tpl.attrs['value'].call) {\n\n\t\tvar value = tpl.attrs['value'];\n\t\tvar stamp = (0, _renderCtx.createStamp)(parent, 'html');\n\t\tif (level == 0) ctx.rootNodes.push(stamp[1]);\n\n\t\tvar children = [];\n\t\tvar dispose = function dispose() {\n\t\t\tfor (var i = 0; i < children.length; i++) {\n\t\t\t\tstamp[0].removeChild(children[i]);\n\t\t\t}\n\t\t\tchildren = [];\n\t\t};\n\t\tctx.subscribers.push({ dispose: dispose });\n\n\t\tvar kv = (0, _tkoComputed.computed)(function () {\n\t\t\tvar val2 = value(ctx.model, ctx);\n\t\t\tval2 = (0, _tkoObservable.unwrap)(val2);\n\n\t\t\t//remove old\n\t\t\tdispose();\n\t\t\tif (typeof val2 != 'undefined' && val2 != null) {\n\t\t\t\t//add new\n\t\t\t\tvar div = document.createElement('div');\n\t\t\t\tdiv.innerHTML = \"\" + val2;\n\t\t\t\tchildren = Array.prototype.slice.call(div.childNodes);\n\t\t\t\tfor (var i = 0; i < children.length; i++) {\n\t\t\t\t\tstamp[0].insertBefore(children[i], stamp[1]);\n\t\t\t\t}\n\t\t\t}\n\t\t}, this);\n\t\tkv();\n\t\tif (kv.getDependenciesCount() > 0) {\n\t\t\tctx.subscribers.push(kv);\n\t\t} else {\n\t\t\tkv.dispose();\n\t\t}\n\t}\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTUuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vYzovVXNlcnMvcG0vRG93bmxvYWRzL3JlYWN0L2pzLWZyYW1ld29yay1iZW5jaG1hcmsva282L3NyYy9ibG9ja3MvYmxvY2tIdG1sLmpzP2Y1MWUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdW53cmFwLCBkZXBlbmRlbmN5RGV0ZWN0aW9uIH0gIGZyb20gJy4uL3Rrby90a28ub2JzZXJ2YWJsZS5qcyc7XHJcbmltcG9ydCB7IGNvbXB1dGVkIH0gIGZyb20gJy4uL3Rrby90a28uY29tcHV0ZWQuanMnO1xyXG5pbXBvcnQgeyBjcmVhdGVTdGFtcCB9ICBmcm9tICcuLi9yZW5kZXJDdHguanMnO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gYmxvY2tIdG1sKHBhcmVudCwgdHBsLCBjdHgsIGxldmVsKXtcclxuXHJcblx0aWYodHBsLmF0dHJzICYmIHRwbC5hdHRyc1sndmFsdWUnXSAmJiB0cGwuYXR0cnNbJ3ZhbHVlJ10uY2FsbCl7XHJcblx0XHRcclxuXHRcdHZhciB2YWx1ZSA9IHRwbC5hdHRyc1sndmFsdWUnXTtcclxuXHRcdHZhciBzdGFtcCA9XHRjcmVhdGVTdGFtcChwYXJlbnQsICdodG1sJyk7XHJcblx0XHRpZihsZXZlbD09MCkgY3R4LnJvb3ROb2Rlcy5wdXNoKHN0YW1wWzFdKTtcclxuXHJcblx0XHR2YXIgY2hpbGRyZW4gPSBbXTtcclxuXHRcdHZhciBkaXNwb3NlID0gZnVuY3Rpb24oKXtcclxuXHRcdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCBjaGlsZHJlbi5sZW5ndGg7IGkrKykgeyBcclxuXHRcdFx0XHRzdGFtcFswXS5yZW1vdmVDaGlsZChjaGlsZHJlbltpXSk7XHJcblx0XHRcdH1cclxuXHRcdFx0Y2hpbGRyZW4gPSBbXTtcclxuXHRcdH07XHJcblx0XHRjdHguc3Vic2NyaWJlcnMucHVzaCh7IGRpc3Bvc2U6IGRpc3Bvc2UgfSk7XHJcblxyXG5cdFx0dmFyIGt2ID0gY29tcHV0ZWQoZnVuY3Rpb24oKXtcclxuXHRcdFx0XHR2YXIgdmFsMiA9IHZhbHVlKGN0eC5tb2RlbCwgY3R4KTtcclxuXHRcdFx0XHR2YWwyID0gdW53cmFwKHZhbDIpO1xyXG5cclxuXHRcdFx0XHQvL3JlbW92ZSBvbGRcclxuXHRcdFx0XHRkaXNwb3NlKCk7XHJcbiAgXHRcdFx0XHRpZih0eXBlb2YodmFsMikgIT0gJ3VuZGVmaW5lZCcgJiYgdmFsMiAhPSBudWxsKXtcclxuXHRcdFx0XHRcdC8vYWRkIG5ld1xyXG5cdFx0XHRcdFx0dmFyIGRpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xyXG5cdFx0XHRcdFx0ZGl2LmlubmVySFRNTCA9IFwiXCIrdmFsMjtcclxuXHRcdFx0XHRcdGNoaWxkcmVuID0gQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoZGl2LmNoaWxkTm9kZXMpO1xyXG5cdFx0XHRcdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCBjaGlsZHJlbi5sZW5ndGg7IGkrKykgeyBcclxuXHRcdFx0XHRcdCAgICBzdGFtcFswXS5pbnNlcnRCZWZvcmUoY2hpbGRyZW5baV0sIHN0YW1wWzFdKTtcclxuXHRcdFx0XHRcdH1cclxuICBcdFx0XHRcdH1cclxuXHJcblx0XHR9LCB0aGlzKTtcclxuXHRcdGt2KCk7XHJcblx0XHRpZihrdi5nZXREZXBlbmRlbmNpZXNDb3VudCgpPjApe1xyXG5cdFx0XHRjdHguc3Vic2NyaWJlcnMucHVzaChrdik7XHJcblx0XHR9IGVsc2Uge1xyXG5cdFx0XHRrdi5kaXNwb3NlKCk7XHJcblx0XHR9XHJcblx0fVxyXG5cclxufVxyXG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gYzovVXNlcnMvcG0vRG93bmxvYWRzL3JlYWN0L2pzLWZyYW1ld29yay1iZW5jaG1hcmsva282L3NyYy9ibG9ja3MvYmxvY2tIdG1sLmpzIl0sIm1hcHBpbmdzIjoiOzs7OztBQUlBO0FBQ0E7QUFMQTtBQUNBO0FBQUE7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///15\n");

/***/ }),
/* 16 */
/*!******************************************************************************************!*\
  !*** c:/Users/pm/Downloads/react/js-framework-benchmark/ko6/src/blocks/blockTemplate.js ***!
  \******************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.default = blockTemplate;\n\nvar _tkoUtils = __webpack_require__(/*! ../tko/tko.utils.js */ 1);\n\nvar _tkoObservable = __webpack_require__(/*! ../tko/tko.observable.js */ 0);\n\nvar _tkoComputed = __webpack_require__(/*! ../tko/tko.computed.js */ 2);\n\nvar _renderCtx = __webpack_require__(/*! ../renderCtx.js */ 3);\n\nfunction blockTemplate(parent, tpl, ctx, level) {\n\n\tif (tpl.attrs && tpl.attrs['value'] && tpl.attrs['value'].call) {\n\n\t\tvar value = tpl.attrs['value'];\n\t\tvar stamp = (0, _renderCtx.createStamp)(parent, 'template');\n\t\tif (level == 0) ctx.rootNodes.push(stamp[1]);\n\n\t\tvar ctx0 = (0, _renderCtx.duplicateCtx)(ctx);\n\t\tctx.subscribers.push(ctx0);\n\n\t\tvar kv = (0, _tkoComputed.computed)(function () {\n\t\t\tvar val2 = value(ctx.model, ctx);\n\t\t\tval2 = (0, _tkoObservable.unwrap)(val2);\n\t\t\tconsole.log('template', val2);\n\n\t\t\t_tkoObservable.dependencyDetection.ignore(function () {\n\t\t\t\tctx0.dispose();\n\t\t\t});\n\n\t\t\tif (val2) {\n\t\t\t\t//render value tpl\n\t\t\t\t_tkoObservable.dependencyDetection.ignore(function () {\n\t\t\t\t\t(0, _renderCtx.renderCtx)(stamp, val2, ctx0, 0);\n\t\t\t\t});\n\t\t\t}\n\t\t}, this);\n\t\tkv();\n\t\tif (kv.getDependenciesCount() > 0) {\n\t\t\tctx.subscribers.push(kv);\n\t\t} else {\n\t\t\tkv.dispose();\n\t\t}\n\t}\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTYuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vYzovVXNlcnMvcG0vRG93bmxvYWRzL3JlYWN0L2pzLWZyYW1ld29yay1iZW5jaG1hcmsva282L3NyYy9ibG9ja3MvYmxvY2tUZW1wbGF0ZS5qcz85NTVkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGFycmF5Rm9yRWFjaCB9ICBmcm9tICcuLi90a28vdGtvLnV0aWxzLmpzJztcclxuaW1wb3J0IHsgdW53cmFwLCBkZXBlbmRlbmN5RGV0ZWN0aW9uIH0gIGZyb20gJy4uL3Rrby90a28ub2JzZXJ2YWJsZS5qcyc7XHJcbmltcG9ydCB7IGNvbXB1dGVkIH0gIGZyb20gJy4uL3Rrby90a28uY29tcHV0ZWQuanMnO1xyXG5pbXBvcnQgeyByZW5kZXJDdHgsIGNyZWF0ZVN0YW1wLCBkdXBsaWNhdGVDdHggfSAgZnJvbSAnLi4vcmVuZGVyQ3R4LmpzJztcclxuXHJcblxyXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBibG9ja1RlbXBsYXRlKHBhcmVudCwgdHBsLCBjdHgsIGxldmVsKXtcclxuXHJcblx0aWYodHBsLmF0dHJzICYmIHRwbC5hdHRyc1sndmFsdWUnXSAmJiB0cGwuYXR0cnNbJ3ZhbHVlJ10uY2FsbCl7XHJcblx0XHRcclxuXHRcdHZhciB2YWx1ZSA9IHRwbC5hdHRyc1sndmFsdWUnXTtcclxuXHRcdHZhciBzdGFtcCA9XHRjcmVhdGVTdGFtcChwYXJlbnQsICd0ZW1wbGF0ZScpO1xyXG5cdFx0aWYobGV2ZWw9PTApIGN0eC5yb290Tm9kZXMucHVzaChzdGFtcFsxXSk7XHJcblxyXG5cdFx0dmFyIGN0eDAgPSBkdXBsaWNhdGVDdHgoY3R4KTtcclxuXHRcdGN0eC5zdWJzY3JpYmVycy5wdXNoKGN0eDApO1xyXG5cclxuXHRcdHZhciBrdiA9IGNvbXB1dGVkKGZ1bmN0aW9uKCl7XHJcblx0XHRcdHZhciB2YWwyID0gdmFsdWUoY3R4Lm1vZGVsLCBjdHgpO1xyXG5cdFx0XHR2YWwyID0gdW53cmFwKHZhbDIpO1xyXG5cdFx0XHRjb25zb2xlLmxvZygndGVtcGxhdGUnLFx0dmFsMik7XHJcblxyXG5cdFx0XHRkZXBlbmRlbmN5RGV0ZWN0aW9uLmlnbm9yZShmdW5jdGlvbigpe1xyXG5cdFx0XHRcdGN0eDAuZGlzcG9zZSgpO1xyXG5cdFx0XHR9KTtcclxuXHJcblx0XHRcdGlmKHZhbDIpe1xyXG5cdFx0XHRcdC8vcmVuZGVyIHZhbHVlIHRwbFxyXG5cdFx0XHRcdGRlcGVuZGVuY3lEZXRlY3Rpb24uaWdub3JlKGZ1bmN0aW9uKCl7XHJcblx0XHRcdFx0XHRyZW5kZXJDdHgoc3RhbXAsIHZhbDIsIGN0eDAsIDApO1xyXG5cdFx0XHRcdH0pO1xyXG5cdFx0XHR9XHJcblxyXG5cdFx0fSwgdGhpcyk7XHJcblx0XHRrdigpO1xyXG5cdFx0aWYoa3YuZ2V0RGVwZW5kZW5jaWVzQ291bnQoKT4wKXtcclxuXHRcdFx0Y3R4LnN1YnNjcmliZXJzLnB1c2goa3YpO1xyXG5cdFx0fSBlbHNlIHtcclxuXHRcdFx0a3YuZGlzcG9zZSgpO1xyXG5cdFx0fVxyXG5cdH1cclxuXHJcbn1cclxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIGM6L1VzZXJzL3BtL0Rvd25sb2Fkcy9yZWFjdC9qcy1mcmFtZXdvcmstYmVuY2htYXJrL2tvNi9zcmMvYmxvY2tzL2Jsb2NrVGVtcGxhdGUuanMiXSwibWFwcGluZ3MiOiI7Ozs7O0FBTUE7QUFDQTtBQVBBO0FBQ0E7QUFBQTtBQUNBO0FBQUE7QUFDQTtBQUFBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///16\n");

/***/ }),
/* 17 */
/*!************************************************************************************!*\
  !*** c:/Users/pm/Downloads/react/js-framework-benchmark/ko6/src/bindings/click.js ***!
  \************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _tkoObservable = __webpack_require__(/*! ../tko/tko.observable.js */ 0);\n\nexports.default = {\n\tinit: function init(el, val) {\n\t\tval = (0, _tkoObservable.unwrap)(val);\n\t\tif (val.call) el.addEventListener(\"click\", val);\n\t}\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTcuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vYzovVXNlcnMvcG0vRG93bmxvYWRzL3JlYWN0L2pzLWZyYW1ld29yay1iZW5jaG1hcmsva282L3NyYy9iaW5kaW5ncy9jbGljay5qcz82OGE4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHVud3JhcCB9IGZyb20gJy4uL3Rrby90a28ub2JzZXJ2YWJsZS5qcyc7XHJcblxyXG5leHBvcnQgZGVmYXVsdCB7XHJcblx0aW5pdDogZnVuY3Rpb24oZWwsIHZhbCl7XHJcblx0XHR2YWwgPSB1bndyYXAodmFsKTtcclxuXHRcdGlmKHZhbC5jYWxsKSBlbC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgdmFsKTtcclxuXHR9XHJcbn07XHJcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyBjOi9Vc2Vycy9wbS9Eb3dubG9hZHMvcmVhY3QvanMtZnJhbWV3b3JrLWJlbmNobWFyay9rbzYvc3JjL2JpbmRpbmdzL2NsaWNrLmpzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUpBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///17\n");

/***/ })
/******/ ]);