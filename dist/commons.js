/******/ (function(modules) { // webpackBootstrap
/******/ 	// install a JSONP callback for chunk loading
/******/ 	var parentJsonpFunction = window["webpackJsonp"];
/******/ 	window["webpackJsonp"] = function webpackJsonpCallback(chunkIds, moreModules, executeModules) {
/******/ 		// add "moreModules" to the modules object,
/******/ 		// then flag all "chunkIds" as loaded and fire callback
/******/ 		var moduleId, chunkId, i = 0, resolves = [], result;
/******/ 		for(;i < chunkIds.length; i++) {
/******/ 			chunkId = chunkIds[i];
/******/ 			if(installedChunks[chunkId]) {
/******/ 				resolves.push(installedChunks[chunkId][0]);
/******/ 			}
/******/ 			installedChunks[chunkId] = 0;
/******/ 		}
/******/ 		for(moduleId in moreModules) {
/******/ 			if(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {
/******/ 				modules[moduleId] = moreModules[moduleId];
/******/ 			}
/******/ 		}
/******/ 		if(parentJsonpFunction) parentJsonpFunction(chunkIds, moreModules, executeModules);
/******/ 		while(resolves.length) {
/******/ 			resolves.shift()();
/******/ 		}
/******/ 		if(executeModules) {
/******/ 			for(i=0; i < executeModules.length; i++) {
/******/ 				result = __webpack_require__(__webpack_require__.s = executeModules[i]);
/******/ 			}
/******/ 		}
/******/ 		return result;
/******/ 	};
/******/
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// objects to store loaded and loading chunks
/******/ 	var installedChunks = {
/******/ 		3: 0
/******/ 	};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/ 	// This file contains only the entry chunk.
/******/ 	// The chunk loading function for additional chunks
/******/ 	__webpack_require__.e = function requireEnsure(chunkId) {
/******/ 		var installedChunkData = installedChunks[chunkId];
/******/ 		if(installedChunkData === 0) {
/******/ 			return new Promise(function(resolve) { resolve(); });
/******/ 		}
/******/
/******/ 		// a Promise means "currently loading".
/******/ 		if(installedChunkData) {
/******/ 			return installedChunkData[2];
/******/ 		}
/******/
/******/ 		// setup Promise in chunk cache
/******/ 		var promise = new Promise(function(resolve, reject) {
/******/ 			installedChunkData = installedChunks[chunkId] = [resolve, reject];
/******/ 		});
/******/ 		installedChunkData[2] = promise;
/******/
/******/ 		// start chunk loading
/******/ 		var head = document.getElementsByTagName('head')[0];
/******/ 		var script = document.createElement('script');
/******/ 		script.type = 'text/javascript';
/******/ 		script.charset = 'utf-8';
/******/ 		script.async = true;
/******/ 		script.timeout = 120000;
/******/
/******/ 		if (__webpack_require__.nc) {
/******/ 			script.setAttribute("nonce", __webpack_require__.nc);
/******/ 		}
/******/ 		script.src = __webpack_require__.p + "" + chunkId + ".bundle.js";
/******/ 		var timeout = setTimeout(onScriptComplete, 120000);
/******/ 		script.onerror = script.onload = onScriptComplete;
/******/ 		function onScriptComplete() {
/******/ 			// avoid mem leaks in IE.
/******/ 			script.onerror = script.onload = null;
/******/ 			clearTimeout(timeout);
/******/ 			var chunk = installedChunks[chunkId];
/******/ 			if(chunk !== 0) {
/******/ 				if(chunk) {
/******/ 					chunk[1](new Error('Loading chunk ' + chunkId + ' failed.'));
/******/ 				}
/******/ 				installedChunks[chunkId] = undefined;
/******/ 			}
/******/ 		};
/******/ 		head.appendChild(script);
/******/
/******/ 		return promise;
/******/ 	};
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// on error function for async loading
/******/ 	__webpack_require__.oe = function(err) { console.error(err); throw err; };
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/*!****************************************************************************************!*\
  !*** c:/Users/pm/Downloads/react/js-framework-benchmark/ko6/src/tko/tko.observable.js ***!
  \****************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.extenders = exports.applyExtenders = exports.valuesArePrimitiveAndEqual = exports.deferUpdates = exports.toJSON = exports.toJS = exports.arrayChangeEventName = exports.trackArrayChanges = exports.observableArray = exports.subscribable = exports.isSubscribable = exports.isWritableObservable = exports.isWriteableObservable = exports.peek = exports.unwrap = exports.isObservable = exports.observable = exports.dependencyDetection = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _tkoUtils = __webpack_require__(/*! ./tko.utils.js */ 2);\n\n//\n//  Defer Updates\n//  ===\n//\nfunction deferUpdates(target) {\n  if (!target._deferUpdates) {\n    target._deferUpdates = true;\n    target.limit(function (callback) {\n      var handle;\n      return function () {\n        tasks.cancel(handle);\n        handle = tasks.schedule(callback);\n        target.notifySubscribers(undefined, 'dirty');\n      };\n    });\n  }\n}\n\n//\n// Observable extenders\n// ---\n//\nvar primitiveTypes = {\n  'undefined': 1, 'boolean': 1, 'number': 1, 'string': 1\n};\n\nfunction valuesArePrimitiveAndEqual(a, b) {\n  var oldValueIsPrimitive = a === null || (typeof a === 'undefined' ? 'undefined' : _typeof(a)) in primitiveTypes;\n  return oldValueIsPrimitive ? a === b : false;\n}\n\nfunction applyExtenders(requestedExtenders) {\n  var target = this;\n  if (requestedExtenders) {\n    (0, _tkoUtils.objectForEach)(requestedExtenders, function (key, value) {\n      var extenderHandler = extenders[key];\n      if (typeof extenderHandler === 'function') {\n        target = extenderHandler(target, value) || target;\n      } else {\n        _tkoUtils.options.onError(new Error('Extender not found: ' + key));\n      }\n    });\n  }\n  return target;\n}\n\n/*\n                --- DEFAULT EXTENDERS ---\n */\n\n// Change when notifications are published.\nfunction notify(target, notifyWhen) {\n  target.equalityComparer = notifyWhen == 'always' ? null : // null equalityComparer means to always notify\n  valuesArePrimitiveAndEqual;\n}\n\nfunction deferred(target, option) {\n  if (option !== true) {\n    throw new Error('The \\'deferred\\' extender only accepts the value \\'true\\', because it is not supported to turn deferral off once enabled.');\n  }\n  deferUpdates(target);\n}\n\nfunction rateLimit(target, options$$1) {\n  var timeout, method, limitFunction;\n\n  if (typeof options$$1 === 'number') {\n    timeout = options$$1;\n  } else {\n    timeout = options$$1.timeout;\n    method = options$$1.method;\n  }\n\n  // rateLimit supersedes deferred updates\n  target._deferUpdates = false;\n\n  limitFunction = method == 'notifyWhenChangesStop' ? _tkoUtils.debounce : _tkoUtils.throttle;\n\n  target.limit(function (callback) {\n    return limitFunction(callback, timeout);\n  });\n}\n\nvar extenders = {\n  notify: notify,\n  deferred: deferred,\n  rateLimit: rateLimit\n};\n\n/* eslint no-cond-assign: 0 */\nfunction subscription(target, callback, disposeCallback) {\n  this._target = target;\n  this.callback = callback;\n  this.disposeCallback = disposeCallback;\n  this.isDisposed = false;\n}\n\nsubscription.prototype.dispose = function () {\n  this.isDisposed = true;\n  this.disposeCallback();\n  window.count--;\n};\n\nfunction subscribable() {\n  (0, _tkoUtils.setPrototypeOfOrExtend)(this, ko_subscribable_fn);\n  ko_subscribable_fn.init(this);\n}\n\nvar defaultEvent = 'change';\n\nvar ko_subscribable_fn = {\n  init: function init(instance) {\n    instance._subscriptions = {};\n    instance._versionNumber = 1;\n  },\n  subscribe: function subscribe(callback, callbackTarget, event) {\n    var self = this;\n\n    event = event || defaultEvent;\n    var boundCallback = callbackTarget ? callback.bind(callbackTarget) : callback;\n\n    var subscriptionInstance = new subscription(self, boundCallback, function () {\n      (0, _tkoUtils.arrayRemoveItem)(self._subscriptions[event], subscriptionInstance);\n      if (self.afterSubscriptionRemove) {\n        self.afterSubscriptionRemove(event);\n      }\n    });\n\n    if (self.beforeSubscriptionAdd) {\n      self.beforeSubscriptionAdd(event);\n    }\n\n    if (!self._subscriptions[event]) {\n      self._subscriptions[event] = [];\n    }\n    self._subscriptions[event].push(subscriptionInstance);\n\n    return subscriptionInstance;\n  },\n  notifySubscribers: function notifySubscribers(valueToNotify, event) {\n    event = event || defaultEvent;\n    if (event === defaultEvent) {\n      this.updateVersion();\n    }\n    if (this.hasSubscriptionsForEvent(event)) {\n      try {\n        begin(); // Begin suppressing dependency detection (by setting the top frame to undefined)\n        for (var a = this._subscriptions[event].slice(0), i = 0, subscriptionInstance; subscriptionInstance = a[i]; ++i) {\n          // In case a subscription was disposed during the arrayForEach cycle, check\n          // for isDisposed on each subscription before invoking its callback\n          if (!subscriptionInstance.isDisposed) {\n            subscriptionInstance.callback(valueToNotify);\n          }\n        }\n      } finally {\n        end(); // End suppressing dependency detection\n      }\n    }\n  },\n  getVersion: function getVersion() {\n    return this._versionNumber;\n  },\n  hasChanged: function hasChanged(versionToCheck) {\n    return this.getVersion() !== versionToCheck;\n  },\n  updateVersion: function updateVersion() {\n    ++this._versionNumber;\n  },\n  hasSubscriptionsForEvent: function hasSubscriptionsForEvent(event) {\n    return this._subscriptions[event] && this._subscriptions[event].length;\n  },\n  getSubscriptionsCount: function getSubscriptionsCount(event) {\n    if (event) {\n      return this._subscriptions[event] && this._subscriptions[event].length || 0;\n    } else {\n      var total = 0;\n      (0, _tkoUtils.objectForEach)(this._subscriptions, function (eventName, subscriptions) {\n        if (eventName !== 'dirty') {\n          total += subscriptions.length;\n        }\n      });\n      return total;\n    }\n  },\n  isDifferent: function isDifferent(oldValue, newValue) {\n    return !this.equalityComparer || !this.equalityComparer(oldValue, newValue);\n  },\n  once: function once(cb) {\n    var subs = this.subscribe(function (nv) {\n      subs.dispose();\n      cb(nv);\n    });\n  },\n  when: function when(test, returnValue) {\n    var _this = this;\n\n    var current = this.peek();\n    var givenRv = arguments.length > 1;\n    var testFn = typeof test === 'function' ? test : function (v) {\n      return v === test;\n    };\n    if (testFn(current)) {\n      return _tkoUtils.options.Promise.resolve(givenRv ? returnValue : current);\n    }\n    return new _tkoUtils.options.Promise(function (resolve, reject) {\n      var subs = _this.subscribe(function (newValue) {\n        if (testFn(newValue)) {\n          subs.dispose();\n          resolve(givenRv ? returnValue : newValue);\n        }\n      });\n    });\n  },\n  yet: function yet(test) {\n    var testFn = typeof test === 'function' ? test : function (v) {\n      return v === test;\n    };\n    var negated = function negated(v) {\n      return !testFn(v);\n    };\n\n    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    return this.when.apply(this, [negated].concat(args));\n  },\n  next: function next() {\n    var _this2 = this;\n\n    return new Promise(function (resolve) {\n      return _this2.once(resolve);\n    });\n  },\n\n\n  extend: applyExtenders\n};\n\n// For browsers that support proto assignment, we overwrite the prototype of each\n// observable instance. Since observables are functions, we need Function.prototype\n// to still be in the prototype chain.\nif (_tkoUtils.canSetPrototype) {\n  (0, _tkoUtils.setPrototypeOf)(ko_subscribable_fn, Function.prototype);\n}\n\nsubscribable.fn = ko_subscribable_fn;\n\nfunction isSubscribable(instance) {\n  return instance != null && typeof instance.subscribe === 'function' && typeof instance.notifySubscribers === 'function';\n}\n\n//\n// dependencyDetection\n// ---\n//\n// In KO 3.x, dependencyDetection was also known as computedContext.\n//\nvar outerFrames = [];\nvar currentFrame = void 0;\nvar lastId = 0;\n\n// Return a unique ID that can be assigned to an observable for dependency tracking.\n// Theoretically, you could eventually overflow the number storage size, resulting\n// in duplicate IDs. But in JavaScript, the largest exact integral value is 2^53\n// or 9,007,199,254,740,992. If you created 1,000,000 IDs per second, it would\n// take over 285 years to reach that number.\n// Reference http://blog.vjeux.com/2010/javascript/javascript-max_int-number-limits.html\nfunction getId() {\n  return ++lastId;\n}\n\nfunction begin(options$$1) {\n  outerFrames.push(currentFrame);\n  currentFrame = options$$1;\n}\n\nfunction end() {\n  currentFrame = outerFrames.pop();\n}\n\nfunction registerDependency(subscribable$$1) {\n  if (currentFrame) {\n    if (!isSubscribable(subscribable$$1)) {\n      throw new Error('Only subscribable things can act as dependencies');\n    }\n    currentFrame.callback.call(currentFrame.callbackTarget, subscribable$$1, subscribable$$1._id || (subscribable$$1._id = getId()));\n  }\n}\n\nfunction ignore(callback, callbackTarget, callbackArgs) {\n  try {\n    begin();\n    return callback.apply(callbackTarget, callbackArgs || []);\n  } finally {\n    end();\n  }\n}\n\nfunction getDependenciesCount() {\n  if (currentFrame) {\n    return currentFrame.computed.getDependenciesCount();\n  }\n}\n\nfunction isInitial() {\n  if (currentFrame) {\n    return currentFrame.isInitial;\n  }\n}\n\nvar dependencyDetection = Object.freeze({\n  begin: begin,\n  end: end,\n  registerDependency: registerDependency,\n  ignore: ignore,\n  getDependenciesCount: getDependenciesCount,\n  isInitial: isInitial,\n  ignoreDependencies: ignore\n});\n\n//\n//  Observable values\n//  ---\n//\nvar observableLatestValue = (0, _tkoUtils.createSymbolOrString)('_latestValue');\n\nfunction observable(initialValue) {\n  function Observable() {\n    if (arguments.length > 0) {\n      // Write\n      // Ignore writes if the value hasn't changed\n      if (Observable.isDifferent(Observable[observableLatestValue], arguments[0])) {\n        Observable.valueWillMutate();\n        Observable[observableLatestValue] = arguments[0];\n        Observable.valueHasMutated();\n      }\n      return this; // Permits chained assignments\n    } else {\n      // Read\n      registerDependency(Observable); // The caller only needs to be notified of changes if they did a \"read\" operation\n      return Observable[observableLatestValue];\n    }\n  }\n\n  Observable[observableLatestValue] = initialValue;\n\n  // Inherit from 'subscribable'\n  if (!_tkoUtils.canSetPrototype) {\n    // 'subscribable' won't be on the prototype chain unless we put it there directly\n    (0, _tkoUtils.extend)(Observable, subscribable.fn);\n  }\n  subscribable.fn.init(Observable);\n\n  // Inherit from 'observable'\n  (0, _tkoUtils.setPrototypeOfOrExtend)(Observable, observable.fn);\n\n  if (_tkoUtils.options.deferUpdates) {\n    deferUpdates(Observable);\n  }\n\n  return Observable;\n}\n\n// Define prototype for observables\nobservable.fn = {\n  equalityComparer: valuesArePrimitiveAndEqual,\n  peek: function peek() {\n    return this[observableLatestValue];\n  },\n  valueHasMutated: function valueHasMutated() {\n    this.notifySubscribers(this[observableLatestValue]);\n  },\n  valueWillMutate: function valueWillMutate() {\n    this.notifySubscribers(this[observableLatestValue], 'beforeChange');\n  },\n  then: function then(res, rej) {\n    try {\n      res(this());\n    } catch (e) {\n      rej(e);\n    }\n  }\n};\n\n// Moved out of \"limit\" to avoid the extra closure\nfunction limitNotifySubscribers(value, event) {\n  if (!event || event === defaultEvent) {\n    this._limitChange(value);\n  } else if (event === 'beforeChange') {\n    this._limitBeforeChange(value);\n  } else {\n    this._origNotifySubscribers(value, event);\n  }\n}\n\n// Add `limit` function to the subscribable prototype\nsubscribable.fn.limit = function limit(limitFunction) {\n  var self = this;\n  var selfIsObservable = isObservable(self);\n  var beforeChange = 'beforeChange';\n  var ignoreBeforeChange, previousValue, pendingValue;\n\n  if (!self._origNotifySubscribers) {\n    self._origNotifySubscribers = self.notifySubscribers;\n    self.notifySubscribers = limitNotifySubscribers;\n  }\n\n  var finish = limitFunction(function () {\n    self._notificationIsPending = false;\n\n    // If an observable provided a reference to itself, access it to get the latest value.\n    // This allows computed observables to delay calculating their value until needed.\n    if (selfIsObservable && pendingValue === self) {\n      pendingValue = self();\n    }\n    ignoreBeforeChange = false;\n    if (self.isDifferent(previousValue, pendingValue)) {\n      self._origNotifySubscribers(previousValue = pendingValue);\n    }\n  });\n\n  self._limitChange = function (value) {\n    self._notificationIsPending = ignoreBeforeChange = true;\n    pendingValue = value;\n    finish();\n  };\n  self._limitBeforeChange = function (value) {\n    if (!ignoreBeforeChange) {\n      previousValue = value;\n      self._origNotifySubscribers(value, beforeChange);\n    }\n  };\n};\n\n// Note that for browsers that don't support proto assignment, the\n// inheritance chain is created manually in the observable constructor\nif (_tkoUtils.canSetPrototype) {\n  (0, _tkoUtils.setPrototypeOf)(observable.fn, subscribable.fn);\n}\n\nvar protoProperty = observable.protoProperty = _tkoUtils.options.protoProperty;\nobservable.fn[protoProperty] = observable;\n\nfunction isObservable(instance) {\n  return (0, _tkoUtils.hasPrototype)(instance, observable);\n}\n\nfunction unwrap(value) {\n  return isObservable(value) ? value() : value;\n}\n\nfunction peek(value) {\n  return isObservable(value) ? value.peek() : value;\n}\n\nfunction isWriteableObservable(instance) {\n  // Observable\n  if (typeof instance === 'function' && instance[protoProperty] === observable) {\n    return true;\n  }\n  // Writeable dependent observable\n  if (typeof instance === 'function' && /* && (instance[protoProperty] === ko.dependentObservable) */instance.hasWriteFunction) {\n    return true;\n  }\n  // Anything else\n  return false;\n}\n\n//\n// Observable Array - Change Tracking Extender\n// ---\n//\n/* eslint no-fallthrough: 0*/\n\nvar arrayChangeEventName = 'arrayChange';\n\nfunction trackArrayChanges(target, options$$1) {\n  // Use the provided options--each call to trackArrayChanges overwrites the previously set options\n  target.compareArrayOptions = {};\n  if (options$$1 && (typeof options$$1 === 'undefined' ? 'undefined' : _typeof(options$$1)) == \"object\") {\n    (0, _tkoUtils.extend)(target.compareArrayOptions, options$$1);\n  }\n  target.compareArrayOptions.sparse = true;\n\n  // Only modify the target observable once\n  if (target.cacheDiffForKnownOperation) {\n    return;\n  }\n  var trackingChanges = false,\n      cachedDiff = null,\n      arrayChangeSubscription,\n      pendingNotifications = 0,\n      underlyingBeforeSubscriptionAddFunction = target.beforeSubscriptionAdd,\n      underlyingAfterSubscriptionRemoveFunction = target.afterSubscriptionRemove;\n\n  // Watch \"subscribe\" calls, and for array change events, ensure change tracking is enabled\n  target.beforeSubscriptionAdd = function (event) {\n    if (underlyingBeforeSubscriptionAddFunction) underlyingBeforeSubscriptionAddFunction.call(target, event);\n    if (event === arrayChangeEventName) {\n      trackChanges();\n    }\n  };\n\n  // Watch \"dispose\" calls, and for array change events, ensure change tracking is disabled when all are disposed\n  target.afterSubscriptionRemove = function (event) {\n    if (underlyingAfterSubscriptionRemoveFunction) underlyingAfterSubscriptionRemoveFunction.call(target, event);\n    if (event === arrayChangeEventName && !target.hasSubscriptionsForEvent(arrayChangeEventName)) {\n      if (arrayChangeSubscription) {\n        arrayChangeSubscription.dispose();\n      }\n      arrayChangeSubscription = null;\n      trackingChanges = false;\n    }\n  };\n\n  function trackChanges() {\n    // Calling 'trackChanges' multiple times is the same as calling it once\n    if (trackingChanges) {\n      return;\n    }\n\n    trackingChanges = true;\n\n    // Intercept \"notifySubscribers\" to track how many times it was called.\n    var underlyingNotifySubscribersFunction = target['notifySubscribers'];\n    target['notifySubscribers'] = function (valueToNotify, event) {\n      if (!event || event === defaultEvent) {\n        ++pendingNotifications;\n      }\n      return underlyingNotifySubscribersFunction.apply(this, arguments);\n    };\n\n    // Each time the array changes value, capture a clone so that on the next\n    // change it's possible to produce a diff\n    var previousContents = [].concat(target.peek() || []);\n    cachedDiff = null;\n    arrayChangeSubscription = target.subscribe(function (currentContents) {\n      // Make a copy of the current contents and ensure it's an array\n      currentContents = [].concat(currentContents || []);\n\n      // Compute the diff and issue notifications, but only if someone is listening\n      if (target.hasSubscriptionsForEvent(arrayChangeEventName)) {\n        var changes = getChanges(previousContents, currentContents);\n      }\n\n      // Eliminate references to the old, removed items, so they can be GCed\n      previousContents = currentContents;\n      cachedDiff = null;\n      pendingNotifications = 0;\n\n      if (changes && changes.length) {\n        target['notifySubscribers'](changes, arrayChangeEventName);\n      }\n    });\n  }\n\n  function getChanges(previousContents, currentContents) {\n    // We try to re-use cached diffs.\n    // The scenarios where pendingNotifications > 1 are when using rate-limiting or the Deferred Updates\n    // plugin, which without this check would not be compatible with arrayChange notifications. Normally,\n    // notifications are issued immediately so we wouldn't be queueing up more than one.\n    if (!cachedDiff || pendingNotifications > 1) {\n      cachedDiff = trackArrayChanges.compareArrays(previousContents, currentContents, target.compareArrayOptions);\n    }\n\n    return cachedDiff;\n  }\n\n  target.cacheDiffForKnownOperation = function (rawArray, operationName, args) {\n    var index, argsIndex;\n    // Only run if we're currently tracking changes for this observable array\n    // and there aren't any pending deferred notifications.\n    if (!trackingChanges || pendingNotifications) {\n      return;\n    }\n    var diff = [],\n        arrayLength = rawArray.length,\n        argsLength = args.length,\n        offset = 0;\n\n    function pushDiff(status, value, index) {\n      return diff[diff.length] = { 'status': status, 'value': value, 'index': index };\n    }\n    switch (operationName) {\n      case 'push':\n        offset = arrayLength;\n      case 'unshift':\n        for (index = 0; index < argsLength; index++) {\n          pushDiff('added', args[index], offset + index);\n        }\n        break;\n\n      case 'pop':\n        offset = arrayLength - 1;\n      case 'shift':\n        if (arrayLength) {\n          pushDiff('deleted', rawArray[offset], offset);\n        }\n        break;\n\n      case 'splice':\n        // Negative start index means 'from end of array'. After that we clamp to [0...arrayLength].\n        // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/splice\n        var startIndex = Math.min(Math.max(0, args[0] < 0 ? arrayLength + args[0] : args[0]), arrayLength),\n            endDeleteIndex = argsLength === 1 ? arrayLength : Math.min(startIndex + (args[1] || 0), arrayLength),\n            endAddIndex = startIndex + argsLength - 2,\n            endIndex = Math.max(endDeleteIndex, endAddIndex),\n            additions = [],\n            deletions = [];\n        for (index = startIndex, argsIndex = 2; index < endIndex; ++index, ++argsIndex) {\n          if (index < endDeleteIndex) deletions.push(pushDiff('deleted', rawArray[index], index));\n          if (index < endAddIndex) additions.push(pushDiff('added', args[argsIndex], index));\n        }\n        (0, _tkoUtils.findMovesInArrayComparison)(deletions, additions);\n        break;\n\n      default:\n        return;\n    }\n    cachedDiff = diff;\n  };\n}\n\n// Expose compareArrays for testing.\ntrackArrayChanges.compareArrays = _tkoUtils.compareArrays;\n\n// Add the trackArrayChanges extender so we can use\n// obs.extend({ trackArrayChanges: true })\nextenders.trackArrayChanges = trackArrayChanges;\n\n//\n// Observable Arrays\n// ===\n//\nfunction observableArray(initialValues) {\n  initialValues = initialValues || [];\n\n  if ((typeof initialValues === 'undefined' ? 'undefined' : _typeof(initialValues)) !== 'object' || !('length' in initialValues)) {\n    throw new Error('The argument passed when initializing an observable array must be an array, or null, or undefined.');\n  }\n\n  var result = observable(initialValues);\n  (0, _tkoUtils.setPrototypeOfOrExtend)(result, observableArray.fn);\n  trackArrayChanges(result);\n  // ^== result.extend({ trackArrayChanges: true })\n  return result;\n}\n\nobservableArray.fn = {\n  remove: function remove(valueOrPredicate) {\n    var underlyingArray = this.peek();\n    var removedValues = [];\n    var predicate = typeof valueOrPredicate === 'function' && !isObservable(valueOrPredicate) ? valueOrPredicate : function (value) {\n      return value === valueOrPredicate;\n    };\n    for (var i = 0; i < underlyingArray.length; i++) {\n      var value = underlyingArray[i];\n      if (predicate(value)) {\n        if (removedValues.length === 0) {\n          this.valueWillMutate();\n        }\n        removedValues.push(value);\n        underlyingArray.splice(i, 1);\n        i--;\n      }\n    }\n    if (removedValues.length) {\n      this.valueHasMutated();\n    }\n    return removedValues;\n  },\n\n  removeAll: function removeAll(arrayOfValues) {\n    // If you passed zero args, we remove everything\n    if (arrayOfValues === undefined) {\n      var underlyingArray = this.peek();\n      var allValues = underlyingArray.slice(0);\n      this.valueWillMutate();\n      underlyingArray.splice(0, underlyingArray.length);\n      this.valueHasMutated();\n      return allValues;\n    }\n    // If you passed an arg, we interpret it as an array of entries to remove\n    if (!arrayOfValues) {\n      return [];\n    }\n    return this['remove'](function (value) {\n      return (0, _tkoUtils.arrayIndexOf)(arrayOfValues, value) >= 0;\n    });\n  },\n\n  destroy: function destroy(valueOrPredicate) {\n    var underlyingArray = this.peek();\n    var predicate = typeof valueOrPredicate === 'function' && !isObservable(valueOrPredicate) ? valueOrPredicate : function (value) {\n      return value === valueOrPredicate;\n    };\n    this.valueWillMutate();\n    for (var i = underlyingArray.length - 1; i >= 0; i--) {\n      var value = underlyingArray[i];\n      if (predicate(value)) {\n        underlyingArray[i]['_destroy'] = true;\n      }\n    }\n    this.valueHasMutated();\n  },\n\n  destroyAll: function destroyAll(arrayOfValues) {\n    // If you passed zero args, we destroy everything\n    if (arrayOfValues === undefined) {\n      return this.destroy(function () {\n        return true;\n      });\n    }\n\n    // If you passed an arg, we interpret it as an array of entries to destroy\n    if (!arrayOfValues) {\n      return [];\n    }\n    return this.destroy(function (value) {\n      return (0, _tkoUtils.arrayIndexOf)(arrayOfValues, value) >= 0;\n    });\n  },\n\n  indexOf: function indexOf(item) {\n    var underlyingArray = this();\n    return (0, _tkoUtils.arrayIndexOf)(underlyingArray, item);\n  },\n\n  replace: function replace(oldItem, newItem) {\n    var index = this.indexOf(oldItem);\n    if (index >= 0) {\n      this.valueWillMutate();\n      this.peek()[index] = newItem;\n      this.valueHasMutated();\n    }\n  }\n};\n\n// Note that for browsers that don't support proto assignment, the\n// inheritance chain is created manually in the ko.observableArray constructor\nif (_tkoUtils.canSetPrototype) {\n  (0, _tkoUtils.setPrototypeOf)(observableArray.fn, observable.fn);\n}\n\n// Populate ko.observableArray.fn with read/write functions from native arrays\n// Important: Do not add any additional functions here that may reasonably be used to *read* data from the array\n// because we'll eval them without causing subscriptions, so ko.computed output could end up getting stale\n(0, _tkoUtils.arrayForEach)(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function (methodName) {\n  observableArray.fn[methodName] = function () {\n    // Use \"peek\" to avoid creating a subscription in any computed that we're executing in the context of\n    // (for consistency with mutating regular observables)\n    var underlyingArray = this.peek();\n    this.valueWillMutate();\n    this.cacheDiffForKnownOperation(underlyingArray, methodName, arguments);\n    var methodCallResult = underlyingArray[methodName].apply(underlyingArray, arguments);\n    this.valueHasMutated();\n    // The native sort and reverse methods return a reference to the array, but it makes more sense to return the observable array instead.\n    return methodCallResult === underlyingArray ? this : methodCallResult;\n  };\n});\n\n// Populate ko.observableArray.fn with read-only functions from native arrays\n(0, _tkoUtils.arrayForEach)(['slice'], function (methodName) {\n  observableArray.fn[methodName] = function () {\n    var underlyingArray = this();\n    return underlyingArray[methodName].apply(underlyingArray, arguments);\n  };\n});\n\n//\n// Helpers\n// ---\n// toJS & toJSON\n//\nvar maxNestedObservableDepth = 10; // Escape the (unlikely) pathalogical case where an observable's current value is itself (or similar reference cycle)\n\nfunction toJS(rootObject) {\n  if (arguments.length == 0) throw new Error(\"When calling ko.toJS, pass the object you want to convert.\");\n\n  // We just unwrap everything at every level in the object graph\n  return mapJsObjectGraph(rootObject, function (valueToMap) {\n    // Loop because an observable's value might in turn be another observable wrapper\n    for (var i = 0; isObservable(valueToMap) && i < maxNestedObservableDepth; i++) {\n      valueToMap = valueToMap();\n    }return valueToMap;\n  });\n}\n\nfunction toJSON(rootObject, replacer, space) {\n  // replacer and space are optional\n  var plainJavaScriptObject = toJS(rootObject);\n  return (0, _tkoUtils.stringifyJson)(plainJavaScriptObject, replacer, space);\n}\n\nfunction mapJsObjectGraph(rootObject, mapInputCallback, visitedObjects) {\n  visitedObjects = visitedObjects || new objectLookup();\n\n  rootObject = mapInputCallback(rootObject);\n  var canHaveProperties = (typeof rootObject === 'undefined' ? 'undefined' : _typeof(rootObject)) == \"object\" && rootObject !== null && rootObject !== undefined && !(rootObject instanceof RegExp) && !(rootObject instanceof Date) && !(rootObject instanceof String) && !(rootObject instanceof Number) && !(rootObject instanceof Boolean);\n  if (!canHaveProperties) return rootObject;\n\n  var outputProperties = rootObject instanceof Array ? [] : {};\n  visitedObjects.save(rootObject, outputProperties);\n\n  visitPropertiesOrArrayEntries(rootObject, function (indexer) {\n    var propertyValue = mapInputCallback(rootObject[indexer]);\n\n    switch (typeof propertyValue === 'undefined' ? 'undefined' : _typeof(propertyValue)) {\n      case \"boolean\":\n      case \"number\":\n      case \"string\":\n      case \"function\":\n        outputProperties[indexer] = propertyValue;\n        break;\n      case \"object\":\n      case \"undefined\":\n        var previouslyMappedValue = visitedObjects.get(propertyValue);\n        outputProperties[indexer] = previouslyMappedValue !== undefined ? previouslyMappedValue : mapJsObjectGraph(propertyValue, mapInputCallback, visitedObjects);\n        break;\n    }\n  });\n\n  return outputProperties;\n}\n\nfunction visitPropertiesOrArrayEntries(rootObject, visitorCallback) {\n  if (rootObject instanceof Array) {\n    for (var i = 0; i < rootObject.length; i++) {\n      visitorCallback(i);\n    } // For arrays, also respect toJSON property for custom mappings (fixes #278)\n    if (typeof rootObject['toJSON'] == 'function') visitorCallback('toJSON');\n  } else {\n    for (var propertyName in rootObject) {\n      visitorCallback(propertyName);\n    }\n  }\n}\n\nfunction objectLookup() {\n  this.keys = [];\n  this.values = [];\n}\n\nobjectLookup.prototype = {\n  constructor: objectLookup,\n  save: function save(key, value) {\n    var existingIndex = (0, _tkoUtils.arrayIndexOf)(this.keys, key);\n    if (existingIndex >= 0) this.values[existingIndex] = value;else {\n      this.keys.push(key);\n      this.values.push(value);\n    }\n  },\n  get: function get(key) {\n    var existingIndex = (0, _tkoUtils.arrayIndexOf)(this.keys, key);\n    return existingIndex >= 0 ? this.values[existingIndex] : undefined;\n  }\n};\n\n//\n// Observables.\n// ---\n//\n// The following are added to the root `[t]ko` object.\n//\n\nexports.dependencyDetection = dependencyDetection;\nexports.observable = observable;\nexports.isObservable = isObservable;\nexports.unwrap = unwrap;\nexports.peek = peek;\nexports.isWriteableObservable = isWriteableObservable;\nexports.isWritableObservable = isWriteableObservable;\nexports.isSubscribable = isSubscribable;\nexports.subscribable = subscribable;\nexports.observableArray = observableArray;\nexports.trackArrayChanges = trackArrayChanges;\nexports.arrayChangeEventName = arrayChangeEventName;\nexports.toJS = toJS;\nexports.toJSON = toJSON;\nexports.deferUpdates = deferUpdates;\nexports.valuesArePrimitiveAndEqual = valuesArePrimitiveAndEqual;\nexports.applyExtenders = applyExtenders;\nexports.extenders = extenders;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///0\n");

/***/ }),
/* 1 */
/*!*******************************************************************************!*\
  !*** c:/Users/pm/Downloads/react/js-framework-benchmark/ko6/src/renderCtx.js ***!
  \*******************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.createStamp = exports.insertNode = exports.Ctx = exports.renderBlock = exports.renderElement = exports.renderCtx = undefined;\n\nvar _tkoObservable = __webpack_require__(/*! ./tko/tko.observable.js */ 0);\n\nvar _tkoComputed = __webpack_require__(/*! ./tko/tko.computed.js */ 3);\n\nvar _blockComponent = __webpack_require__(/*! ./blocks/blockComponent.js */ 5);\n\nfunction renderCtx(parentEl, tpl, ctx, level) {\n\tif (Array.isArray(tpl)) {\n\t\t//is array\n\t\tfor (var i = 0, max = tpl.length; i < max; i++) {\n\t\t\trenderCtx(parentEl, tpl[i], ctx, level);\n\t\t}\n\t} else if (tpl.tag) {\n\t\tif (tpl.tag.toLowerCase() != tpl.tag || tpl.tag.indexOf('-') > 0) {\n\t\t\t//is block\n\t\t\trenderBlock(parentEl, tpl, ctx, level);\n\t\t} else {\n\t\t\t//is html element\n\t\t\trenderElement(parentEl, tpl, ctx, level);\n\t\t}\n\t} else if (tpl && typeof tpl == \"function\") {\n\t\t//is text expresssion\n\t\tvar n = document.createTextNode(\"\");\n\t\tif (level == 0) ctx.rootNodes.push(n);\n\t\tinsertNode(parentEl, n);\n\t\ttextExpr(n, tpl, ctx, level);\n\t} else if (tpl !== undefined || tpl !== null) {\n\t\t//is text\n\t\tvar _n = document.createTextNode(\"\" + tpl);\n\t\tif (level == 0) ctx.rootNodes.push(_n);\n\t\tinsertNode(parentEl, _n);\n\t}\n}\n\nfunction insertNode(parentEl, n) {\n\tif (parentEl.nodeType) {\n\t\tparentEl.appendChild(n);\n\t} else {\n\t\tparentEl[0].insertBefore(n, parentEl[1]);\n\t}\n}\n\nfunction createStamp(parentEl, name) {\n\tvar stamp = document.createComment(name);\n\tif (parentEl.nodeType) {\n\t\tparentEl.appendChild(stamp);\n\t\treturn [parentEl, stamp];\n\t} else {\n\t\tparentEl[0].insertBefore(stamp, parentEl[1]);\n\t\treturn [parentEl[0], stamp];\n\t}\n}\n\nfunction attrExpr(el, key, val, ctx) {\n\tvar binding = renderCtx.bindingHandlers[key];\n\tif (binding) {\n\t\tif (binding.init) {\n\t\t\tvar val2 = ctx.expr(val);\n\t\t\tbinding.init(el, val2, ctx);\n\t\t}\n\t\tif (binding.update) {\n\t\t\tvar kv = (0, _tkoComputed.computed)(function () {\n\t\t\t\tvar val2 = ctx.expr(val);\n\t\t\t\tbinding.update(el, val2, ctx);\n\t\t\t}, this);\n\t\t\tkv();\n\t\t\tctx.subscribers.push(kv);\n\t\t}\n\t\tif (binding.dispose && binding.dispose.call) {\n\t\t\tvar obj = {};\n\t\t\tobj.dispose = function () {\n\t\t\t\tbinding.dispose(el, ctx);\n\t\t\t};\n\t\t\tctx.subscribers.push(obj);\n\t\t}\n\t} else {\n\t\tvar kv = (0, _tkoComputed.computed)(function () {\n\t\t\tvar val2 = ctx.expr(val);\n\t\t\tval2 = (0, _tkoObservable.unwrap)(val2);\n\t\t\tel.setAttribute(key, val2);\n\t\t}, this);\n\t\tkv();\n\t\tif (kv.getDependenciesCount() > 0) {\n\t\t\tctx.subscribers.push(kv);\n\t\t} else {\n\t\t\tkv.dispose();\n\t\t}\n\t}\n};\n\nfunction textExpr(n, val, ctx, level) {\n\tvar kv = (0, _tkoComputed.computed)(function () {\n\t\tvar val2 = ctx.expr(val);\n\t\tval2 = (0, _tkoObservable.unwrap)(val2);\n\t\tn.nodeValue = \"\" + val2;\n\t\treturn val2;\n\t}, this);\n\tkv();\n\tif (kv.getDependenciesCount() > 0) {\n\t\tctx.subscribers.push(kv);\n\t} else {\n\t\tkv.dispose();\n\t}\n};\n\nfunction renderElement(parentEl, tpl, ctx, level) {\n\tvar el = document.createElement(tpl.tag);\n\tif (level == 0) ctx.rootNodes.push(el);\n\tfor (var key in tpl.attrs) {\n\t\tvar val = tpl.attrs[key];\n\t\tif (typeof val == \"function\") {\n\t\t\tattrExpr(el, key, val, ctx);\n\t\t} else {\n\t\t\tel.setAttribute(key, val);\n\t\t}\n\t}\n\tinsertNode(parentEl, el);\n\tif (tpl.children) {\n\t\tfor (var i = 0, max = tpl.children.length; i < max; i++) {\n\t\t\trenderCtx(el, tpl.children[i], ctx, level + 1);\n\t\t}\n\t}\n};\n\nfunction renderBlock(parentEl, tpl, ctx, level) {\n\tvar blockFn = renderCtx.blocks[tpl.tag];\n\tif (!(blockFn && blockFn.call)) {\n\t\tblockFn = _blockComponent.blockComponent;\n\t\ttpl.attrs._name = function () {\n\t\t\treturn tpl.tag;\n\t\t};\n\t}\n\n\tvar stamp = createStamp(parentEl, tpl.tag);\n\tif (level == 0) ctx.rootNodes.push(stamp[1]);\n\n\tvar ctx0 = ctx.createChild();\n\n\tvar kv = (0, _tkoComputed.computed)(function () {\n\t\tblockFn(stamp, tpl, ctx0, level);\n\t}, this);\n\tkv();\n\tif (kv.getDependenciesCount() > 0) {\n\t\tctx.subscribers.push(kv);\n\t} else {\n\t\tkv.dispose();\n\t}\n};\n\nrenderCtx.blocks = {};\n\nrenderCtx.bindingHandlers = {};\n\nfunction Ctx(model, parent, root, component) {\n\tthis.model = model;\n\tthis.parent = parent;\n\tthis.root = root;\n\tthis.component = component;\n\tthis.rootNodes = [];\n\tthis.subscribers = [];\n}\nCtx.prototype.dispose = function () {\n\tfor (var i = 0, max = this.subscribers.length; i < max; i++) {\n\t\tvar e = this.subscribers[i];\n\t\tif (e.dispose) e.dispose();\n\t}\n\tthis.subscribers = [];\n\tfor (var _i = 0, _max = this.rootNodes.length; _i < _max; _i++) {\n\t\tvar n = this.rootNodes[_i];\n\t\tif (n.parentNode) n.parentNode.removeChild(n);\n\t}\n\tthis.rootNodes = [];\n};\nCtx.prototype.createChild = function (model) {\n\tvar ctx0 = new Ctx(model || this.model, this.parent, this.root, this.component);\n\tthis.subscribers.push(ctx0);\n\treturn ctx0;\n};\nCtx.prototype.expr = function (f) {\n\treturn f(this.model, this);\n};\n\nexports.renderCtx = renderCtx;\nexports.renderElement = renderElement;\nexports.renderBlock = renderBlock;\nexports.Ctx = Ctx;\nexports.insertNode = insertNode;\nexports.createStamp = createStamp;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///1\n");

/***/ }),
/* 2 */
/*!***********************************************************************************!*\
  !*** c:/Users/pm/Downloads/react/js-framework-benchmark/ko6/src/tko/tko.utils.js ***!
  \***********************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(global) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n//\n// Array utilities\n//\n/* eslint no-cond-assign: 0 */\n\nfunction arrayForEach(array, action) {\n    for (var i = 0, j = array.length; i < j; i++) {\n        action(array[i], i);\n    }\n}\n\nfunction arrayIndexOf(array, item) {\n    // IE9\n    if (typeof Array.prototype.indexOf == \"function\") return Array.prototype.indexOf.call(array, item);\n    for (var i = 0, j = array.length; i < j; i++) {\n        if (array[i] === item) return i;\n    }return -1;\n}\n\nfunction arrayFirst(array, predicate, predicateOwner) {\n    for (var i = 0, j = array.length; i < j; i++) {\n        if (predicate.call(predicateOwner, array[i], i)) return array[i];\n    }return null;\n}\n\nfunction arrayRemoveItem(array, itemToRemove) {\n    var index = arrayIndexOf(array, itemToRemove);\n    if (index > 0) {\n        array.splice(index, 1);\n    } else if (index === 0) {\n        array.shift();\n    }\n}\n\nfunction arrayGetDistinctValues(array) {\n    array = array || [];\n    var result = [];\n    for (var i = 0, j = array.length; i < j; i++) {\n        if (arrayIndexOf(result, array[i]) < 0) result.push(array[i]);\n    }\n    return result;\n}\n\nfunction arrayMap(array, mapping) {\n    array = array || [];\n    var result = [];\n    for (var i = 0, j = array.length; i < j; i++) {\n        result.push(mapping(array[i], i));\n    }return result;\n}\n\nfunction arrayFilter(array, predicate) {\n    array = array || [];\n    var result = [];\n    for (var i = 0, j = array.length; i < j; i++) {\n        if (predicate(array[i], i)) result.push(array[i]);\n    }return result;\n}\n\nfunction arrayPushAll(array, valuesToPush) {\n    if (valuesToPush instanceof Array) array.push.apply(array, valuesToPush);else for (var i = 0, j = valuesToPush.length; i < j; i++) {\n        array.push(valuesToPush[i]);\n    }return array;\n}\n\nfunction addOrRemoveItem(array, value, included) {\n    var existingEntryIndex = arrayIndexOf(typeof array.peek === 'function' ? array.peek() : array, value);\n    if (existingEntryIndex < 0) {\n        if (included) array.push(value);\n    } else {\n        if (!included) array.splice(existingEntryIndex, 1);\n    }\n}\n\nfunction makeArray(arrayLikeObject) {\n    var result = [];\n    for (var i = 0, j = arrayLikeObject.length; i < j; i++) {\n        result.push(arrayLikeObject[i]);\n    }\n    return result;\n}\n\nfunction range(min, max) {\n    min = typeof min === 'function' ? min() : min;\n    max = typeof max === 'function' ? max() : max;\n    var result = [];\n    for (var i = min; i <= max; i++) {\n        result.push(i);\n    }return result;\n}\n\n// Go through the items that have been added and deleted and try to find matches between them.\nfunction findMovesInArrayComparison(left, right, limitFailedCompares) {\n    if (left.length && right.length) {\n        var failedCompares, l, r, leftItem, rightItem;\n        for (failedCompares = l = 0; (!limitFailedCompares || failedCompares < limitFailedCompares) && (leftItem = left[l]); ++l) {\n            for (r = 0; rightItem = right[r]; ++r) {\n                if (leftItem['value'] === rightItem['value']) {\n                    leftItem['moved'] = rightItem['index'];\n                    rightItem['moved'] = leftItem['index'];\n                    right.splice(r, 1); // This item is marked as moved; so remove it from right list\n                    failedCompares = r = 0; // Reset failed compares count because we're checking for consecutive failures\n                    break;\n                }\n            }\n            failedCompares += r;\n        }\n    }\n}\n\nvar statusNotInOld = 'added';\nvar statusNotInNew = 'deleted';\n\n// Simple calculation based on Levenshtein distance.\nfunction compareArrays(oldArray, newArray, options) {\n    // For backward compatibility, if the third arg is actually a bool, interpret\n    // it as the old parameter 'dontLimitMoves'. Newer code should use { dontLimitMoves: true }.\n    options = typeof options === 'boolean' ? { 'dontLimitMoves': options } : options || {};\n    oldArray = oldArray || [];\n    newArray = newArray || [];\n\n    if (oldArray.length < newArray.length) return compareSmallArrayToBigArray(oldArray, newArray, statusNotInOld, statusNotInNew, options);else return compareSmallArrayToBigArray(newArray, oldArray, statusNotInNew, statusNotInOld, options);\n}\n\nfunction compareSmallArrayToBigArray(smlArray, bigArray, statusNotInSml, statusNotInBig, options) {\n    var myMin = Math.min,\n        myMax = Math.max,\n        editDistanceMatrix = [],\n        smlIndex,\n        smlIndexMax = smlArray.length,\n        bigIndex,\n        bigIndexMax = bigArray.length,\n        compareRange = bigIndexMax - smlIndexMax || 1,\n        maxDistance = smlIndexMax + bigIndexMax + 1,\n        thisRow,\n        lastRow,\n        bigIndexMaxForRow,\n        bigIndexMinForRow;\n\n    for (smlIndex = 0; smlIndex <= smlIndexMax; smlIndex++) {\n        lastRow = thisRow;\n        editDistanceMatrix.push(thisRow = []);\n        bigIndexMaxForRow = myMin(bigIndexMax, smlIndex + compareRange);\n        bigIndexMinForRow = myMax(0, smlIndex - 1);\n        for (bigIndex = bigIndexMinForRow; bigIndex <= bigIndexMaxForRow; bigIndex++) {\n            if (!bigIndex) thisRow[bigIndex] = smlIndex + 1;else if (!smlIndex) // Top row - transform empty array into new array via additions\n                thisRow[bigIndex] = bigIndex + 1;else if (smlArray[smlIndex - 1] === bigArray[bigIndex - 1]) thisRow[bigIndex] = lastRow[bigIndex - 1]; // copy value (no edit)\n            else {\n                    var northDistance = lastRow[bigIndex] || maxDistance; // not in big (deletion)\n                    var westDistance = thisRow[bigIndex - 1] || maxDistance; // not in small (addition)\n                    thisRow[bigIndex] = myMin(northDistance, westDistance) + 1;\n                }\n        }\n    }\n\n    var editScript = [],\n        meMinusOne,\n        notInSml = [],\n        notInBig = [];\n    for (smlIndex = smlIndexMax, bigIndex = bigIndexMax; smlIndex || bigIndex;) {\n        meMinusOne = editDistanceMatrix[smlIndex][bigIndex] - 1;\n        if (bigIndex && meMinusOne === editDistanceMatrix[smlIndex][bigIndex - 1]) {\n            notInSml.push(editScript[editScript.length] = { // added\n                'status': statusNotInSml,\n                'value': bigArray[--bigIndex],\n                'index': bigIndex });\n        } else if (smlIndex && meMinusOne === editDistanceMatrix[smlIndex - 1][bigIndex]) {\n            notInBig.push(editScript[editScript.length] = { // deleted\n                'status': statusNotInBig,\n                'value': smlArray[--smlIndex],\n                'index': smlIndex });\n        } else {\n            --bigIndex;\n            --smlIndex;\n            if (!options['sparse']) {\n                editScript.push({\n                    'status': \"retained\",\n                    'value': bigArray[bigIndex] });\n            }\n        }\n    }\n\n    // Set a limit on the number of consecutive non-matching comparisons; having it a multiple of\n    // smlIndexMax keeps the time complexity of this algorithm linear.\n    findMovesInArrayComparison(notInBig, notInSml, !options['dontLimitMoves'] && smlIndexMax * 10);\n\n    return editScript.reverse();\n}\n\n//\n// This becomes ko.options\n// --\n//\n// This is the root 'options', which must be extended by others.\n\nvar _global;\n\ntry {\n    _global = window;\n} catch (e) {\n    _global = global;\n}\n\nvar options = {\n    deferUpdates: false,\n\n    protoProperty: '__ko_proto__',\n\n    // Global variables that can be accessed from bindings.\n    bindingGlobals: _global,\n\n    Promise: _global && _global.Promise,\n\n    taskScheduler: null,\n\n    debug: false,\n\n    global: _global,\n    document: _global.document,\n\n    // Filters for bindings\n    //   data-bind=\"expression | filter_1 | filter_2\"\n    filters: {},\n\n    onError: function onError(e) {\n        throw e;\n    },\n\n    set: function set(name, value) {\n        options[name] = value;\n    }\n};\n\nObject.defineProperty(options, '$', {\n    get: function get() {\n        return options.jQuery;\n    }\n});\n\n//\n// Error handling\n// ---\n//\n// The default onError handler is to re-throw.\nfunction catchFunctionErrors(delegate) {\n    return options.onError ? function () {\n        try {\n            return delegate.apply(this, arguments);\n        } catch (e) {\n            options.onError(e);\n        }\n    } : delegate;\n}\n\nfunction deferError(error) {\n    safeSetTimeout(function () {\n        options.onError(error);\n    }, 0);\n}\n\nfunction safeSetTimeout(handler, timeout) {\n    return setTimeout(catchFunctionErrors(handler), timeout);\n}\n\n//\n// Asynchronous functionality\n// ---\nfunction throttle(callback, timeout) {\n    var timeoutInstance;\n    return function () {\n        if (!timeoutInstance) {\n            timeoutInstance = safeSetTimeout(function () {\n                timeoutInstance = undefined;\n                callback();\n            }, timeout);\n        }\n    };\n}\n\nfunction debounce(callback, timeout) {\n    var timeoutInstance;\n    return function () {\n        clearTimeout(timeoutInstance);\n        timeoutInstance = safeSetTimeout(callback, timeout);\n    };\n}\n\n//\n// Object functions\n//\n\nfunction extend(target, source) {\n    if (source) {\n        for (var prop in source) {\n            if (source.hasOwnProperty(prop)) {\n                target[prop] = source[prop];\n            }\n        }\n    }\n    return target;\n}\n\nfunction objectForEach(obj, action) {\n    for (var prop in obj) {\n        if (obj.hasOwnProperty(prop)) {\n            action(prop, obj[prop]);\n        }\n    }\n}\n\nfunction objectMap(source, mapping) {\n    if (!source) return source;\n    var target = {};\n    for (var prop in source) {\n        if (source.hasOwnProperty(prop)) {\n            target[prop] = mapping(source[prop], prop, source);\n        }\n    }\n    return target;\n}\n\nfunction getObjectOwnProperty(obj, propName) {\n    return obj.hasOwnProperty(propName) ? obj[propName] : undefined;\n}\n\nfunction clonePlainObjectDeep(obj, seen) {\n    if (!seen) {\n        seen = [];\n    }\n\n    if (!obj || (typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) !== 'object' || obj.constructor !== Object || seen.indexOf(obj) !== -1) {\n        return obj;\n    }\n\n    // Anything that makes it below is a plain object that has not yet\n    // been seen/cloned.\n    seen.push(obj);\n\n    var result = {};\n    for (var prop in obj) {\n        if (obj.hasOwnProperty(prop)) {\n            result[prop] = clonePlainObjectDeep(obj[prop], seen);\n        }\n    }\n    return result;\n}\n\n//\n// Prototype Functions\n//\nvar protoProperty = options.protoProperty;\n\nvar canSetPrototype = { __proto__: [] } instanceof Array;\n\nfunction setPrototypeOf(obj, proto) {\n    obj.__proto__ = proto;\n    return obj;\n}\n\nvar setPrototypeOfOrExtend = canSetPrototype ? setPrototypeOf : extend;\n\nfunction hasPrototype(instance, prototype) {\n    if (instance === null || instance === undefined || instance[protoProperty] === undefined) return false;\n    if (instance[protoProperty] === prototype) return true;\n    return hasPrototype(instance[protoProperty], prototype); // Walk the prototype chain\n}\n\n//\n// String (and JSON)\n//\n\n\nfunction stringTrim(string) {\n    return string === null || string === undefined ? '' : string.trim ? string.trim() : string.toString().replace(/^[\\s\\xa0]+|[\\s\\xa0]+$/g, '');\n}\n\nfunction stringStartsWith(string, startsWith) {\n    string = string || \"\";\n    if (startsWith.length > string.length) return false;\n    return string.substring(0, startsWith.length) === startsWith;\n}\n\nfunction parseJson(jsonString) {\n    if (typeof jsonString == \"string\") {\n        jsonString = stringTrim(jsonString);\n        if (jsonString) {\n            if (JSON && JSON.parse) // Use native parsing where available\n                return JSON.parse(jsonString);\n            return new Function(\"return \" + jsonString)(); // Fallback on less safe parsing for older browsers\n        }\n    }\n    return null;\n}\n\nfunction stringifyJson(data, replacer, space) {\n    // replacer and space are optional\n    if (!JSON || !JSON.stringify) throw new Error(\"Cannot find JSON.stringify(). Some browsers (e.g., IE < 8) don't support it natively, but you can overcome this by adding a script reference to json2.js, downloadable from http://www.json.org/json2.js\");\n    return JSON.stringify(typeof data === 'function' ? data() : data, replacer, space);\n}\n\n//\n// ES6 Symbols\n//\n\nvar useSymbols = typeof Symbol === 'function';\n\nfunction createSymbolOrString(identifier) {\n    return useSymbols ? Symbol(identifier) : identifier;\n}\n\n//\n//  Tasks Micro-scheduler\n//  ===\n//\n/* eslint no-cond-assign: 0 */\nvar taskQueue = [];\nvar taskQueueLength = 0;\nvar nextHandle = 1;\nvar nextIndexToProcess = 0;\nvar w = options.global;\n\nif (w && w.MutationObserver && !(w.navigator && w.navigator.standalone)) {\n    // Chrome 27+, Firefox 14+, IE 11+, Opera 15+, Safari 6.1+, node\n    // From https://github.com/petkaantonov/bluebird * Copyright (c) 2014 Petka Antonov * License: MIT\n    options.taskScheduler = function (callback) {\n        var div = w.document.createElement(\"div\");\n        new MutationObserver(callback).observe(div, { attributes: true });\n        return function () {\n            div.classList.toggle(\"foo\");\n        };\n    }(scheduledProcess);\n} else if (w && w.document && \"onreadystatechange\" in w.document.createElement(\"script\")) {\n    // IE 6-10\n    // From https://github.com/YuzuJS/setImmediate * Copyright (c) 2012 Barnesandnoble.com, llc, Donavon West, and Domenic Denicola * License: MIT\n    options.taskScheduler = function (callback) {\n        var script = document.createElement(\"script\");\n        script.onreadystatechange = function () {\n            script.onreadystatechange = null;\n            document.documentElement.removeChild(script);\n            script = null;\n            callback();\n        };\n        document.documentElement.appendChild(script);\n    };\n} else {\n    options.taskScheduler = function (callback) {\n        setTimeout(callback, 0);\n    };\n}\n\nfunction processTasks() {\n    if (taskQueueLength) {\n        // Each mark represents the end of a logical group of tasks and the number of these groups is\n        // limited to prevent unchecked recursion.\n        var mark = taskQueueLength,\n            countMarks = 0;\n\n        // nextIndexToProcess keeps track of where we are in the queue; processTasks can be called recursively without issue\n        for (var task; nextIndexToProcess < taskQueueLength;) {\n            if (task = taskQueue[nextIndexToProcess++]) {\n                if (nextIndexToProcess > mark) {\n                    if (++countMarks >= 5000) {\n                        nextIndexToProcess = taskQueueLength; // skip all tasks remaining in the queue since any of them could be causing the recursion\n                        deferError(Error(\"'Too much recursion' after processing \" + countMarks + \" task groups.\"));\n                        break;\n                    }\n                    mark = taskQueueLength;\n                }\n                try {\n                    task();\n                } catch (ex) {\n                    deferError(ex);\n                }\n            }\n        }\n    }\n}\n\nfunction scheduledProcess() {\n    processTasks();\n\n    // Reset the queue\n    nextIndexToProcess = taskQueueLength = taskQueue.length = 0;\n}\n\nfunction scheduleTaskProcessing() {\n    options.taskScheduler(scheduledProcess);\n}\n\nfunction schedule(func) {\n    if (!taskQueueLength) {\n        scheduleTaskProcessing();\n    }\n\n    taskQueue[taskQueueLength++] = func;\n    return nextHandle++;\n}\n\nfunction cancel(handle) {\n    var index = handle - (nextHandle - taskQueueLength);\n    if (index >= nextIndexToProcess && index < taskQueueLength) {\n        taskQueue[index] = null;\n    }\n}\n\n// For testing only: reset the queue and return the previous queue length\nfunction resetForTesting() {\n    var length = taskQueueLength - nextIndexToProcess;\n    nextIndexToProcess = taskQueueLength = taskQueue.length = 0;\n    return length;\n}\n\nvar tasks = Object.freeze({\n    schedule: schedule,\n    cancel: cancel,\n    resetForTesting: resetForTesting,\n    runEarly: processTasks\n});\n\nexports.tasks = tasks;\nexports.options = options;\nexports.arrayForEach = arrayForEach;\nexports.arrayIndexOf = arrayIndexOf;\nexports.arrayFirst = arrayFirst;\nexports.arrayRemoveItem = arrayRemoveItem;\nexports.arrayGetDistinctValues = arrayGetDistinctValues;\nexports.arrayMap = arrayMap;\nexports.arrayFilter = arrayFilter;\nexports.arrayPushAll = arrayPushAll;\nexports.addOrRemoveItem = addOrRemoveItem;\nexports.makeArray = makeArray;\nexports.range = range;\nexports.findMovesInArrayComparison = findMovesInArrayComparison;\nexports.compareArrays = compareArrays;\nexports.throttle = throttle;\nexports.debounce = debounce;\nexports.catchFunctionErrors = catchFunctionErrors;\nexports.deferError = deferError;\nexports.safeSetTimeout = safeSetTimeout;\nexports.extend = extend;\nexports.objectForEach = objectForEach;\nexports.objectMap = objectMap;\nexports.getObjectOwnProperty = getObjectOwnProperty;\nexports.clonePlainObjectDeep = clonePlainObjectDeep;\nexports.canSetPrototype = canSetPrototype;\nexports.setPrototypeOf = setPrototypeOf;\nexports.setPrototypeOfOrExtend = setPrototypeOfOrExtend;\nexports.hasPrototype = hasPrototype;\nexports.stringTrim = stringTrim;\nexports.stringStartsWith = stringStartsWith;\nexports.parseJson = parseJson;\nexports.stringifyJson = stringifyJson;\nexports.useSymbols = useSymbols;\nexports.createSymbolOrString = createSymbolOrString;\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../node_modules/webpack/buildin/global.js */ 9)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///2\n");

/***/ }),
/* 3 */
/*!**************************************************************************************!*\
  !*** c:/Users/pm/Downloads/react/js-framework-benchmark/ko6/src/tko/tko.computed.js ***!
  \**************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.throttleExtender = exports.pureComputed = exports.isPureComputed = exports.isComputed = exports.computed = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _tkoUtils = __webpack_require__(/*! ./tko.utils.js */ 2);\n\nvar _tkoObservable = __webpack_require__(/*! ./tko.observable.js */ 0);\n\n//\n// Computed Observable Values\n//\n// (before tko, `computed` was also known as `dependentObservable`)\n//\nvar computedState = (0, _tkoUtils.createSymbolOrString)('_state');\n\nfunction computed(evaluatorFunctionOrOptions, evaluatorFunctionTarget, options$$1) {\n  if ((typeof evaluatorFunctionOrOptions === 'undefined' ? 'undefined' : _typeof(evaluatorFunctionOrOptions)) === 'object') {\n    // Single-parameter syntax - everything is on this \"options\" param\n    options$$1 = evaluatorFunctionOrOptions;\n  } else {\n    // Multi-parameter syntax - construct the options according to the params passed\n    options$$1 = options$$1 || {};\n    if (evaluatorFunctionOrOptions) {\n      options$$1.read = evaluatorFunctionOrOptions;\n    }\n  }\n  if (typeof options$$1.read !== 'function') {\n    throw Error('Pass a function that returns the value of the computed');\n  }\n\n  var writeFunction = options$$1.write;\n  var state = {\n    latestValue: undefined,\n    isStale: true,\n    isBeingEvaluated: false,\n    suppressDisposalUntilDisposeWhenReturnsFalse: false,\n    isDisposed: false,\n    pure: false,\n    isSleeping: false,\n    readFunction: options$$1.read,\n    evaluatorFunctionTarget: evaluatorFunctionTarget || options$$1.owner,\n    disposeWhen: options$$1.disposeWhen || options$$1.disposeWhen,\n    dependencyTracking: {},\n    dependenciesCount: 0,\n    evaluationTimeoutInstance: null\n  };\n\n  function computedObservable() {\n    if (arguments.length > 0) {\n      if (typeof writeFunction === 'function') {\n        // Writing a value\n        writeFunction.apply(state.evaluatorFunctionTarget, arguments);\n      } else {\n        throw new Error(\"Cannot write a value to a computed unless you specify a 'write' option. If you wish to read the current value, don't pass any parameters.\");\n      }\n      return this; // Permits chained assignments\n    } else {\n      // Reading the value\n      _tkoObservable.dependencyDetection.registerDependency(computedObservable);\n      if (state.isStale || state.isSleeping && computedObservable.haveDependenciesChanged()) {\n        computedObservable.evaluateImmediate();\n      }\n      return state.latestValue;\n    }\n  }\n\n  computedObservable[computedState] = state;\n  computedObservable.hasWriteFunction = typeof writeFunction === 'function';\n\n  // Inherit from 'subscribable'\n  if (!_tkoUtils.canSetPrototype) {\n    // 'subscribable' won't be on the prototype chain unless we put it there directly\n    (0, _tkoUtils.extend)(computedObservable, _tkoObservable.subscribable.fn);\n  }\n  _tkoObservable.subscribable.fn.init(computedObservable);\n\n  // Inherit from 'computed'\n  (0, _tkoUtils.setPrototypeOfOrExtend)(computedObservable, computed.fn);\n\n  if (options$$1.pure) {\n    state.pure = true;\n    state.isSleeping = true; // Starts off sleeping; will awake on the first subscription\n    (0, _tkoUtils.extend)(computedObservable, pureComputedOverrides);\n  } else if (options$$1.deferEvaluation) {\n    (0, _tkoUtils.extend)(computedObservable, deferEvaluationOverrides);\n  }\n\n  if (_tkoUtils.options.deferUpdates) {\n    _tkoObservable.extenders.deferred(computedObservable, true);\n  }\n\n  if (_tkoUtils.options.debug) {\n    // #1731 - Aid debugging by exposing the computed's options\n    computedObservable._options = options$$1;\n  }\n\n  // Evaluate, unless sleeping or deferEvaluation is true\n  if (!state.isSleeping && !options$$1.deferEvaluation) {\n    computedObservable.evaluateImmediate();\n  }\n\n  return computedObservable;\n}\n\n// Utility function that disposes a given dependencyTracking entry\nfunction computedDisposeDependencyCallback(id, entryToDispose) {\n  if (entryToDispose !== null && entryToDispose.dispose) {\n    entryToDispose.dispose();\n  }\n}\n\n// This function gets called each time a dependency is detected while evaluating a computed.\n// It's factored out as a shared function to avoid creating unnecessary function instances during evaluation.\nfunction computedBeginDependencyDetectionCallback(subscribable$$1, id) {\n  var computedObservable = this.computedObservable,\n      state = computedObservable[computedState];\n  if (!state.isDisposed) {\n    if (this.disposalCount && this.disposalCandidates[id]) {\n      // Don't want to dispose this subscription, as it's still being used\n      computedObservable.addDependencyTracking(id, subscribable$$1, this.disposalCandidates[id]);\n      this.disposalCandidates[id] = null; // No need to actually delete the property - disposalCandidates is a transient object anyway\n      --this.disposalCount;\n    } else if (!state.dependencyTracking[id]) {\n      // Brand new subscription - add it\n      computedObservable.addDependencyTracking(id, subscribable$$1, state.isSleeping ? { _target: subscribable$$1 } : computedObservable.subscribeToDependency(subscribable$$1));\n    }\n  }\n}\n\ncomputed.fn = {\n  equalityComparer: _tkoObservable.valuesArePrimitiveAndEqual,\n  getDependenciesCount: function getDependenciesCount() {\n    return this[computedState].dependenciesCount;\n  },\n  addDependencyTracking: function addDependencyTracking(id, target, trackingObj) {\n    if (this[computedState].pure && target === this) {\n      throw Error(\"A 'pure' computed must not be called recursively\");\n    }\n\n    this[computedState].dependencyTracking[id] = trackingObj;\n    trackingObj._order = this[computedState].dependenciesCount++;\n    trackingObj._version = target.getVersion();\n  },\n  haveDependenciesChanged: function haveDependenciesChanged() {\n    var id,\n        dependency,\n        dependencyTracking = this[computedState].dependencyTracking;\n    for (id in dependencyTracking) {\n      if (dependencyTracking.hasOwnProperty(id)) {\n        dependency = dependencyTracking[id];\n        if (dependency._target.hasChanged(dependency._version)) {\n          return true;\n        }\n      }\n    }\n  },\n  markDirty: function markDirty() {\n    // Process \"dirty\" events if we can handle delayed notifications\n    if (this._evalDelayed && !this[computedState].isBeingEvaluated) {\n      this._evalDelayed();\n    }\n  },\n  isActive: function isActive() {\n    return this[computedState].isStale || this[computedState].dependenciesCount > 0;\n  },\n  respondToChange: function respondToChange() {\n    // Ignore \"change\" events if we've already scheduled a delayed notification\n    if (!this._notificationIsPending) {\n      this.evaluatePossiblyAsync();\n    }\n  },\n  subscribeToDependency: function subscribeToDependency(target) {\n    return target.subscribe(this.evaluatePossiblyAsync, this);\n  },\n  evaluatePossiblyAsync: function evaluatePossiblyAsync() {\n    var computedObservable = this,\n        throttleEvaluationTimeout = computedObservable.throttleEvaluation;\n    if (throttleEvaluationTimeout && throttleEvaluationTimeout >= 0) {\n      clearTimeout(this[computedState].evaluationTimeoutInstance);\n      this[computedState].evaluationTimeoutInstance = (0, _tkoUtils.safeSetTimeout)(function () {\n        computedObservable.evaluateImmediate(true /* notifyChange */);\n      }, throttleEvaluationTimeout);\n    } else if (computedObservable._evalDelayed) {\n      computedObservable._evalDelayed();\n    } else {\n      computedObservable.evaluateImmediate(true /* notifyChange */);\n    }\n  },\n  evaluateImmediate: function evaluateImmediate(notifyChange) {\n    var computedObservable = this,\n        state = computedObservable[computedState],\n        disposeWhen = state.disposeWhen;\n\n    if (state.isBeingEvaluated) {\n      // If the evaluation of a ko.computed causes side effects, it's possible that it will trigger its own re-evaluation.\n      // This is not desirable (it's hard for a developer to realise a chain of dependencies might cause this, and they almost\n      // certainly didn't intend infinite re-evaluations). So, for predictability, we simply prevent ko.computeds from causing\n      // their own re-evaluation. Further discussion at https://github.com/SteveSanderson/knockout/pull/387\n      return;\n    }\n\n    // Do not evaluate (and possibly capture new dependencies) if disposed\n    if (state.isDisposed) {\n      return;\n    }\n\n    // It just did return false, so we can stop suppressing now\n    state.suppressDisposalUntilDisposeWhenReturnsFalse = false;\n\n    state.isBeingEvaluated = true;\n    try {\n      this.evaluateImmediate_CallReadWithDependencyDetection(notifyChange);\n    } finally {\n      state.isBeingEvaluated = false;\n    }\n\n    if (!state.dependenciesCount) {\n      computedObservable.dispose();\n    }\n  },\n  evaluateImmediate_CallReadWithDependencyDetection: function evaluateImmediate_CallReadWithDependencyDetection(notifyChange) {\n    // This function is really just part of the evaluateImmediate logic. You would never call it from anywhere else.\n    // Factoring it out into a separate function means it can be independent of the try/catch block in evaluateImmediate,\n    // which contributes to saving about 40% off the CPU overhead of computed evaluation (on V8 at least).\n\n    var computedObservable = this,\n        state = computedObservable[computedState];\n\n    // Initially, we assume that none of the subscriptions are still being used (i.e., all are candidates for disposal).\n    // Then, during evaluation, we cross off any that are in fact still being used.\n    var isInitial = state.pure ? undefined : !state.dependenciesCount,\n        // If we're evaluating when there are no previous dependencies, it must be the first time\n    dependencyDetectionContext = {\n      computedObservable: computedObservable,\n      disposalCandidates: state.dependencyTracking,\n      disposalCount: state.dependenciesCount\n    };\n\n    _tkoObservable.dependencyDetection.begin({\n      callbackTarget: dependencyDetectionContext,\n      callback: computedBeginDependencyDetectionCallback,\n      computed: computedObservable,\n      isInitial: isInitial\n    });\n\n    state.dependencyTracking = {};\n    state.dependenciesCount = 0;\n\n    var newValue = this.evaluateImmediate_CallReadThenEndDependencyDetection(state, dependencyDetectionContext);\n\n    if (computedObservable.isDifferent(state.latestValue, newValue)) {\n      if (!state.isSleeping) {\n        computedObservable.notifySubscribers(state.latestValue, 'beforeChange');\n      }\n\n      state.latestValue = newValue;\n\n      if (state.isSleeping) {\n        computedObservable.updateVersion();\n      } else if (notifyChange) {\n        computedObservable.notifySubscribers(state.latestValue);\n      }\n    }\n\n    if (isInitial) {\n      computedObservable.notifySubscribers(state.latestValue, 'awake');\n    }\n  },\n  evaluateImmediate_CallReadThenEndDependencyDetection: function evaluateImmediate_CallReadThenEndDependencyDetection(state, dependencyDetectionContext) {\n    // This function is really part of the evaluateImmediate_CallReadWithDependencyDetection logic.\n    // You'd never call it from anywhere else. Factoring it out means that evaluateImmediate_CallReadWithDependencyDetection\n    // can be independent of try/finally blocks, which contributes to saving about 40% off the CPU\n    // overhead of computed evaluation (on V8 at least).\n\n    try {\n      var readFunction = state.readFunction;\n      return state.evaluatorFunctionTarget ? readFunction.call(state.evaluatorFunctionTarget) : readFunction();\n    } finally {\n      _tkoObservable.dependencyDetection.end();\n\n      // For each subscription no longer being used, remove it from the active subscriptions list and dispose it\n      if (dependencyDetectionContext.disposalCount && !state.isSleeping) {\n        (0, _tkoUtils.objectForEach)(dependencyDetectionContext.disposalCandidates, computedDisposeDependencyCallback);\n      }\n\n      state.isStale = false;\n    }\n  },\n  peek: function peek() {\n    // Peek won't re-evaluate, except while the computed is sleeping or to get the initial value when \"deferEvaluation\" is set.\n    var state = this[computedState];\n    if (state.isStale && !state.dependenciesCount || state.isSleeping && this.haveDependenciesChanged()) {\n      this.evaluateImmediate();\n    }\n    return state.latestValue;\n  },\n  limit: function limit(limitFunction) {\n    // Override the limit function with one that delays evaluation as well\n    _tkoObservable.subscribable.fn.limit.call(this, limitFunction);\n    this._evalDelayed = function () {\n      this._limitBeforeChange(this[computedState].latestValue);\n\n      this[computedState].isStale = true; // Mark as dirty\n\n      // Pass the observable to the \"limit\" code, which will access it when\n      // it's time to do the notification.\n      this._limitChange(this);\n    };\n  },\n  dispose: function dispose() {\n    var state = this[computedState];\n    if (!state.isSleeping && state.dependencyTracking) {\n      (0, _tkoUtils.objectForEach)(state.dependencyTracking, function (id, dependency) {\n        if (dependency.dispose) {\n          dependency.dispose();\n        }\n      });\n    }\n    state.dependencyTracking = null;\n    state.dependenciesCount = 0;\n    state.isDisposed = true;\n    state.isStale = false;\n    state.isSleeping = false;\n    state.readFunction = null;\n    if (_tkoUtils.options.debug) {\n      this._options = null;\n    }\n  }\n};\n\nvar pureComputedOverrides = {\n  beforeSubscriptionAdd: function beforeSubscriptionAdd(event) {\n    // If asleep, wake up the computed by subscribing to any dependencies.\n    var computedObservable = this,\n        state = computedObservable[computedState];\n    if (!state.isDisposed && state.isSleeping && event == 'change') {\n      state.isSleeping = false;\n      if (state.isStale || computedObservable.haveDependenciesChanged()) {\n        state.dependencyTracking = null;\n        state.dependenciesCount = 0;\n        state.isStale = true;\n        computedObservable.evaluateImmediate();\n      } else {\n        // First put the dependencies in order\n        var dependeciesOrder = [];\n        (0, _tkoUtils.objectForEach)(state.dependencyTracking, function (id, dependency) {\n          dependeciesOrder[dependency._order] = id;\n        });\n        // Next, subscribe to each one\n        (0, _tkoUtils.arrayForEach)(dependeciesOrder, function (id, order) {\n          var dependency = state.dependencyTracking[id],\n              subscription = computedObservable.subscribeToDependency(dependency._target);\n          subscription._order = order;\n          subscription._version = dependency._version;\n          state.dependencyTracking[id] = subscription;\n        });\n      }\n      if (!state.isDisposed) {\n        // test since evaluating could trigger disposal\n        computedObservable.notifySubscribers(state.latestValue, 'awake');\n      }\n    }\n  },\n  afterSubscriptionRemove: function afterSubscriptionRemove(event) {\n    var state = this[computedState];\n    if (!state.isDisposed && event == 'change' && !this.hasSubscriptionsForEvent('change')) {\n      (0, _tkoUtils.objectForEach)(state.dependencyTracking, function (id, dependency) {\n        if (dependency.dispose) {\n          state.dependencyTracking[id] = {\n            _target: dependency._target,\n            _order: dependency._order,\n            _version: dependency._version\n          };\n          dependency.dispose();\n        }\n      });\n      state.isSleeping = true;\n      this.notifySubscribers(undefined, 'asleep');\n    }\n  },\n  getVersion: function getVersion() {\n    // Because a pure computed is not automatically updated while it is sleeping, we can't\n    // simply return the version number. Instead, we check if any of the dependencies have\n    // changed and conditionally re-evaluate the computed observable.\n    var state = this[computedState];\n    if (state.isSleeping && (state.isStale || this.haveDependenciesChanged())) {\n      this.evaluateImmediate();\n    }\n    return _tkoObservable.subscribable.fn.getVersion.call(this);\n  }\n};\n\nvar deferEvaluationOverrides = {\n  beforeSubscriptionAdd: function beforeSubscriptionAdd(event) {\n    // This will force a computed with deferEvaluation to evaluate when the first subscription is registered.\n    if (event == 'change' || event == 'beforeChange') {\n      this.peek();\n    }\n  }\n};\n\n// Note that for browsers that don't support proto assignment, the\n// inheritance chain is created manually in the ko.computed constructor\nif (_tkoUtils.canSetPrototype) {\n  (0, _tkoUtils.setPrototypeOf)(computed.fn, _tkoObservable.subscribable.fn);\n}\n\n// Set the proto chain values for ko.hasPrototype\nvar protoProp = _tkoObservable.observable.protoProperty;\ncomputed[protoProp] = _tkoObservable.observable;\ncomputed.fn[protoProp] = computed;\n\nfunction isComputed(instance) {\n  return (0, _tkoUtils.hasPrototype)(instance, computed);\n}\n\nfunction isPureComputed(instance) {\n  return (0, _tkoUtils.hasPrototype)(instance, computed) && instance[computedState] && instance[computedState].pure;\n}\n\nfunction pureComputed(evaluatorFunctionOrOptions, evaluatorFunctionTarget) {\n  if (typeof evaluatorFunctionOrOptions === 'function') {\n    return computed(evaluatorFunctionOrOptions, evaluatorFunctionTarget, { 'pure': true });\n  } else {\n    evaluatorFunctionOrOptions = (0, _tkoUtils.extend)({}, evaluatorFunctionOrOptions); // make a copy of the parameter object\n    evaluatorFunctionOrOptions.pure = true;\n    return computed(evaluatorFunctionOrOptions, evaluatorFunctionTarget);\n  }\n}\n\nfunction throttleExtender(target, timeout) {\n  // Throttling means two things:\n\n  // (1) For dependent observables, we throttle *evaluations* so that, no matter how fast its dependencies\n  //     notify updates, the target doesn't re-evaluate (and hence doesn't notify) faster than a certain rate\n  target.throttleEvaluation = timeout;\n\n  // (2) For writable targets (observables, or writable dependent observables), we throttle *writes*\n  //     so the target cannot change value synchronously or faster than a certain rate\n  var writeTimeoutInstance = null;\n  return computed({\n    read: target,\n    write: function write(value) {\n      clearTimeout(writeTimeoutInstance);\n      writeTimeoutInstance = setTimeout(function () {\n        target(value);\n      }, timeout);\n    }\n  });\n}\n\n_tkoObservable.extenders.throttle = throttleExtender;\n\n//\n// tko.computed - Exports\n//\n// knockout -> tko changes:\n//      Deprecates `dependentObservable` (use `computed`)\n//\n\nexports.computed = computed;\nexports.isComputed = isComputed;\nexports.isPureComputed = isPureComputed;\nexports.pureComputed = pureComputed;\nexports.throttleExtender = throttleExtender;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///3\n");

/***/ }),
/* 4 */
/*!*************************************************************************!*\
  !*** c:/Users/pm/Downloads/react/js-framework-benchmark/ko6/src/ko6.js ***!
  \*************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.renderCtx = exports.componentLoaders = exports.registerComponent = exports.isPureComputed = exports.pureComputed = exports.computed = exports.observableArray = exports.observable = exports.templateParser = exports.main = undefined;\n\nvar _tkoObservable = __webpack_require__(/*! ./tko/tko.observable.js */ 0);\n\nvar _tkoComputed = __webpack_require__(/*! ./tko/tko.computed.js */ 3);\n\nvar _renderCtx = __webpack_require__(/*! ./renderCtx.js */ 1);\n\nvar _templateParser = __webpack_require__(/*! ./templateParser.js */ 6);\n\nvar _blockComponent = __webpack_require__(/*! ./blocks/blockComponent.js */ 5);\n\nvar _blockForeach = __webpack_require__(/*! ./blocks/blockForeach.js */ 13);\n\nvar _blockForeach2 = _interopRequireDefault(_blockForeach);\n\nvar _blockIf = __webpack_require__(/*! ./blocks/blockIf.js */ 14);\n\nvar _blockIf2 = _interopRequireDefault(_blockIf);\n\nvar _blockHtml = __webpack_require__(/*! ./blocks/blockHtml.js */ 15);\n\nvar _blockHtml2 = _interopRequireDefault(_blockHtml);\n\nvar _blockTemplate = __webpack_require__(/*! ./blocks/blockTemplate.js */ 16);\n\nvar _blockTemplate2 = _interopRequireDefault(_blockTemplate);\n\nvar _click = __webpack_require__(/*! ./bindings/click.js */ 17);\n\nvar _click2 = _interopRequireDefault(_click);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n_renderCtx.renderCtx.blocks['Component'] = _blockComponent.blockComponent;\n_renderCtx.renderCtx.blocks['Foreach'] = _blockForeach2.default;\n_renderCtx.renderCtx.blocks['If'] = _blockIf2.default;\n_renderCtx.renderCtx.blocks['Html'] = _blockHtml2.default;\n_renderCtx.renderCtx.blocks['Template'] = _blockTemplate2.default;\n\n_renderCtx.renderCtx.bindingHandlers['click'] = _click2.default;\n\nfunction main(parent, cname, params) {\n\n\tvar ctx2 = new _renderCtx.Ctx(null);\n\t(0, _blockComponent.registerComponent)(cname, null, function (modelFn, view) {\n\n\t\tvar model = params || {};\n\t\tif (modelFn) {\n\t\t\tmodel = new modelFn(model);\n\t\t}\n\t\tctx2.model = model;\n\t\tctx2.root = model;\n\t\tctx2.component = model;\n\t\t(0, _renderCtx.renderCtx)(parent, view, ctx2, 0);\n\t});\n\treturn ctx2;\n};\n\nexports.main = main;\nexports.templateParser = _templateParser.templateParser;\nexports.observable = _tkoObservable.observable;\nexports.observableArray = _tkoObservable.observableArray;\nexports.computed = _tkoComputed.computed;\nexports.pureComputed = _tkoComputed.pureComputed;\nexports.isPureComputed = _tkoComputed.isPureComputed;\nexports.registerComponent = _blockComponent.registerComponent;\nexports.componentLoaders = _blockComponent.componentLoaders;\nexports.renderCtx = _renderCtx.renderCtx;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9jOi9Vc2Vycy9wbS9Eb3dubG9hZHMvcmVhY3QvanMtZnJhbWV3b3JrLWJlbmNobWFyay9rbzYvc3JjL2tvNi5qcz84YmM3Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IG9ic2VydmFibGUsIG9ic2VydmFibGVBcnJheSB9IGZyb20gJy4vdGtvL3Rrby5vYnNlcnZhYmxlLmpzJztcclxuaW1wb3J0IHsgY29tcHV0ZWQsIGlzUHVyZUNvbXB1dGVkLCBwdXJlQ29tcHV0ZWQgfSAgZnJvbSAnLi90a28vdGtvLmNvbXB1dGVkLmpzJztcclxuaW1wb3J0IHsgcmVuZGVyQ3R4LCBDdHggfSAgZnJvbSAnLi9yZW5kZXJDdHguanMnO1xyXG5pbXBvcnQgeyB0ZW1wbGF0ZVBhcnNlciB9ICBmcm9tICcuL3RlbXBsYXRlUGFyc2VyLmpzJztcclxuXHJcbmltcG9ydCB7IGJsb2NrQ29tcG9uZW50LCByZWdpc3RlckNvbXBvbmVudCwgY29tcG9uZW50TG9hZGVycyB9ICBmcm9tICcuL2Jsb2Nrcy9ibG9ja0NvbXBvbmVudC5qcyc7XHJcbmltcG9ydCBibG9ja0ZvcmVhY2ggIGZyb20gJy4vYmxvY2tzL2Jsb2NrRm9yZWFjaC5qcyc7XHJcbmltcG9ydCBibG9ja0lmICBmcm9tICcuL2Jsb2Nrcy9ibG9ja0lmLmpzJztcclxuaW1wb3J0IGJsb2NrSHRtbCAgZnJvbSAnLi9ibG9ja3MvYmxvY2tIdG1sLmpzJztcclxuaW1wb3J0IGJsb2NrVGVtcGxhdGUgIGZyb20gJy4vYmxvY2tzL2Jsb2NrVGVtcGxhdGUuanMnO1xyXG5cclxuaW1wb3J0IGNsaWNrSGFuZGxlciAgZnJvbSAnLi9iaW5kaW5ncy9jbGljay5qcyc7XHJcblxyXG5yZW5kZXJDdHguYmxvY2tzWydDb21wb25lbnQnXSA9IGJsb2NrQ29tcG9uZW50O1xyXG5yZW5kZXJDdHguYmxvY2tzWydGb3JlYWNoJ10gPSBibG9ja0ZvcmVhY2g7XHJcbnJlbmRlckN0eC5ibG9ja3NbJ0lmJ10gPSBibG9ja0lmO1xyXG5yZW5kZXJDdHguYmxvY2tzWydIdG1sJ10gPSBibG9ja0h0bWw7XHJcbnJlbmRlckN0eC5ibG9ja3NbJ1RlbXBsYXRlJ10gPSBibG9ja1RlbXBsYXRlO1xyXG5cclxucmVuZGVyQ3R4LmJpbmRpbmdIYW5kbGVyc1snY2xpY2snXSA9IGNsaWNrSGFuZGxlcjtcclxuXHJcbmZ1bmN0aW9uIG1haW4ocGFyZW50LCBjbmFtZSwgcGFyYW1zKXtcclxuXHJcblx0dmFyIGN0eDIgPSBuZXcgQ3R4KG51bGwpO1xyXG5cdHJlZ2lzdGVyQ29tcG9uZW50KGNuYW1lLCBudWxsLCBmdW5jdGlvbihtb2RlbEZuLCB2aWV3KXtcclxuXHJcblx0XHRsZXQgbW9kZWwgPSBwYXJhbXMgfHwge307XHJcblx0XHRpZihtb2RlbEZuKXtcclxuXHRcdFx0bW9kZWwgPSBuZXcgbW9kZWxGbihtb2RlbCk7XHJcblx0XHR9XHJcblx0XHRjdHgyLm1vZGVsID0gbW9kZWw7XHJcblx0XHRjdHgyLnJvb3QgPSBtb2RlbDtcclxuXHRcdGN0eDIuY29tcG9uZW50ID0gbW9kZWw7XHJcblx0XHRyZW5kZXJDdHgocGFyZW50LCB2aWV3LCBjdHgyLCAwKTtcclxuXHR9KTtcclxuXHRyZXR1cm4gY3R4MjtcclxufTtcclxuXHJcbmV4cG9ydCB7XHJcblx0bWFpbixcclxuXHR0ZW1wbGF0ZVBhcnNlcixcclxuXHRvYnNlcnZhYmxlLFx0b2JzZXJ2YWJsZUFycmF5LFxyXG5cdGNvbXB1dGVkLCBwdXJlQ29tcHV0ZWQsIGlzUHVyZUNvbXB1dGVkLFxyXG5cdHJlZ2lzdGVyQ29tcG9uZW50LCBjb21wb25lbnRMb2FkZXJzLFxyXG5cdHJlbmRlckN0eFxyXG59O1xuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyBjOi9Vc2Vycy9wbS9Eb3dubG9hZHMvcmVhY3QvanMtZnJhbWV3b3JrLWJlbmNobWFyay9rbzYvc3JjL2tvNi5qcyJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBQ0E7QUFBQTtBQUNBO0FBQUE7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTs7O0FBQUE7QUFDQTs7O0FBQUE7QUFDQTs7O0FBQUE7QUFDQTs7O0FBQ0E7QUFDQTs7Ozs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFBQTtBQUFBO0FBQ0E7QUFBQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///4\n");

/***/ }),
/* 5 */
/*!*******************************************************************************************!*\
  !*** c:/Users/pm/Downloads/react/js-framework-benchmark/ko6/src/blocks/blockComponent.js ***!
  \*******************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.componentLoaders = undefined;\nexports.blockComponent = blockComponent;\nexports.registerComponent = registerComponent;\n\nvar _tkoObservable = __webpack_require__(/*! ../tko/tko.observable.js */ 0);\n\nvar _tkoComputed = __webpack_require__(/*! ../tko/tko.computed.js */ 3);\n\nvar _renderCtx = __webpack_require__(/*! ../renderCtx.js */ 1);\n\nvar _templateParser = __webpack_require__(/*! ../templateParser.js */ 6);\n\nfunction blockComponent(stamp, tpl, ctx0, level) {\n\n\tif (tpl.children && tpl.children.length > 0 && tpl.attrs && tpl.attrs['_name']) {\n\n\t\tvar _name = tpl.attrs['_name'];\n\t\tvar val2 = (0, _tkoObservable.unwrap)(ctx0.expr(_name));\n\n\t\tif (val2 == ctx0.cname) return;\n\t\tctx0.cname = val2;\n\n\t\tctx0.dispose();\n\n\t\t_tkoObservable.dependencyDetection.ignore(function () {\n\n\t\t\tvar callback = function callback(modelFn, view) {\n\t\t\t\tvar model = {};\n\t\t\t\tfor (var name in tpl.attrs) {\n\t\t\t\t\tif (tpl.attrs.hasOwnProperty(name)) model[name] = ctx0.expr(tpl.attrs[name]);\n\t\t\t\t}if (modelFn) {\n\t\t\t\t\tmodel = new modelFn(model);\n\t\t\t\t}\n\t\t\t\tctx0.model = model;\n\t\t\t\tctx0.compoent = model;\n\t\t\t\tctx0.subscribers.push(model);\n\t\t\t\t(0, _renderCtx.renderCtx)(stamp, view, ctx0, 0);\n\t\t\t};\n\n\t\t\t_renderCtx.renderCtx.registerComponent(val2, null, callback);\n\t\t});\n\t}\n}\n\nvar componentLoaders = exports.componentLoaders = [];\n\nfunction registerComponent(name, def0, callback) {\n\n\tvar def = registerComponent.componentMap[name];\n\tconsole.log('registerComponent ' + name, def0, def);\n\n\t//undefined component, undefined definition, create empty definition\n\tif (!def && !def0) {\n\t\tdef0 = { name: name, empty: true };\n\t}\n\n\t//merge definition\n\tif (def && def0) {\n\t\tfor (var _name2 in def0) {\n\t\t\tif (def0.hasOwnProperty(_name2)) def[_name2] = def0[_name2];\n\t\t}if (def.asynchModel && def.model) delete def.asynchModel;\n\t\tif (def.asynchTemplate && def.template) delete def.asynchTemplate;\n\t}\n\n\t//create new definition\n\tif (!def && def0) {\n\t\tdef = def0;\n\t\tdef.name = name;\n\t\tregisterComponent.componentMap[name] = def;\n\t}\n\n\t//error, no continue\n\tif (def.error) {\n\t\tconsole.log('registerComponent ' + name + ' exists error ' + def.error);\n\t\treturn;\n\t}\n\n\t//definition was changed - run all loaders\n\tif (def0) {\n\t\tfor (var i = 0, max = componentLoaders.length; i < max; i++) {\n\t\t\tcomponentLoaders[i](def);\n\t\t}\n\t}\n\n\t//check if is running loading model or template\n\tif (def.asynchModel || def.asynchTemplate) {\n\t\tif (callback) {\n\t\t\tconsole.log('registerComponent ' + name + ' loading', def.asynchModel, def.asynchTemplate);\n\t\t\tif (!def.waitingCallbacks) def.waitingCallbacks = [];\n\t\t\tdef.waitingCallbacks.push(callback);\n\t\t}\n\t\treturn;\n\t}\n\n\tif (def.template) {\n\n\t\t//compile template\n\t\tif (typeof def.template == 'string') {\n\t\t\tdef.template = (0, _templateParser.templateParser)(def.template);\n\t\t}\n\n\t\t//render waiting callbacks\n\t\tif (def.waitingCallbacks) {\n\t\t\tfor (var _i = 0, _max = def.waitingCallbacks.length; _i < _max; _i++) {\n\t\t\t\tdef.waitingCallbacks[_i](def.model, def.template);\n\t\t\t}delete def.waitingCallbacks;\n\t\t}\n\n\t\t//render callback\n\t\tif (callback) callback(def.model, def.template);\n\t\treturn;\n\t}\n\n\t//no loading, no template, create error\n\tdef.error = 'undefined template';\n\tconsole.log('registerComponent ' + name + ' error ' + def.error);\n}\nregisterComponent.componentMap = {};\n\nfunction templateAjaxLoader(def) {\n\t//no template, no loading, and defined templateUrl\n\tif (!def.template && !def.asynchTemplate && def.templateUrl) {\n\n\t\t//make note but template is loading with templateAjaxLoader\n\t\tdef.asynchTemplate = 'templateAjaxLoader ' + def.templateUrl;\n\n\t\t//send ajax GET request\n\t\tvar xhr = new XMLHttpRequest();\n\t\txhr.open('GET', def.templateUrl);\n\t\txhr.onload = function () {\n\t\t\tvar def2 = xhr.status == 200 ? { template: xhr.responseText } : { error: 'templateAjaxLoader state=' + xhr.state };\n\t\t\tregisterComponent(def.name, def2);\n\t\t};\n\t\txhr.send();\n\t}\n}\ncomponentLoaders.push(templateAjaxLoader);\n\nfunction jsloader(def) {\n\tif (!def.model && !def.asynchModel && def.jsmodule) {\n\n\t\tdef.asynchModel = \"jsloader \" + def.jsmodule;\n\t\tvar script = document.createElement('script');\n\t\tscript.src = def.jsmodule;\n\t\tscript.type = \"text/javascript\";\n\t\tdocument.head.appendChild(script);\n\t}\n}\ncomponentLoaders.push(jsloader);\n\nfunction es6loader(def) {\n\tif (!def.model && !def.asynchModel && def.es6module) {\n\n\t\tdef.asynchModel = \"es6loader \" + def.es6module;\n\t\tvar script = document.createElement('script');\n\t\tscript.src = def.es6module;\n\t\tscript.type = \"module\";\n\t\tdocument.head.appendChild(script);\n\t}\n}\ncomponentLoaders.push(es6loader);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9jOi9Vc2Vycy9wbS9Eb3dubG9hZHMvcmVhY3QvanMtZnJhbWV3b3JrLWJlbmNobWFyay9rbzYvc3JjL2Jsb2Nrcy9ibG9ja0NvbXBvbmVudC5qcz9mMjRlIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHVud3JhcCwgZGVwZW5kZW5jeURldGVjdGlvbiB9ICBmcm9tICcuLi90a28vdGtvLm9ic2VydmFibGUuanMnO1xyXG5pbXBvcnQgeyBjb21wdXRlZCB9ICBmcm9tICcuLi90a28vdGtvLmNvbXB1dGVkLmpzJztcclxuaW1wb3J0IHsgcmVuZGVyQ3R4IH0gIGZyb20gJy4uL3JlbmRlckN0eC5qcyc7XHJcbmltcG9ydCB7IHRlbXBsYXRlUGFyc2VyIH0gIGZyb20gJy4uL3RlbXBsYXRlUGFyc2VyLmpzJztcclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBibG9ja0NvbXBvbmVudChzdGFtcCwgdHBsLCBjdHgwLCBsZXZlbCl7XHJcblxyXG5cdGlmKHRwbC5jaGlsZHJlbiAmJiB0cGwuY2hpbGRyZW4ubGVuZ3RoPjAgJiYgdHBsLmF0dHJzICYmIHRwbC5hdHRyc1snX25hbWUnXSl7XHJcblx0XHRcclxuXHRcdHZhciBfbmFtZSA9IHRwbC5hdHRyc1snX25hbWUnXTtcclxuXHRcdHZhciB2YWwyID0gdW53cmFwKGN0eDAuZXhwcihfbmFtZSkpO1xyXG5cclxuXHRcdGlmKHZhbDI9PWN0eDAuY25hbWUpIHJldHVybjtcclxuXHRcdGN0eDAuY25hbWUgPSB2YWwyO1xyXG5cclxuXHRcdGN0eDAuZGlzcG9zZSgpO1xyXG5cclxuXHRcdGRlcGVuZGVuY3lEZXRlY3Rpb24uaWdub3JlKGZ1bmN0aW9uKCl7XHJcblxyXG5cdFx0XHRjb25zdCBjYWxsYmFjayA9IGZ1bmN0aW9uKG1vZGVsRm4sIHZpZXcpIHtcclxuXHRcdFx0XHRsZXQgbW9kZWwgPSB7fTtcclxuXHRcdFx0XHRmb3IgKGxldCBuYW1lIGluIHRwbC5hdHRycykgaWYgKHRwbC5hdHRycy5oYXNPd25Qcm9wZXJ0eShuYW1lKSkgbW9kZWxbbmFtZV0gPSBjdHgwLmV4cHIodHBsLmF0dHJzW25hbWVdKTtcclxuXHRcdFx0XHRpZihtb2RlbEZuKXtcclxuXHRcdFx0XHRcdG1vZGVsID0gbmV3IG1vZGVsRm4obW9kZWwpO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0XHRjdHgwLm1vZGVsID0gbW9kZWw7XHJcblx0XHRcdFx0Y3R4MC5jb21wb2VudCA9IG1vZGVsO1xyXG5cdFx0XHRcdGN0eDAuc3Vic2NyaWJlcnMucHVzaChtb2RlbCk7XHJcblx0XHRcdFx0cmVuZGVyQ3R4KHN0YW1wLCB2aWV3LCBjdHgwLCAwKTtcclxuXHRcdFx0fTtcclxuXHJcblx0XHRcdHJlbmRlckN0eC5yZWdpc3RlckNvbXBvbmVudCh2YWwyLCBudWxsLCBjYWxsYmFjayk7XHJcblxyXG5cdFx0fSk7XHJcblxyXG5cclxuXHR9XHJcblxyXG59XHJcblxyXG5leHBvcnQgdmFyIGNvbXBvbmVudExvYWRlcnMgPSBbXTtcclxuXHJcbmV4cG9ydCBmdW5jdGlvbiByZWdpc3RlckNvbXBvbmVudChuYW1lLCBkZWYwLCBjYWxsYmFjayl7XHJcblxyXG5cdGxldCBkZWYgPSByZWdpc3RlckNvbXBvbmVudC5jb21wb25lbnRNYXBbbmFtZV07XHJcblx0Y29uc29sZS5sb2coJ3JlZ2lzdGVyQ29tcG9uZW50ICcgKyBuYW1lLCBkZWYwLCBkZWYpO1xyXG5cdFxyXG5cdC8vdW5kZWZpbmVkIGNvbXBvbmVudCwgdW5kZWZpbmVkIGRlZmluaXRpb24sIGNyZWF0ZSBlbXB0eSBkZWZpbml0aW9uXHJcblx0aWYoIWRlZiAmJiAhZGVmMCl7XHJcblx0XHRkZWYwID0geyBuYW1lOm5hbWUsIGVtcHR5OnRydWUgfTtcclxuXHR9XHJcblxyXG5cdC8vbWVyZ2UgZGVmaW5pdGlvblxyXG5cdGlmKGRlZiAmJiBkZWYwKXtcclxuXHRcdGZvciAobGV0IG5hbWUgaW4gZGVmMCkgaWYgKGRlZjAuaGFzT3duUHJvcGVydHkobmFtZSkpIGRlZltuYW1lXSA9IGRlZjBbbmFtZV07XHJcblx0XHRpZihkZWYuYXN5bmNoTW9kZWwgJiYgZGVmLm1vZGVsKSBkZWxldGUgZGVmLmFzeW5jaE1vZGVsO1xyXG5cdFx0aWYoZGVmLmFzeW5jaFRlbXBsYXRlICYmIGRlZi50ZW1wbGF0ZSkgZGVsZXRlIGRlZi5hc3luY2hUZW1wbGF0ZTtcclxuXHR9XHJcblxyXG5cdC8vY3JlYXRlIG5ldyBkZWZpbml0aW9uXHJcblx0aWYoIWRlZiAmJiBkZWYwKXtcclxuXHRcdGRlZiA9IGRlZjA7XHJcblx0XHRkZWYubmFtZSA9IG5hbWU7XHJcblx0XHRyZWdpc3RlckNvbXBvbmVudC5jb21wb25lbnRNYXBbbmFtZV0gPSBkZWY7XHJcblx0fVxyXG5cclxuXHQvL2Vycm9yLCBubyBjb250aW51ZVxyXG5cdGlmKGRlZi5lcnJvcil7XHJcblx0XHRjb25zb2xlLmxvZygncmVnaXN0ZXJDb21wb25lbnQgJyArIG5hbWUgKyAnIGV4aXN0cyBlcnJvciAnICsgZGVmLmVycm9yKTtcclxuXHRcdHJldHVybjtcclxuXHR9XHJcblxyXG5cdC8vZGVmaW5pdGlvbiB3YXMgY2hhbmdlZCAtIHJ1biBhbGwgbG9hZGVyc1xyXG5cdGlmKGRlZjApe1xyXG5cdFx0Zm9yKGxldCBpPTAsIG1heD1jb21wb25lbnRMb2FkZXJzLmxlbmd0aDsgaTxtYXg7IGkrKykgY29tcG9uZW50TG9hZGVyc1tpXShkZWYpO1xyXG5cdH1cclxuXHJcblx0Ly9jaGVjayBpZiBpcyBydW5uaW5nIGxvYWRpbmcgbW9kZWwgb3IgdGVtcGxhdGVcclxuXHRpZihkZWYuYXN5bmNoTW9kZWwgfHwgZGVmLmFzeW5jaFRlbXBsYXRlKSB7XHJcblx0XHRpZihjYWxsYmFjayl7XHJcblx0XHRcdGNvbnNvbGUubG9nKCdyZWdpc3RlckNvbXBvbmVudCAnICsgbmFtZSsnIGxvYWRpbmcnLCBkZWYuYXN5bmNoTW9kZWwsIGRlZi5hc3luY2hUZW1wbGF0ZSk7XHJcblx0XHRcdGlmKCFkZWYud2FpdGluZ0NhbGxiYWNrcykgZGVmLndhaXRpbmdDYWxsYmFja3MgPSBbXTtcclxuXHRcdFx0ZGVmLndhaXRpbmdDYWxsYmFja3MucHVzaChjYWxsYmFjayk7XHJcblx0XHR9XHJcblx0XHRyZXR1cm47XHJcblx0fVxyXG5cclxuXHRpZihkZWYudGVtcGxhdGUpe1xyXG5cdFx0XHJcblx0XHQvL2NvbXBpbGUgdGVtcGxhdGVcclxuXHRcdGlmKHR5cGVvZiBkZWYudGVtcGxhdGUgPT0gJ3N0cmluZycpe1xyXG5cdFx0XHRkZWYudGVtcGxhdGUgPSB0ZW1wbGF0ZVBhcnNlcihkZWYudGVtcGxhdGUpO1xyXG5cdFx0fVxyXG5cdFx0XHJcblx0XHQvL3JlbmRlciB3YWl0aW5nIGNhbGxiYWNrc1xyXG5cdFx0aWYoZGVmLndhaXRpbmdDYWxsYmFja3MpIHtcclxuXHRcdFx0Zm9yKGxldCBpPTAsIG1heD1kZWYud2FpdGluZ0NhbGxiYWNrcy5sZW5ndGg7IGk8bWF4OyBpKyspIGRlZi53YWl0aW5nQ2FsbGJhY2tzW2ldKGRlZi5tb2RlbCwgZGVmLnRlbXBsYXRlKTtcclxuXHRcdFx0ZGVsZXRlIGRlZi53YWl0aW5nQ2FsbGJhY2tzO1xyXG5cdFx0fSBcclxuXHJcblx0XHQvL3JlbmRlciBjYWxsYmFja1xyXG5cdFx0aWYoY2FsbGJhY2spIGNhbGxiYWNrKGRlZi5tb2RlbCwgZGVmLnRlbXBsYXRlKTtcclxuXHRcdHJldHVybjtcclxuXHR9XHJcblxyXG5cdC8vbm8gbG9hZGluZywgbm8gdGVtcGxhdGUsIGNyZWF0ZSBlcnJvclxyXG5cdGRlZi5lcnJvciA9ICd1bmRlZmluZWQgdGVtcGxhdGUnO1xyXG5cdGNvbnNvbGUubG9nKCdyZWdpc3RlckNvbXBvbmVudCAnICsgbmFtZSArICcgZXJyb3IgJyArIGRlZi5lcnJvcik7XHJcbn1cclxucmVnaXN0ZXJDb21wb25lbnQuY29tcG9uZW50TWFwID0ge307XHJcblxyXG5mdW5jdGlvbiB0ZW1wbGF0ZUFqYXhMb2FkZXIoZGVmKXtcclxuXHQvL25vIHRlbXBsYXRlLCBubyBsb2FkaW5nLCBhbmQgZGVmaW5lZCB0ZW1wbGF0ZVVybFxyXG5cdGlmKCFkZWYudGVtcGxhdGUgJiYgIWRlZi5hc3luY2hUZW1wbGF0ZSAmJiBkZWYudGVtcGxhdGVVcmwpe1xyXG5cclxuXHRcdC8vbWFrZSBub3RlIGJ1dCB0ZW1wbGF0ZSBpcyBsb2FkaW5nIHdpdGggdGVtcGxhdGVBamF4TG9hZGVyXHJcblx0XHRkZWYuYXN5bmNoVGVtcGxhdGUgPSAndGVtcGxhdGVBamF4TG9hZGVyICcgKyBkZWYudGVtcGxhdGVVcmw7XHJcblxyXG5cdFx0Ly9zZW5kIGFqYXggR0VUIHJlcXVlc3RcclxuXHRcdHZhciB4aHIgPSBuZXcgWE1MSHR0cFJlcXVlc3QoKTtcclxuXHRcdHhoci5vcGVuKCdHRVQnLCBkZWYudGVtcGxhdGVVcmwpO1xyXG5cdFx0eGhyLm9ubG9hZCA9IGZ1bmN0aW9uKCl7XHJcblx0XHRcdGxldCBkZWYyID0gKHhoci5zdGF0dXM9PTIwMCkgPyB7IHRlbXBsYXRlIDogeGhyLnJlc3BvbnNlVGV4dCB9IDogeyBlcnJvciA6ICd0ZW1wbGF0ZUFqYXhMb2FkZXIgc3RhdGU9JyArIHhoci5zdGF0ZSB9O1xyXG5cdFx0XHRyZWdpc3RlckNvbXBvbmVudChkZWYubmFtZSwgZGVmMik7XHJcblx0XHR9O1xyXG5cdFx0eGhyLnNlbmQoKTtcclxuXHR9XHJcbn1cclxuY29tcG9uZW50TG9hZGVycy5wdXNoKHRlbXBsYXRlQWpheExvYWRlcik7XHJcblxyXG5mdW5jdGlvbiBqc2xvYWRlcihkZWYpe1xyXG5cdGlmICghZGVmLm1vZGVsICYmICFkZWYuYXN5bmNoTW9kZWwgJiYgZGVmLmpzbW9kdWxlKSB7XHJcblxyXG5cdFx0ZGVmLmFzeW5jaE1vZGVsID0gXCJqc2xvYWRlciBcIitkZWYuanNtb2R1bGU7XHJcblx0XHRjb25zdCBzY3JpcHQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzY3JpcHQnKTtcclxuXHRcdHNjcmlwdC5zcmMgPSBkZWYuanNtb2R1bGU7XHJcblx0XHRzY3JpcHQudHlwZSA9IFwidGV4dC9qYXZhc2NyaXB0XCI7XHJcblx0XHRkb2N1bWVudC5oZWFkLmFwcGVuZENoaWxkKHNjcmlwdCk7XHJcblx0fVxyXG59XHJcbmNvbXBvbmVudExvYWRlcnMucHVzaChqc2xvYWRlcik7XHJcblxyXG5mdW5jdGlvbiBlczZsb2FkZXIoZGVmKXtcclxuXHRpZiAoIWRlZi5tb2RlbCAmJiAhZGVmLmFzeW5jaE1vZGVsICYmIGRlZi5lczZtb2R1bGUpIHtcclxuXHJcblx0XHRkZWYuYXN5bmNoTW9kZWwgPSBcImVzNmxvYWRlciBcIitkZWYuZXM2bW9kdWxlO1xyXG5cdFx0Y29uc3Qgc2NyaXB0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc2NyaXB0Jyk7XHJcblx0XHRzY3JpcHQuc3JjID0gZGVmLmVzNm1vZHVsZTtcclxuXHRcdHNjcmlwdC50eXBlID0gXCJtb2R1bGVcIjtcclxuXHRcdGRvY3VtZW50LmhlYWQuYXBwZW5kQ2hpbGQoc2NyaXB0KTtcclxuXHR9XHJcbn1cclxuY29tcG9uZW50TG9hZGVycy5wdXNoKGVzNmxvYWRlcik7XHJcblxyXG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gYzovVXNlcnMvcG0vRG93bmxvYWRzL3JlYWN0L2pzLWZyYW1ld29yay1iZW5jaG1hcmsva282L3NyYy9ibG9ja3MvYmxvY2tDb21wb25lbnQuanMiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUtBO0FBcUNBO0FBQ0E7QUEzQ0E7QUFDQTtBQUFBO0FBQ0E7QUFBQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFHQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///5\n");

/***/ }),
/* 6 */
/*!************************************************************************************!*\
  !*** c:/Users/pm/Downloads/react/js-framework-benchmark/ko6/src/templateParser.js ***!
  \************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.parseDefaults = undefined;\nexports.templateParser = templateParser;\n\nvar _lexer = __webpack_require__(/*! ./himalaya/lexer.js */ 10);\n\nvar _lexer2 = _interopRequireDefault(_lexer);\n\nvar _parser = __webpack_require__(/*! ./himalaya/parser.js */ 11);\n\nvar _parser2 = _interopRequireDefault(_parser);\n\nvar _tags = __webpack_require__(/*! ./himalaya/tags.js */ 12);\n\nvar _compat = __webpack_require__(/*! ./himalaya/compat.js */ 7);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar parseDefaults = exports.parseDefaults = {\n  voidTags: _tags.voidTags,\n  closingTags: _tags.closingTags,\n  childlessTags: _tags.childlessTags,\n  closingTagAncestorBreakers: _tags.closingTagAncestorBreakers\n};\n\nfunction templateParser(str) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : parseDefaults;\n\n  var startTime = performance.now();\n\n  var tokens = (0, _lexer2.default)(str, options);\n  var nodes = (0, _parser2.default)(tokens, options);\n  var map = format(nodes, options);\n\n  var finishTime = performance.now();\n  console.log('parserko6', finishTime - startTime);\n  return map;\n}\n\nfunction format(nodes) {\n  var arr = [];\n  nodes.forEach(function (node) {\n    var type = node.type;\n    if (type === 'element') {\n      var tag = node.tagName;\n      var attrs = formatAttributes(node.attributes);\n      var children = format(node.children);\n\n      var obj = { tag: tag };\n      if (attrs && Object.keys(attrs).length > 0) {\n        obj.attrs = attrs;\n      }\n      if (children && children.length > 0) {\n        obj.children = children;\n      }\n      arr.push(obj);\n    }\n    if (!isEmptyOrSpaces(node.content)) {\n      arr.push(parseJsExression(node.content));\n    }\n  });\n  return arr;\n}\n\nfunction formatAttributes(attributes) {\n  var attrs = {};\n  attributes.forEach(function (attribute) {\n    var parts = splitHead(attribute.trim(), '=');\n    var key = parts[0];\n    var value = typeof parts[1] === 'string' ? unquote(parts[1]) : null;\n    attrs[key] = parseJsExression(value);\n  });\n  return attrs;\n}\n\nfunction splitHead(str, sep) {\n  var idx = str.indexOf(sep);\n  if (idx === -1) return [str];\n  return [str.slice(0, idx), str.slice(idx + sep.length)];\n}\n\nfunction unquote(str) {\n  var car = str.charAt(0);\n  var end = str.length - 1;\n  var isQuoteStart = car === '\"' || car === \"'\";\n  if (isQuoteStart && car === str.charAt(end)) {\n    return str.slice(1, end);\n  }\n  return str;\n}\n\nfunction parseJsExression(s) {\n  if (s && (0, _compat.startsWith)(s, '{') && (0, _compat.endsWith)(s, '}')) {\n    s = s.slice(1, s.length - 1);\n    return new Function('m', 'ctx', 'return ' + s);\n  }\n  return s;\n}\n\nfunction isEmptyOrSpaces(str) {\n  return !str || !str.match || str.match(/^\\s*$/) !== null;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNi5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9jOi9Vc2Vycy9wbS9Eb3dubG9hZHMvcmVhY3QvanMtZnJhbWV3b3JrLWJlbmNobWFyay9rbzYvc3JjL3RlbXBsYXRlUGFyc2VyLmpzPzlmMGEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGxleGVyIGZyb20gJy4vaGltYWxheWEvbGV4ZXIuanMnXHJcbmltcG9ydCBwYXJzZXIgZnJvbSAnLi9oaW1hbGF5YS9wYXJzZXIuanMnXHJcbmltcG9ydCB7XHJcbiAgdm9pZFRhZ3MsXHJcbiAgY2xvc2luZ1RhZ3MsXHJcbiAgY2hpbGRsZXNzVGFncyxcclxuICBjbG9zaW5nVGFnQW5jZXN0b3JCcmVha2Vyc1xyXG59IGZyb20gJy4vaGltYWxheWEvdGFncy5qcydcclxuXHJcbmltcG9ydCB7XHJcbiAgc3RhcnRzV2l0aCxcclxuICBlbmRzV2l0aFxyXG59IGZyb20gJy4vaGltYWxheWEvY29tcGF0LmpzJ1xyXG5cclxuXHJcbmV4cG9ydCBjb25zdCBwYXJzZURlZmF1bHRzID0ge1xyXG4gIHZvaWRUYWdzLFxyXG4gIGNsb3NpbmdUYWdzLFxyXG4gIGNoaWxkbGVzc1RhZ3MsXHJcbiAgY2xvc2luZ1RhZ0FuY2VzdG9yQnJlYWtlcnNcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIHRlbXBsYXRlUGFyc2VyIChzdHIsIG9wdGlvbnMgPSBwYXJzZURlZmF1bHRzKSB7XHJcbiAgY29uc3Qgc3RhcnRUaW1lID0gcGVyZm9ybWFuY2Uubm93KCk7XHJcblxyXG4gIGNvbnN0IHRva2VucyA9IGxleGVyKHN0ciwgb3B0aW9ucylcclxuICBjb25zdCBub2RlcyA9IHBhcnNlcih0b2tlbnMsIG9wdGlvbnMpXHJcbiAgY29uc3QgbWFwID0gZm9ybWF0KG5vZGVzLCBvcHRpb25zKVxyXG5cclxuICBjb25zdCBmaW5pc2hUaW1lID0gcGVyZm9ybWFuY2Uubm93KCk7XHJcbiAgY29uc29sZS5sb2coJ3BhcnNlcmtvNicsIChmaW5pc2hUaW1lLXN0YXJ0VGltZSkpO1xyXG4gIHJldHVybiBtYXA7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGZvcm1hdCAobm9kZXMpIHtcclxuICB2YXIgYXJyID0gW107XHJcbiAgbm9kZXMuZm9yRWFjaChub2RlID0+IHtcclxuICAgIGNvbnN0IHR5cGUgPSBub2RlLnR5cGVcclxuICAgIGlmICh0eXBlID09PSAnZWxlbWVudCcpIHtcclxuICAgICAgY29uc3QgdGFnID0gbm9kZS50YWdOYW1lO1xyXG4gICAgICBjb25zdCBhdHRycyA9IGZvcm1hdEF0dHJpYnV0ZXMobm9kZS5hdHRyaWJ1dGVzKVxyXG4gICAgICBjb25zdCBjaGlsZHJlbiA9IGZvcm1hdChub2RlLmNoaWxkcmVuKVxyXG5cclxuICAgICAgY29uc3Qgb2JqID0ge3RhZ31cclxuICAgICAgaWYoYXR0cnMgJiYgT2JqZWN0LmtleXMoYXR0cnMpLmxlbmd0aD4wKXtcclxuICAgICAgICBvYmouYXR0cnMgPSBhdHRycztcclxuICAgICAgfVxyXG4gICAgICBpZihjaGlsZHJlbiAmJiBjaGlsZHJlbi5sZW5ndGg+MCl7XHJcbiAgICAgICAgb2JqLmNoaWxkcmVuID0gY2hpbGRyZW47XHJcbiAgICAgIH1cclxuICAgICAgYXJyLnB1c2gob2JqKVxyXG4gICAgfVxyXG4gICAgaWYoIWlzRW1wdHlPclNwYWNlcyhub2RlLmNvbnRlbnQpKXtcclxuICAgICAgYXJyLnB1c2gocGFyc2VKc0V4cmVzc2lvbihub2RlLmNvbnRlbnQpKVxyXG4gICAgfVxyXG4gIH0pXHJcbiAgcmV0dXJuIGFycjtcclxufVxyXG5cclxuZnVuY3Rpb24gZm9ybWF0QXR0cmlidXRlcyAoYXR0cmlidXRlcykge1xyXG4gIHZhciBhdHRycyA9IHt9XHJcbiAgYXR0cmlidXRlcy5mb3JFYWNoKGF0dHJpYnV0ZSA9PiB7XHJcbiAgICBjb25zdCBwYXJ0cyA9IHNwbGl0SGVhZChhdHRyaWJ1dGUudHJpbSgpLCAnPScpXHJcbiAgICBjb25zdCBrZXkgPSBwYXJ0c1swXVxyXG4gICAgY29uc3QgdmFsdWUgPSB0eXBlb2YgcGFydHNbMV0gPT09ICdzdHJpbmcnXHJcbiAgICAgID8gdW5xdW90ZShwYXJ0c1sxXSlcclxuICAgICAgOiBudWxsXHJcbiAgICBhdHRyc1trZXldID0gcGFyc2VKc0V4cmVzc2lvbih2YWx1ZSk7XHJcbiAgfSlcclxuICByZXR1cm4gYXR0cnNcclxufSBcclxuXHJcbmZ1bmN0aW9uIHNwbGl0SGVhZCAoc3RyLCBzZXApIHtcclxuICBjb25zdCBpZHggPSBzdHIuaW5kZXhPZihzZXApXHJcbiAgaWYgKGlkeCA9PT0gLTEpIHJldHVybiBbc3RyXVxyXG4gIHJldHVybiBbc3RyLnNsaWNlKDAsIGlkeCksIHN0ci5zbGljZShpZHggKyBzZXAubGVuZ3RoKV1cclxufVxyXG5cclxuZnVuY3Rpb24gdW5xdW90ZSAoc3RyKSB7XHJcbiAgY29uc3QgY2FyID0gc3RyLmNoYXJBdCgwKVxyXG4gIGNvbnN0IGVuZCA9IHN0ci5sZW5ndGggLSAxXHJcbiAgY29uc3QgaXNRdW90ZVN0YXJ0ID0gY2FyID09PSAnXCInIHx8IGNhciA9PT0gXCInXCJcclxuICBpZiAoaXNRdW90ZVN0YXJ0ICYmIGNhciA9PT0gc3RyLmNoYXJBdChlbmQpKSB7XHJcbiAgICByZXR1cm4gc3RyLnNsaWNlKDEsIGVuZClcclxuICB9XHJcbiAgcmV0dXJuIHN0clxyXG59XHJcblxyXG5mdW5jdGlvbiBwYXJzZUpzRXhyZXNzaW9uKHMpe1xyXG4gICAgICBpZihzICYmIHN0YXJ0c1dpdGgocywgJ3snKSAmJiBlbmRzV2l0aChzLCAnfScpKXtcclxuICAgICAgICBzID0gcy5zbGljZSgxLCBzLmxlbmd0aC0xKTtcclxuICAgICAgICByZXR1cm4gbmV3IEZ1bmN0aW9uKCdtJywgJ2N0eCcsICdyZXR1cm4gJytzKTtcclxuICAgICAgfVxyXG4gICAgICByZXR1cm4gcztcclxufVxyXG5cclxuZnVuY3Rpb24gaXNFbXB0eU9yU3BhY2VzKHN0cil7XHJcbiAgICByZXR1cm4gIXN0ciB8fCAhc3RyLm1hdGNoIHx8IHN0ci5tYXRjaCgvXlxccyokLykgIT09IG51bGw7XHJcbn1cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gYzovVXNlcnMvcG0vRG93bmxvYWRzL3JlYWN0L2pzLWZyYW1ld29yay1iZW5jaG1hcmsva282L3NyYy90ZW1wbGF0ZVBhcnNlci5qcyJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBc0JBO0FBQ0E7QUF2QkE7QUFDQTs7O0FBQUE7QUFDQTs7O0FBQUE7QUFDQTtBQU1BO0FBQ0E7OztBQUtBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFKQTtBQUNBO0FBTUE7QUFBQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///6\n");

/***/ }),
/* 7 */
/*!*************************************************************************************!*\
  !*** c:/Users/pm/Downloads/react/js-framework-benchmark/ko6/src/himalaya/compat.js ***!
  \*************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.startsWith = startsWith;\nexports.endsWith = endsWith;\nexports.stringIncludes = stringIncludes;\nexports.isRealNaN = isRealNaN;\nexports.arrayIncludes = arrayIncludes;\n/*\n  We don't want to include babel-polyfill in our project.\n    - Library authors should be using babel-runtime for non-global polyfilling\n    - Adding babel-polyfill/-runtime increases bundle size significantly\n\n  We will include our polyfill instance methods as regular functions.\n*/\n\nfunction startsWith(str, searchString, position) {\n  return str.substr(position || 0, searchString.length) === searchString;\n}\n\nfunction endsWith(str, searchString, position) {\n  var index = (position || str.length) - searchString.length;\n  var lastIndex = str.lastIndexOf(searchString, index);\n  return lastIndex !== -1 && lastIndex === index;\n}\n\nfunction stringIncludes(str, searchString, position) {\n  return str.indexOf(searchString, position || 0) !== -1;\n}\n\nfunction isRealNaN(x) {\n  return typeof x === 'number' && isNaN(x);\n}\n\nfunction arrayIncludes(array, searchElement, position) {\n  var len = array.length;\n  if (len === 0) return false;\n\n  var lookupIndex = position | 0;\n  var isNaNElement = isRealNaN(searchElement);\n  var searchIndex = lookupIndex >= 0 ? lookupIndex : len + lookupIndex;\n  while (searchIndex < len) {\n    var element = array[searchIndex++];\n    if (element === searchElement) return true;\n    if (isNaNElement && isRealNaN(element)) return true;\n  }\n\n  return false;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9jOi9Vc2Vycy9wbS9Eb3dubG9hZHMvcmVhY3QvanMtZnJhbWV3b3JrLWJlbmNobWFyay9rbzYvc3JjL2hpbWFsYXlhL2NvbXBhdC5qcz85Y2QzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qXG4gIFdlIGRvbid0IHdhbnQgdG8gaW5jbHVkZSBiYWJlbC1wb2x5ZmlsbCBpbiBvdXIgcHJvamVjdC5cbiAgICAtIExpYnJhcnkgYXV0aG9ycyBzaG91bGQgYmUgdXNpbmcgYmFiZWwtcnVudGltZSBmb3Igbm9uLWdsb2JhbCBwb2x5ZmlsbGluZ1xuICAgIC0gQWRkaW5nIGJhYmVsLXBvbHlmaWxsLy1ydW50aW1lIGluY3JlYXNlcyBidW5kbGUgc2l6ZSBzaWduaWZpY2FudGx5XG5cbiAgV2Ugd2lsbCBpbmNsdWRlIG91ciBwb2x5ZmlsbCBpbnN0YW5jZSBtZXRob2RzIGFzIHJlZ3VsYXIgZnVuY3Rpb25zLlxuKi9cblxuZXhwb3J0IGZ1bmN0aW9uIHN0YXJ0c1dpdGggKHN0ciwgc2VhcmNoU3RyaW5nLCBwb3NpdGlvbikge1xuICByZXR1cm4gc3RyLnN1YnN0cihwb3NpdGlvbiB8fCAwLCBzZWFyY2hTdHJpbmcubGVuZ3RoKSA9PT0gc2VhcmNoU3RyaW5nXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBlbmRzV2l0aCAoc3RyLCBzZWFyY2hTdHJpbmcsIHBvc2l0aW9uKSB7XG4gIGNvbnN0IGluZGV4ID0gKHBvc2l0aW9uIHx8IHN0ci5sZW5ndGgpIC0gc2VhcmNoU3RyaW5nLmxlbmd0aFxuICBjb25zdCBsYXN0SW5kZXggPSBzdHIubGFzdEluZGV4T2Yoc2VhcmNoU3RyaW5nLCBpbmRleClcbiAgcmV0dXJuIGxhc3RJbmRleCAhPT0gLTEgJiYgbGFzdEluZGV4ID09PSBpbmRleFxufVxuXG5leHBvcnQgZnVuY3Rpb24gc3RyaW5nSW5jbHVkZXMgKHN0ciwgc2VhcmNoU3RyaW5nLCBwb3NpdGlvbikge1xuICByZXR1cm4gc3RyLmluZGV4T2Yoc2VhcmNoU3RyaW5nLCBwb3NpdGlvbiB8fCAwKSAhPT0gLTFcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGlzUmVhbE5hTiAoeCkge1xuICByZXR1cm4gdHlwZW9mIHggPT09ICdudW1iZXInICYmIGlzTmFOKHgpXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBhcnJheUluY2x1ZGVzIChhcnJheSwgc2VhcmNoRWxlbWVudCwgcG9zaXRpb24pIHtcbiAgY29uc3QgbGVuID0gYXJyYXkubGVuZ3RoXG4gIGlmIChsZW4gPT09IDApIHJldHVybiBmYWxzZVxuXG4gIGNvbnN0IGxvb2t1cEluZGV4ID0gcG9zaXRpb24gfCAwXG4gIGNvbnN0IGlzTmFORWxlbWVudCA9IGlzUmVhbE5hTihzZWFyY2hFbGVtZW50KVxuICBsZXQgc2VhcmNoSW5kZXggPSBsb29rdXBJbmRleCA+PSAwID8gbG9va3VwSW5kZXggOiBsZW4gKyBsb29rdXBJbmRleFxuICB3aGlsZSAoc2VhcmNoSW5kZXggPCBsZW4pIHtcbiAgICBjb25zdCBlbGVtZW50ID0gYXJyYXlbc2VhcmNoSW5kZXgrK11cbiAgICBpZiAoZWxlbWVudCA9PT0gc2VhcmNoRWxlbWVudCkgcmV0dXJuIHRydWVcbiAgICBpZiAoaXNOYU5FbGVtZW50ICYmIGlzUmVhbE5hTihlbGVtZW50KSkgcmV0dXJuIHRydWVcbiAgfVxuXG4gIHJldHVybiBmYWxzZVxufVxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIGM6L1VzZXJzL3BtL0Rvd25sb2Fkcy9yZWFjdC9qcy1mcmFtZXdvcmstYmVuY2htYXJrL2tvNi9zcmMvaGltYWxheWEvY29tcGF0LmpzIl0sIm1hcHBpbmdzIjoiOzs7OztBQVFBO0FBSUE7QUFNQTtBQUlBO0FBSUE7QUExQkE7Ozs7Ozs7O0FBUUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///7\n");

/***/ }),
/* 8 */,
/* 9 */
/*!***********************************!*\
  !*** (webpack)/buildin/global.js ***!
  \***********************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

eval("var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8od2VicGFjaykvYnVpbGRpbi9nbG9iYWwuanM/MzY5OCJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgZztcclxuXHJcbi8vIFRoaXMgd29ya3MgaW4gbm9uLXN0cmljdCBtb2RlXHJcbmcgPSAoZnVuY3Rpb24oKSB7XHJcblx0cmV0dXJuIHRoaXM7XHJcbn0pKCk7XHJcblxyXG50cnkge1xyXG5cdC8vIFRoaXMgd29ya3MgaWYgZXZhbCBpcyBhbGxvd2VkIChzZWUgQ1NQKVxyXG5cdGcgPSBnIHx8IEZ1bmN0aW9uKFwicmV0dXJuIHRoaXNcIikoKSB8fCAoMSxldmFsKShcInRoaXNcIik7XHJcbn0gY2F0Y2goZSkge1xyXG5cdC8vIFRoaXMgd29ya3MgaWYgdGhlIHdpbmRvdyByZWZlcmVuY2UgaXMgYXZhaWxhYmxlXHJcblx0aWYodHlwZW9mIHdpbmRvdyA9PT0gXCJvYmplY3RcIilcclxuXHRcdGcgPSB3aW5kb3c7XHJcbn1cclxuXHJcbi8vIGcgY2FuIHN0aWxsIGJlIHVuZGVmaW5lZCwgYnV0IG5vdGhpbmcgdG8gZG8gYWJvdXQgaXQuLi5cclxuLy8gV2UgcmV0dXJuIHVuZGVmaW5lZCwgaW5zdGVhZCBvZiBub3RoaW5nIGhlcmUsIHNvIGl0J3NcclxuLy8gZWFzaWVyIHRvIGhhbmRsZSB0aGlzIGNhc2UuIGlmKCFnbG9iYWwpIHsgLi4ufVxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBnO1xyXG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAod2VicGFjaykvYnVpbGRpbi9nbG9iYWwuanNcbi8vIG1vZHVsZSBpZCA9IDlcbi8vIG1vZHVsZSBjaHVua3MgPSAzIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///9\n");

/***/ }),
/* 10 */
/*!************************************************************************************!*\
  !*** c:/Users/pm/Downloads/react/js-framework-benchmark/ko6/src/himalaya/lexer.js ***!
  \************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = lexer;\nexports.lex = lex;\nexports.findTextEnd = findTextEnd;\nexports.lexText = lexText;\nexports.lexComment = lexComment;\nexports.lexTag = lexTag;\nexports.isWhitespaceChar = isWhitespaceChar;\nexports.lexTagName = lexTagName;\nexports.lexTagAttributes = lexTagAttributes;\nexports.lexSkipTag = lexSkipTag;\n\nvar _compat = __webpack_require__(/*! ./compat.js */ 7);\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction lexer(str, options) {\n  var state = { str: str, options: options, cursor: 0, tokens: [] };\n  lex(state);\n  return state.tokens;\n}\n\nfunction lex(state) {\n  var str = state.str;\n\n  var len = str.length;\n  while (state.cursor < len) {\n    var start = state.cursor;\n    lexText(state);\n    if (state.cursor === start) {\n      var isComment = (0, _compat.startsWith)(str, '!--', state.cursor + 1);\n      if (isComment) {\n        lexComment(state);\n      } else {\n        var tagName = lexTag(state);\n        var safeTag = tagName.toLowerCase();\n        var childlessTags = state.options.childlessTags;\n\n        if ((0, _compat.arrayIncludes)(childlessTags, safeTag)) {\n          lexSkipTag(tagName, state);\n        }\n      }\n    }\n  }\n}\n\nvar alphanumeric = /[A-Za-z0-9]/;\nfunction findTextEnd(str, index) {\n  while (true) {\n    var textEnd = str.indexOf('<', index);\n    if (textEnd === -1) {\n      return textEnd;\n    }\n    var char = str.charAt(textEnd + 1);\n    if (char === '/' || char === '!' || alphanumeric.test(char)) {\n      return textEnd;\n    }\n    index = textEnd + 1;\n  }\n}\n\nfunction lexText(state) {\n  var type = 'text';\n  var str = state.str,\n      cursor = state.cursor;\n\n  var textEnd = findTextEnd(str, cursor);\n  if (textEnd === -1) {\n    // there is only text left\n    var _content = str.slice(cursor);\n    state.cursor = str.length;\n    state.tokens.push({ type: type, content: _content });\n    return;\n  }\n\n  if (textEnd === cursor) return;\n\n  var content = str.slice(cursor, textEnd);\n  state.cursor = textEnd;\n  state.tokens.push({ type: type, content: content });\n}\n\nfunction lexComment(state) {\n  state.cursor += 4; // \"<!--\".length\n  var str = state.str,\n      cursor = state.cursor;\n\n  var commentEnd = str.indexOf('-->', cursor);\n  var type = 'comment';\n  if (commentEnd === -1) {\n    // there is only the comment left\n    var _content2 = str.slice(cursor);\n    state.cursor = str.length;\n    state.tokens.push({ type: type, content: _content2 });\n    return;\n  }\n\n  var content = str.slice(cursor, commentEnd);\n  state.cursor = commentEnd + 3; // \"-->\".length\n  state.tokens.push({ type: type, content: content });\n}\n\nfunction lexTag(state) {\n  var str = state.str;\n\n  {\n    var secondChar = str.charAt(state.cursor + 1);\n    var close = secondChar === '/';\n    state.tokens.push({ type: 'tag-start', close: close });\n    state.cursor += close ? 2 : 1;\n  }\n  var tagName = lexTagName(state);\n  lexTagAttributes(state);\n  {\n    var firstChar = str.charAt(state.cursor);\n    var _close = firstChar === '/';\n    state.tokens.push({ type: 'tag-end', close: _close });\n    state.cursor += _close ? 2 : 1;\n  }\n  return tagName;\n}\n\n// See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions#special-white-space\nvar whitespace = /\\s/;\nfunction isWhitespaceChar(char) {\n  return whitespace.test(char);\n}\n\nfunction lexTagName(state) {\n  var str = state.str,\n      cursor = state.cursor;\n\n  var len = str.length;\n  var start = cursor;\n  while (start < len) {\n    var char = str.charAt(start);\n    var isTagChar = !(isWhitespaceChar(char) || char === '/' || char === '>');\n    if (isTagChar) break;\n    start++;\n  }\n\n  var end = start + 1;\n  while (end < len) {\n    var _char = str.charAt(end);\n    var _isTagChar = !(isWhitespaceChar(_char) || _char === '/' || _char === '>');\n    if (!_isTagChar) break;\n    end++;\n  }\n\n  state.cursor = end;\n  var tagName = str.slice(start, end);\n  state.tokens.push({ type: 'tag', content: tagName });\n  return tagName;\n}\n\nfunction lexTagAttributes(state) {\n  var str = state.str,\n      tokens = state.tokens;\n\n  var cursor = state.cursor;\n  var quote = null; // null, single-, or double-quote\n  var wordBegin = cursor; // index of word start\n  var words = []; // \"key\", \"key=value\", \"key='value'\", etc\n  var len = str.length;\n  while (cursor < len) {\n    var char = str.charAt(cursor);\n    if (quote) {\n      var isQuoteEnd = char === quote;\n      if (isQuoteEnd) {\n        quote = null;\n      }\n      cursor++;\n      continue;\n    }\n\n    var isTagEnd = char === '/' || char === '>';\n    if (isTagEnd) {\n      if (cursor !== wordBegin) {\n        words.push(str.slice(wordBegin, cursor));\n      }\n      break;\n    }\n\n    var isWordEnd = isWhitespaceChar(char);\n    if (isWordEnd) {\n      if (cursor !== wordBegin) {\n        words.push(str.slice(wordBegin, cursor));\n      }\n      wordBegin = cursor + 1;\n      cursor++;\n      continue;\n    }\n\n    var isQuoteStart = char === '\\'' || char === '\"';\n    if (isQuoteStart) {\n      quote = char;\n      cursor++;\n      continue;\n    }\n\n    cursor++;\n  }\n  state.cursor = cursor;\n\n  var wLen = words.length;\n  var type = 'attribute';\n  for (var i = 0; i < wLen; i++) {\n    var word = words[i];\n    var isNotPair = word.indexOf('=') === -1;\n    if (isNotPair) {\n      var secondWord = words[i + 1];\n      if (secondWord && (0, _compat.startsWith)(secondWord, '=')) {\n        if (secondWord.length > 1) {\n          var newWord = word + secondWord;\n          tokens.push({ type: type, content: newWord });\n          i += 1;\n          continue;\n        }\n        var thirdWord = words[i + 2];\n        i += 1;\n        if (thirdWord) {\n          var _newWord = word + '=' + thirdWord;\n          tokens.push({ type: type, content: _newWord });\n          i += 1;\n          continue;\n        }\n      }\n    }\n    if ((0, _compat.endsWith)(word, '=')) {\n      var _secondWord = words[i + 1];\n      if (_secondWord && !(0, _compat.stringIncludes)(_secondWord, '=')) {\n        var _newWord3 = word + _secondWord;\n        tokens.push({ type: type, content: _newWord3 });\n        i += 1;\n        continue;\n      }\n\n      var _newWord2 = word.slice(0, -1);\n      tokens.push({ type: type, content: _newWord2 });\n      continue;\n    }\n\n    tokens.push({ type: type, content: word });\n  }\n}\n\nfunction lexSkipTag(tagName, state) {\n  var str = state.str,\n      cursor = state.cursor,\n      tokens = state.tokens;\n\n  var len = str.length;\n  var index = cursor;\n  while (index < len) {\n    var nextTag = str.indexOf('</', index);\n    if (nextTag === -1) {\n      lexText(state);\n      break;\n    }\n\n    var tagState = { str: str, cursor: nextTag + 2, tokens: [] };\n    var name = lexTagName(tagState);\n    var safeTagName = tagName.toLowerCase();\n    if (safeTagName !== name.toLowerCase()) {\n      index = tagState.cursor;\n      continue;\n    }\n\n    var content = str.slice(cursor, nextTag);\n    tokens.push({ type: 'text', content: content });\n    var openTag = { type: 'tag-start', close: true };\n    var closeTag = { type: 'tag-end', close: false };\n    lexTagAttributes(tagState);\n    tokens.push.apply(tokens, [openTag].concat(_toConsumableArray(tagState.tokens), [closeTag]));\n    state.cursor = tagState.cursor + 1;\n    break;\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///10\n");

/***/ }),
/* 11 */
/*!*************************************************************************************!*\
  !*** c:/Users/pm/Downloads/react/js-framework-benchmark/ko6/src/himalaya/parser.js ***!
  \*************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = parser;\nexports.hasTerminalParent = hasTerminalParent;\nexports.parse = parse;\nfunction parser(tokens, options) {\n  var root = { tagName: null, children: [] };\n  var state = { tokens: tokens, options: options, cursor: 0, stack: [root] };\n  parse(state);\n  return root.children;\n}\n\nfunction hasTerminalParent(tagName, stack, terminals) {\n  var tagParents = terminals[tagName];\n  if (tagParents) {\n    var currentIndex = stack.length - 1;\n    while (currentIndex >= 0) {\n      var parentTagName = stack[currentIndex].tagName;\n      if (parentTagName === tagName) {\n        break;\n      }\n      if (tagParents.indexOf(parentTagName) >= 0) {\n        return true;\n      }\n      currentIndex--;\n    }\n  }\n  return false;\n}\n\nfunction parse(state) {\n  var tokens = state.tokens,\n      options = state.options;\n  var stack = state.stack;\n\n  var nodes = stack[stack.length - 1].children;\n  var len = tokens.length;\n  var cursor = state.cursor;\n\n  while (cursor < len) {\n    var token = tokens[cursor];\n    if (token.type !== 'tag-start') {\n      nodes.push(token);\n      cursor++;\n      continue;\n    }\n\n    var tagToken = tokens[++cursor];\n    cursor++;\n    var tagName = tagToken.content.toLowerCase();\n    if (token.close) {\n      var item = void 0;\n      while (item = stack.pop()) {\n        if (tagName === item.tagName) break;\n      }\n      while (cursor < len) {\n        var endToken = tokens[cursor];\n        if (endToken.type !== 'tag-end') break;\n        cursor++;\n      }\n      break;\n    }\n\n    var isClosingTag = options.closingTags.indexOf(tagName) >= 0;\n    var shouldRewindToAutoClose = isClosingTag;\n    if (shouldRewindToAutoClose) {\n      var terminals = options.closingTagAncestorBreakers;\n\n      shouldRewindToAutoClose = !hasTerminalParent(tagName, stack, terminals);\n    }\n\n    if (shouldRewindToAutoClose) {\n      // rewind the stack to just above the previous\n      // closing tag of the same name\n      var currentIndex = stack.length - 1;\n      while (currentIndex > 0) {\n        if (tagName === stack[currentIndex].tagName) {\n          stack = stack.slice(0, currentIndex);\n          var previousIndex = currentIndex - 1;\n          nodes = stack[previousIndex].children;\n          break;\n        }\n        currentIndex = currentIndex - 1;\n      }\n    }\n\n    var attributes = [];\n    var attrToken = void 0;\n    while (cursor < len) {\n      attrToken = tokens[cursor];\n      if (attrToken.type === 'tag-end') break;\n      attributes.push(attrToken.content);\n      cursor++;\n    }\n\n    cursor++;\n    var children = [];\n    nodes.push({\n      type: 'element',\n      tagName: tagToken.content,\n      attributes: attributes,\n      children: children\n    });\n\n    var hasChildren = !(attrToken.close || options.voidTags.indexOf(tagName) >= 0);\n    if (hasChildren) {\n      stack.push({ tagName: tagName, children: children });\n      var innerState = { tokens: tokens, options: options, cursor: cursor, stack: stack };\n      parse(innerState);\n      cursor = innerState.cursor;\n    }\n  }\n  state.cursor = cursor;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTEuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vYzovVXNlcnMvcG0vRG93bmxvYWRzL3JlYWN0L2pzLWZyYW1ld29yay1iZW5jaG1hcmsva282L3NyYy9oaW1hbGF5YS9wYXJzZXIuanM/MWY5NiJdLCJzb3VyY2VzQ29udGVudCI6WyJcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHBhcnNlciAodG9rZW5zLCBvcHRpb25zKSB7XG4gIGNvbnN0IHJvb3QgPSB7dGFnTmFtZTogbnVsbCwgY2hpbGRyZW46IFtdfVxuICBjb25zdCBzdGF0ZSA9IHt0b2tlbnMsIG9wdGlvbnMsIGN1cnNvcjogMCwgc3RhY2s6IFtyb290XX1cbiAgcGFyc2Uoc3RhdGUpXG4gIHJldHVybiByb290LmNoaWxkcmVuXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBoYXNUZXJtaW5hbFBhcmVudCAodGFnTmFtZSwgc3RhY2ssIHRlcm1pbmFscykge1xuICBjb25zdCB0YWdQYXJlbnRzID0gdGVybWluYWxzW3RhZ05hbWVdXG4gIGlmICh0YWdQYXJlbnRzKSB7XG4gICAgbGV0IGN1cnJlbnRJbmRleCA9IHN0YWNrLmxlbmd0aCAtIDFcbiAgICB3aGlsZSAoY3VycmVudEluZGV4ID49IDApIHtcbiAgICAgIGNvbnN0IHBhcmVudFRhZ05hbWUgPSBzdGFja1tjdXJyZW50SW5kZXhdLnRhZ05hbWVcbiAgICAgIGlmIChwYXJlbnRUYWdOYW1lID09PSB0YWdOYW1lKSB7XG4gICAgICAgIGJyZWFrXG4gICAgICB9XG4gICAgICBpZiAodGFnUGFyZW50cy5pbmRleE9mKHBhcmVudFRhZ05hbWUpPj0wKSB7XG4gICAgICAgIHJldHVybiB0cnVlXG4gICAgICB9XG4gICAgICBjdXJyZW50SW5kZXgtLVxuICAgIH1cbiAgfVxuICByZXR1cm4gZmFsc2Vcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHBhcnNlIChzdGF0ZSkge1xuICBjb25zdCB7dG9rZW5zLCBvcHRpb25zfSA9IHN0YXRlXG4gIGxldCB7c3RhY2t9ID0gc3RhdGVcbiAgbGV0IG5vZGVzID0gc3RhY2tbc3RhY2subGVuZ3RoIC0gMV0uY2hpbGRyZW5cbiAgY29uc3QgbGVuID0gdG9rZW5zLmxlbmd0aFxuICBsZXQge2N1cnNvcn0gPSBzdGF0ZVxuICB3aGlsZSAoY3Vyc29yIDwgbGVuKSB7XG4gICAgY29uc3QgdG9rZW4gPSB0b2tlbnNbY3Vyc29yXVxuICAgIGlmICh0b2tlbi50eXBlICE9PSAndGFnLXN0YXJ0Jykge1xuICAgICAgbm9kZXMucHVzaCh0b2tlbilcbiAgICAgIGN1cnNvcisrXG4gICAgICBjb250aW51ZVxuICAgIH1cblxuICAgIGNvbnN0IHRhZ1Rva2VuID0gdG9rZW5zWysrY3Vyc29yXVxuICAgIGN1cnNvcisrXG4gICAgY29uc3QgdGFnTmFtZSA9IHRhZ1Rva2VuLmNvbnRlbnQudG9Mb3dlckNhc2UoKVxuICAgIGlmICh0b2tlbi5jbG9zZSkge1xuICAgICAgbGV0IGl0ZW1cbiAgICAgIHdoaWxlICgoaXRlbSA9IHN0YWNrLnBvcCgpKSkge1xuICAgICAgICBpZiAodGFnTmFtZSA9PT0gaXRlbS50YWdOYW1lKSBicmVha1xuICAgICAgfVxuICAgICAgd2hpbGUgKGN1cnNvciA8IGxlbikge1xuICAgICAgICBjb25zdCBlbmRUb2tlbiA9IHRva2Vuc1tjdXJzb3JdXG4gICAgICAgIGlmIChlbmRUb2tlbi50eXBlICE9PSAndGFnLWVuZCcpIGJyZWFrXG4gICAgICAgIGN1cnNvcisrXG4gICAgICB9XG4gICAgICBicmVha1xuICAgIH1cblxuICAgIGNvbnN0IGlzQ2xvc2luZ1RhZyA9IG9wdGlvbnMuY2xvc2luZ1RhZ3MuaW5kZXhPZih0YWdOYW1lKT49MFxuICAgIGxldCBzaG91bGRSZXdpbmRUb0F1dG9DbG9zZSA9IGlzQ2xvc2luZ1RhZ1xuICAgIGlmIChzaG91bGRSZXdpbmRUb0F1dG9DbG9zZSkge1xuICAgICAgY29uc3QgeyBjbG9zaW5nVGFnQW5jZXN0b3JCcmVha2VyczogdGVybWluYWxzIH0gPSBvcHRpb25zXG4gICAgICBzaG91bGRSZXdpbmRUb0F1dG9DbG9zZSA9ICFoYXNUZXJtaW5hbFBhcmVudCh0YWdOYW1lLCBzdGFjaywgdGVybWluYWxzKVxuICAgIH1cblxuICAgIGlmIChzaG91bGRSZXdpbmRUb0F1dG9DbG9zZSkge1xuICAgICAgLy8gcmV3aW5kIHRoZSBzdGFjayB0byBqdXN0IGFib3ZlIHRoZSBwcmV2aW91c1xuICAgICAgLy8gY2xvc2luZyB0YWcgb2YgdGhlIHNhbWUgbmFtZVxuICAgICAgbGV0IGN1cnJlbnRJbmRleCA9IHN0YWNrLmxlbmd0aCAtIDFcbiAgICAgIHdoaWxlIChjdXJyZW50SW5kZXggPiAwKSB7XG4gICAgICAgIGlmICh0YWdOYW1lID09PSBzdGFja1tjdXJyZW50SW5kZXhdLnRhZ05hbWUpIHtcbiAgICAgICAgICBzdGFjayA9IHN0YWNrLnNsaWNlKDAsIGN1cnJlbnRJbmRleClcbiAgICAgICAgICBjb25zdCBwcmV2aW91c0luZGV4ID0gY3VycmVudEluZGV4IC0gMVxuICAgICAgICAgIG5vZGVzID0gc3RhY2tbcHJldmlvdXNJbmRleF0uY2hpbGRyZW5cbiAgICAgICAgICBicmVha1xuICAgICAgICB9XG4gICAgICAgIGN1cnJlbnRJbmRleCA9IGN1cnJlbnRJbmRleCAtIDFcbiAgICAgIH1cbiAgICB9XG5cbiAgICBsZXQgYXR0cmlidXRlcyA9IFtdXG4gICAgbGV0IGF0dHJUb2tlblxuICAgIHdoaWxlIChjdXJzb3IgPCBsZW4pIHtcbiAgICAgIGF0dHJUb2tlbiA9IHRva2Vuc1tjdXJzb3JdXG4gICAgICBpZiAoYXR0clRva2VuLnR5cGUgPT09ICd0YWctZW5kJykgYnJlYWtcbiAgICAgIGF0dHJpYnV0ZXMucHVzaChhdHRyVG9rZW4uY29udGVudClcbiAgICAgIGN1cnNvcisrXG4gICAgfVxuXG4gICAgY3Vyc29yKytcbiAgICBjb25zdCBjaGlsZHJlbiA9IFtdXG4gICAgbm9kZXMucHVzaCh7XG4gICAgICB0eXBlOiAnZWxlbWVudCcsXG4gICAgICB0YWdOYW1lOiB0YWdUb2tlbi5jb250ZW50LFxuICAgICAgYXR0cmlidXRlcyxcbiAgICAgIGNoaWxkcmVuXG4gICAgfSlcblxuICAgIGNvbnN0IGhhc0NoaWxkcmVuID0gIShhdHRyVG9rZW4uY2xvc2UgfHwgb3B0aW9ucy52b2lkVGFncy5pbmRleE9mKHRhZ05hbWUpPj0wKVxuICAgIGlmIChoYXNDaGlsZHJlbikge1xuICAgICAgc3RhY2sucHVzaCh7dGFnTmFtZSwgY2hpbGRyZW59KVxuICAgICAgY29uc3QgaW5uZXJTdGF0ZSA9IHt0b2tlbnMsIG9wdGlvbnMsIGN1cnNvciwgc3RhY2t9XG4gICAgICBwYXJzZShpbm5lclN0YXRlKVxuICAgICAgY3Vyc29yID0gaW5uZXJTdGF0ZS5jdXJzb3JcbiAgICB9XG4gIH1cbiAgc3RhdGUuY3Vyc29yID0gY3Vyc29yXG59XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gYzovVXNlcnMvcG0vRG93bmxvYWRzL3JlYWN0L2pzLWZyYW1ld29yay1iZW5jaG1hcmsva282L3NyYy9oaW1hbGF5YS9wYXJzZXIuanMiXSwibWFwcGluZ3MiOiI7Ozs7O0FBQ0E7QUFPQTtBQWtCQTtBQXpCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFFQTtBQUNBO0FBSkE7QUFDQTtBQUtBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUpBO0FBQ0E7QUFNQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///11\n");

/***/ }),
/* 12 */
/*!***********************************************************************************!*\
  !*** c:/Users/pm/Downloads/react/js-framework-benchmark/ko6/src/himalaya/tags.js ***!
  \***********************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/*\n  Tags which contain arbitary non-parsed content\n  For example: <script> JavaScript should not be parsed\n*/\nvar childlessTags = exports.childlessTags = ['style', 'script', 'template'];\n\n/*\n  Tags which auto-close because they cannot be nested\n  For example: <p>Outer<p>Inner is <p>Outer</p><p>Inner</p>\n*/\nvar closingTags = exports.closingTags = ['html', 'head', 'body', 'p', 'dt', 'dd', 'li', 'option', 'thead', 'th', 'tbody', 'tr', 'td', 'tfoot', 'colgroup'];\n\n/*\n  Closing tags which have ancestor tags which\n  may exist within them which prevent the\n  closing tag from auto-closing.\n  For example: in <li><ul><li></ul></li>,\n  the top-level <li> should not auto-close.\n*/\nvar closingTagAncestorBreakers = exports.closingTagAncestorBreakers = {\n  li: ['ul', 'ol', 'menu'],\n  dt: ['dl'],\n  dd: ['dl'],\n  tbody: ['table'],\n  thead: ['table'],\n  tfoot: ['table'],\n  tr: ['table'],\n  td: ['table']\n\n  /*\n    Tags which do not need the closing tag\n    For example: <img> does not need </img>\n  */\n};var voidTags = exports.voidTags = ['!doctype', 'area', 'base', 'br', 'col', 'command', 'embed', 'hr', 'img', 'input', 'keygen', 'link', 'meta', 'param', 'source', 'track', 'wbr'];//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTIuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vYzovVXNlcnMvcG0vRG93bmxvYWRzL3JlYWN0L2pzLWZyYW1ld29yay1iZW5jaG1hcmsva282L3NyYy9oaW1hbGF5YS90YWdzLmpzP2U5MDkiXSwic291cmNlc0NvbnRlbnQiOlsiLypcbiAgVGFncyB3aGljaCBjb250YWluIGFyYml0YXJ5IG5vbi1wYXJzZWQgY29udGVudFxuICBGb3IgZXhhbXBsZTogPHNjcmlwdD4gSmF2YVNjcmlwdCBzaG91bGQgbm90IGJlIHBhcnNlZFxuKi9cbmV4cG9ydCBjb25zdCBjaGlsZGxlc3NUYWdzID0gWydzdHlsZScsICdzY3JpcHQnLCAndGVtcGxhdGUnXVxuXG4vKlxuICBUYWdzIHdoaWNoIGF1dG8tY2xvc2UgYmVjYXVzZSB0aGV5IGNhbm5vdCBiZSBuZXN0ZWRcbiAgRm9yIGV4YW1wbGU6IDxwPk91dGVyPHA+SW5uZXIgaXMgPHA+T3V0ZXI8L3A+PHA+SW5uZXI8L3A+XG4qL1xuZXhwb3J0IGNvbnN0IGNsb3NpbmdUYWdzID0gW1xuICAnaHRtbCcsICdoZWFkJywgJ2JvZHknLCAncCcsICdkdCcsICdkZCcsICdsaScsICdvcHRpb24nLFxuICAndGhlYWQnLCAndGgnLCAndGJvZHknLCAndHInLCAndGQnLCAndGZvb3QnLCAnY29sZ3JvdXAnXG5dXG5cbi8qXG4gIENsb3NpbmcgdGFncyB3aGljaCBoYXZlIGFuY2VzdG9yIHRhZ3Mgd2hpY2hcbiAgbWF5IGV4aXN0IHdpdGhpbiB0aGVtIHdoaWNoIHByZXZlbnQgdGhlXG4gIGNsb3NpbmcgdGFnIGZyb20gYXV0by1jbG9zaW5nLlxuICBGb3IgZXhhbXBsZTogaW4gPGxpPjx1bD48bGk+PC91bD48L2xpPixcbiAgdGhlIHRvcC1sZXZlbCA8bGk+IHNob3VsZCBub3QgYXV0by1jbG9zZS5cbiovXG5leHBvcnQgY29uc3QgY2xvc2luZ1RhZ0FuY2VzdG9yQnJlYWtlcnMgPSB7XG4gIGxpOiBbJ3VsJywgJ29sJywgJ21lbnUnXSxcbiAgZHQ6IFsnZGwnXSxcbiAgZGQ6IFsnZGwnXSxcbiAgdGJvZHk6IFsndGFibGUnXSxcbiAgdGhlYWQ6IFsndGFibGUnXSxcbiAgdGZvb3Q6IFsndGFibGUnXSxcbiAgdHI6IFsndGFibGUnXSxcbiAgdGQ6IFsndGFibGUnXVxufVxuXG4vKlxuICBUYWdzIHdoaWNoIGRvIG5vdCBuZWVkIHRoZSBjbG9zaW5nIHRhZ1xuICBGb3IgZXhhbXBsZTogPGltZz4gZG9lcyBub3QgbmVlZCA8L2ltZz5cbiovXG5leHBvcnQgY29uc3Qgdm9pZFRhZ3MgPSBbXG4gICchZG9jdHlwZScsICdhcmVhJywgJ2Jhc2UnLCAnYnInLCAnY29sJywgJ2NvbW1hbmQnLFxuICAnZW1iZWQnLCAnaHInLCAnaW1nJywgJ2lucHV0JywgJ2tleWdlbicsICdsaW5rJyxcbiAgJ21ldGEnLCAncGFyYW0nLCAnc291cmNlJywgJ3RyYWNrJywgJ3dicidcbl1cblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyBjOi9Vc2Vycy9wbS9Eb3dubG9hZHMvcmVhY3QvanMtZnJhbWV3b3JrLWJlbmNobWFyay9rbzYvc3JjL2hpbWFsYXlhL3RhZ3MuanMiXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7Ozs7QUFJQTtBQUNBO0FBQ0E7Ozs7QUFJQTtBQUNBO0FBSUE7Ozs7Ozs7QUFPQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBOzs7O0FBWEEiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///12\n");

/***/ }),
/* 13 */
/*!*****************************************************************************************!*\
  !*** c:/Users/pm/Downloads/react/js-framework-benchmark/ko6/src/blocks/blockForeach.js ***!
  \*****************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.default = blockForeach;\n\nvar _tkoObservable = __webpack_require__(/*! ../tko/tko.observable.js */ 0);\n\nvar _tkoComputed = __webpack_require__(/*! ../tko/tko.computed.js */ 3);\n\nvar _renderCtx = __webpack_require__(/*! ../renderCtx.js */ 1);\n\nfunction blockForeach(stamp, tpl, ctx0, level) {\n\tif (!(tpl && tpl.children && tpl.children.length > 0)) {\n\n\t\tconsole.log(\"empty foreach\", tpl);\n\t\treturn;\n\t}\n\tif (tpl.attrs && tpl.attrs['items'] && tpl.attrs['items'].call) {\n\n\t\tvar items = tpl.attrs['items'];\n\t\tvar val2 = ctx0.expr(items);\n\t\tval2 = (0, _tkoObservable.unwrap)(val2);\n\t\t_tkoObservable.dependencyDetection.ignore(function () {\n\t\t\trenderItems(val2, stamp, tpl, ctx0);\n\t\t});\n\t}\n};\n\nfunction renderItems(items2, stamp, tpl, ctx0) {\n\n\tif (items2.length == 0) {\n\t\t//remove all\n\t\tconsole.log('removeAll');\n\t\tctx0.dispose();\n\t\treturn;\n\t}\n\n\tvar eqMin = arrEq(ctx0.subscribers, items2);\n\n\tif (eqMin == ctx0.subscribers.length) {\n\t\t//only Append\n\t\tconsole.log('onlyAppend', eqMin);\n\t\tfor (var i = eqMin, max = items2.length; i < max; i++) {\n\t\t\tappendItem(items2[i], stamp, tpl, ctx0);\n\t\t}return;\n\t}\n\tif (ctx0.subscribers.length > items2.length && eqMin == items2.length) {\n\t\t//only remove\n\t\tconsole.log('onlyRemove', eqMin, ctx0.subscribers.length, '<', items2.length);\n\t\tfor (var _i = ctx0.subscribers.length - 1; _i >= items2.length; _i--) {\n\t\t\tctx0.subscribers[_i].dispose();\n\t\t}ctx0.subscribers = ctx0.subscribers.slice(0, items2.length);\n\t\treturn;\n\t}\n\n\tif (Map && Map.call) {\n\t\t//merge contenxt in Map\n\t\tmergeItemsMap(items2, eqMin, tpl, ctx0, stamp[0], stamp[1]);\n\t\treturn;\n\t}\n\n\t//bad scenario, delete all old, add new\n\tctx0.dispose();\n\tfor (var _i2 = 0, _max = items2.length; _i2 < _max; _i2++) {\n\t\tappendItem(items2[_i2], stamp, tpl, ctx0);\n\t}\n};\n\nfunction arrEq(contexts, items2, start) {\n\tstart = start || 0;\n\tvar max = contexts.length < items2.length ? contexts.length : items2.length;\n\tfor (var i = 0; i < max; i++) {\n\t\tif (contexts[i].model != items2[i]) return i;\n\t}\n\treturn max;\n}\n\nfunction appendItem(m2, stamp, tpl, ctx0) {\n\tvar ctx2 = ctx0.createChild(m2);\n\t(0, _renderCtx.renderCtx)(stamp, tpl.children, ctx2, 0);\n\treturn ctx2;\n}\n\nfunction mergeItemsMap(items2, eqMin, tpl, ctx0, parent, stamp1) {\n\tvar oldMap = new Map();\n\tvar old = ctx0.subscribers;\n\t//index old\n\tfor (var i = eqMin; i < old.length; i++) {\n\t\tvar ctx2 = old[i];\n\t\tctx2._oldIndex = i;\n\t\tctx2._newIndex = -1;\n\t\toldMap.set(ctx2.model, ctx2);\n\t}\n\t//index new\n\tvar reusedCtx = [];\n\tfor (var _i3 = eqMin; _i3 < items2.length; _i3++) {\n\t\tvar _ctx = oldMap.get(items2[_i3]);\n\t\tif (_ctx) {\n\t\t\t_ctx._newIndex = _i3;\n\t\t\treusedCtx[_i3] = _ctx;\n\t\t}\n\t}\n\n\tctx0.subscribers = ctx0.subscribers.slice(0, eqMin);\n\tvar aktPosOld = nextOldPos(old, eqMin);\n\tfor (var _i4 = eqMin, max = items2.length; _i4 < max; _i4++) {\n\t\tvar m2 = items2[_i4];\n\t\tif (aktPosOld < old.length && old[aktPosOld].model === m2) {\n\t\t\t//the same models, all is ok\n\t\t\tctx0.subscribers.push(old[aktPosOld]);\n\t\t\told[aktPosOld] = null;\n\t\t\taktPosOld = nextOldPos(old, aktPosOld + 1);\n\t\t\tcontinue;\n\t\t}\n\t\tvar beforeNode = aktPosOld < old.length ? old[aktPosOld].rootNodes[0] : stamp1;\n\t\tvar _ctx2 = reusedCtx[_i4];\n\t\tif (_ctx2) {\n\t\t\t//reuse\n\t\t\tfor (var i2 = 0, max2 = _ctx2.rootNodes.length; i2 < max2; i2++) {\n\t\t\t\tparent.insertBefore(_ctx2.rootNodes[i2], beforeNode);\n\t\t\t};\n\t\t\tctx0.subscribers.push(_ctx2);\n\t\t\told[_ctx2._oldIndex] = null;\n\t\t} else {\n\t\t\t//create new\n\t\t\t_ctx2 = appendItem(m2, [parent, beforeNode], tpl, ctx0);\n\t\t\tctx0.subscribers.push(_ctx2);\n\t\t}\n\t}\n}\n\nfunction nextOldPos(old, aktPosOld) {\n\twhile (aktPosOld < old.length) {\n\t\tvar v = old[aktPosOld];\n\t\tif (v != null) {\n\t\t\tif (v._newIndex >= 0) return aktPosOld;\n\t\t\tv.dispose();\n\t\t\told[aktPosOld] = null;\n\t\t}\n\t\taktPosOld++;\n\t}\n\treturn aktPosOld;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vYzovVXNlcnMvcG0vRG93bmxvYWRzL3JlYWN0L2pzLWZyYW1ld29yay1iZW5jaG1hcmsva282L3NyYy9ibG9ja3MvYmxvY2tGb3JlYWNoLmpzPzNhODgiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdW53cmFwLCBkZXBlbmRlbmN5RGV0ZWN0aW9uIH0gIGZyb20gJy4uL3Rrby90a28ub2JzZXJ2YWJsZS5qcyc7XHJcbmltcG9ydCB7IGNvbXB1dGVkIH0gIGZyb20gJy4uL3Rrby90a28uY29tcHV0ZWQuanMnO1xyXG5pbXBvcnQgeyByZW5kZXJDdHggfSAgZnJvbSAnLi4vcmVuZGVyQ3R4LmpzJztcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGJsb2NrRm9yZWFjaChzdGFtcCwgdHBsLCBjdHgwLCBsZXZlbCl7XHJcblx0aWYoISh0cGwgJiYgdHBsLmNoaWxkcmVuICYmIHRwbC5jaGlsZHJlbi5sZW5ndGg+MCkpe1xyXG5cclxuXHRcdGNvbnNvbGUubG9nKFwiZW1wdHkgZm9yZWFjaFwiICx0cGwpO1xyXG5cdFx0cmV0dXJuO1xyXG5cdH1cclxuXHRpZih0cGwuYXR0cnMgJiYgdHBsLmF0dHJzWydpdGVtcyddICYmIHRwbC5hdHRyc1snaXRlbXMnXS5jYWxsKXtcclxuXHJcblx0XHR2YXIgaXRlbXMgPSB0cGwuYXR0cnNbJ2l0ZW1zJ107XHJcblx0XHR2YXIgdmFsMiA9IGN0eDAuZXhwcihpdGVtcyk7XHJcblx0XHR2YWwyID0gdW53cmFwKHZhbDIpO1xyXG5cdFx0ZGVwZW5kZW5jeURldGVjdGlvbi5pZ25vcmUoZnVuY3Rpb24oKXtcclxuXHRcdFx0cmVuZGVySXRlbXModmFsMiwgc3RhbXAsIHRwbCwgY3R4MCk7XHJcblx0XHR9KTtcclxuXHR9XHJcbn07XHJcblxyXG5mdW5jdGlvbiByZW5kZXJJdGVtcyhpdGVtczIsIHN0YW1wLCB0cGwsIGN0eDApe1xyXG5cclxuXHRpZihpdGVtczIubGVuZ3RoPT0wKXtcclxuXHRcdC8vcmVtb3ZlIGFsbFxyXG5cdFx0Y29uc29sZS5sb2coJ3JlbW92ZUFsbCcpO1xyXG5cdFx0Y3R4MC5kaXNwb3NlKCk7XHJcblx0XHRyZXR1cm47XHJcblx0fVxyXG5cclxuXHRsZXQgZXFNaW4gPSBhcnJFcShjdHgwLnN1YnNjcmliZXJzLCBpdGVtczIpO1xyXG5cclxuXHRpZihlcU1pbj09Y3R4MC5zdWJzY3JpYmVycy5sZW5ndGgpe1xyXG5cdFx0Ly9vbmx5IEFwcGVuZFxyXG5cdFx0Y29uc29sZS5sb2coJ29ubHlBcHBlbmQnLCBlcU1pbik7XHJcblx0XHRmb3IobGV0IGk9ZXFNaW4sIG1heD1pdGVtczIubGVuZ3RoOyBpPG1heDsgaSsrKSBhcHBlbmRJdGVtKGl0ZW1zMltpXSwgc3RhbXAsIHRwbCwgY3R4MCk7XHJcblx0XHRyZXR1cm47XHJcblx0fVxyXG5cdGlmKGN0eDAuc3Vic2NyaWJlcnMubGVuZ3RoPml0ZW1zMi5sZW5ndGggJiYgZXFNaW49PWl0ZW1zMi5sZW5ndGgpe1xyXG5cdFx0Ly9vbmx5IHJlbW92ZVxyXG5cdFx0Y29uc29sZS5sb2coJ29ubHlSZW1vdmUnLCBlcU1pbiwgY3R4MC5zdWJzY3JpYmVycy5sZW5ndGgsICc8JywgaXRlbXMyLmxlbmd0aCk7XHJcblx0XHRmb3IobGV0IGk9Y3R4MC5zdWJzY3JpYmVycy5sZW5ndGgtMTsgaT49aXRlbXMyLmxlbmd0aDsgaS0tKSBjdHgwLnN1YnNjcmliZXJzW2ldLmRpc3Bvc2UoKTtcclxuXHRcdGN0eDAuc3Vic2NyaWJlcnMgPSBjdHgwLnN1YnNjcmliZXJzLnNsaWNlKDAsIGl0ZW1zMi5sZW5ndGgpO1xyXG5cdFx0cmV0dXJuO1xyXG5cdH1cclxuXHJcblx0aWYoTWFwICYmIE1hcC5jYWxsKXtcclxuXHRcdC8vbWVyZ2UgY29udGVueHQgaW4gTWFwXHJcblx0XHRtZXJnZUl0ZW1zTWFwKGl0ZW1zMiwgZXFNaW4sIHRwbCwgY3R4MCwgc3RhbXBbMF0sIHN0YW1wWzFdKTtcclxuXHRcdHJldHVybjtcclxuXHR9XHJcblxyXG5cdC8vYmFkIHNjZW5hcmlvLCBkZWxldGUgYWxsIG9sZCwgYWRkIG5ld1xyXG5cdGN0eDAuZGlzcG9zZSgpO1xyXG5cdGZvcihsZXQgaT0wLCBtYXg9aXRlbXMyLmxlbmd0aDsgaTxtYXg7IGkrKykgYXBwZW5kSXRlbShpdGVtczJbaV0sIHN0YW1wLCB0cGwsIGN0eDApO1xyXG5cclxufTtcclxuXHJcbmZ1bmN0aW9uIGFyckVxKGNvbnRleHRzLCBpdGVtczIsIHN0YXJ0KXtcclxuXHRzdGFydCA9IHN0YXJ0IHx8IDA7XHJcblx0Y29uc3QgbWF4ID0gY29udGV4dHMubGVuZ3RoPGl0ZW1zMi5sZW5ndGggPyBjb250ZXh0cy5sZW5ndGggOiBpdGVtczIubGVuZ3RoO1xyXG5cdGZvcihsZXQgaSA9IDA7IGk8bWF4OyBpKyspe1xyXG5cdFx0aWYoY29udGV4dHNbaV0ubW9kZWwhPWl0ZW1zMltpXSkgcmV0dXJuIGk7XHJcblx0fVxyXG5cdHJldHVybiBtYXg7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGFwcGVuZEl0ZW0obTIsIHN0YW1wLCB0cGwsIGN0eDApe1xyXG5cdGNvbnN0IGN0eDIgPSBjdHgwLmNyZWF0ZUNoaWxkKG0yKTtcclxuXHRyZW5kZXJDdHgoc3RhbXAsIHRwbC5jaGlsZHJlbiwgY3R4MiwgMCk7XHJcblx0cmV0dXJuIGN0eDI7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIG1lcmdlSXRlbXNNYXAoaXRlbXMyLCBlcU1pbiwgdHBsLCBjdHgwLCBwYXJlbnQsIHN0YW1wMSl7XHJcblx0bGV0IG9sZE1hcCA9IG5ldyBNYXAoKTtcclxuXHRsZXQgb2xkID0gY3R4MC5zdWJzY3JpYmVycztcclxuXHQvL2luZGV4IG9sZFxyXG5cdGZvcihsZXQgaT1lcU1pbjsgaTxvbGQubGVuZ3RoOyBpKyspe1xyXG5cdFx0Y29uc3QgY3R4MiA9IG9sZFtpXTtcclxuXHRcdGN0eDIuX29sZEluZGV4ID0gaTtcclxuXHRcdGN0eDIuX25ld0luZGV4ID0gLTE7XHJcblx0XHRvbGRNYXAuc2V0KGN0eDIubW9kZWwsIGN0eDIpO1xyXG5cdH1cclxuXHQvL2luZGV4IG5ld1xyXG5cdGxldCByZXVzZWRDdHggPSBbXTtcclxuXHRmb3IobGV0IGk9ZXFNaW47IGk8aXRlbXMyLmxlbmd0aDsgaSsrKXtcclxuXHRcdGNvbnN0IGN0eDIgPSBvbGRNYXAuZ2V0KGl0ZW1zMltpXSk7XHJcblx0XHRpZihjdHgyKSB7IFxyXG5cdFx0XHRjdHgyLl9uZXdJbmRleCA9IGk7IFxyXG5cdFx0XHRyZXVzZWRDdHhbaV0gPSBjdHgyOyBcclxuXHRcdH1cclxuXHR9XHJcblxyXG5cdGN0eDAuc3Vic2NyaWJlcnMgPSBjdHgwLnN1YnNjcmliZXJzLnNsaWNlKDAsIGVxTWluKTtcclxuXHRsZXQgYWt0UG9zT2xkID0gbmV4dE9sZFBvcyhvbGQsIGVxTWluKTtcclxuXHRmb3IobGV0IGk9ZXFNaW4sIG1heD1pdGVtczIubGVuZ3RoOyBpPG1heDsgaSsrKXtcclxuXHRcdGNvbnN0IG0yID0gaXRlbXMyW2ldO1xyXG5cdFx0aWYoYWt0UG9zT2xkPG9sZC5sZW5ndGggJiYgb2xkW2FrdFBvc09sZF0ubW9kZWw9PT1tMikge1xyXG5cdFx0XHQvL3RoZSBzYW1lIG1vZGVscywgYWxsIGlzIG9rXHJcblx0XHRcdGN0eDAuc3Vic2NyaWJlcnMucHVzaChvbGRbYWt0UG9zT2xkXSk7XHJcblx0XHRcdG9sZFtha3RQb3NPbGRdID0gbnVsbDtcclxuXHRcdFx0YWt0UG9zT2xkID0gbmV4dE9sZFBvcyhvbGQsIGFrdFBvc09sZCsxKTtcclxuXHRcdFx0Y29udGludWU7XHJcblx0XHR9XHJcblx0XHRjb25zdCBiZWZvcmVOb2RlID0gYWt0UG9zT2xkPG9sZC5sZW5ndGggPyBvbGRbYWt0UG9zT2xkXS5yb290Tm9kZXNbMF0gOiBzdGFtcDE7XHJcblx0XHRsZXQgY3R4MiA9IHJldXNlZEN0eFtpXTtcclxuXHRcdGlmKGN0eDIpe1xyXG5cdFx0XHQvL3JldXNlXHJcblx0XHRcdGZvcihsZXQgaTI9MCwgbWF4Mj1jdHgyLnJvb3ROb2Rlcy5sZW5ndGg7IGkyPG1heDI7IGkyKyspe1xyXG5cdFx0XHRcdHBhcmVudC5pbnNlcnRCZWZvcmUoY3R4Mi5yb290Tm9kZXNbaTJdLGJlZm9yZU5vZGUpO1xyXG5cdFx0XHR9O1xyXG5cdFx0XHRjdHgwLnN1YnNjcmliZXJzLnB1c2goY3R4Mik7XHJcblx0XHRcdG9sZFtjdHgyLl9vbGRJbmRleF0gPSBudWxsO1xyXG5cdFx0fSBlbHNlIHtcclxuXHRcdFx0Ly9jcmVhdGUgbmV3XHJcblx0XHRcdGN0eDIgPSBhcHBlbmRJdGVtKG0yLCBbIHBhcmVudCwgYmVmb3JlTm9kZV0sIHRwbCwgY3R4MCk7XHJcblx0XHRcdGN0eDAuc3Vic2NyaWJlcnMucHVzaChjdHgyKTtcclxuXHRcdH1cclxuXHR9XHJcbn1cclxuXHJcbmZ1bmN0aW9uIG5leHRPbGRQb3Mob2xkLCBha3RQb3NPbGQpe1xyXG5cdHdoaWxlKGFrdFBvc09sZDxvbGQubGVuZ3RoKSB7XHJcblx0XHRjb25zdCB2ID0gb2xkW2FrdFBvc09sZF07XHJcblx0XHRpZih2IT1udWxsKXtcclxuXHRcdFx0aWYodi5fbmV3SW5kZXg+PTApIHJldHVybiBha3RQb3NPbGQ7XHJcblx0XHRcdHYuZGlzcG9zZSgpO1xyXG5cdFx0XHRvbGRbYWt0UG9zT2xkXSA9IG51bGw7XHJcblx0XHR9XHJcblx0XHRha3RQb3NPbGQrKztcclxuXHR9XHJcblx0cmV0dXJuIGFrdFBvc09sZDtcclxufVxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyBjOi9Vc2Vycy9wbS9Eb3dubG9hZHMvcmVhY3QvanMtZnJhbWV3b3JrLWJlbmNobWFyay9rbzYvc3JjL2Jsb2Nrcy9ibG9ja0ZvcmVhY2guanMiXSwibWFwcGluZ3MiOiI7Ozs7O0FBSUE7QUFDQTtBQUxBO0FBQ0E7QUFBQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///13\n");

/***/ }),
/* 14 */
/*!************************************************************************************!*\
  !*** c:/Users/pm/Downloads/react/js-framework-benchmark/ko6/src/blocks/blockIf.js ***!
  \************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.default = blockIf;\n\nvar _tkoObservable = __webpack_require__(/*! ../tko/tko.observable.js */ 0);\n\nvar _renderCtx = __webpack_require__(/*! ../renderCtx.js */ 1);\n\nfunction blockIf(stamp, tpl, ctx0, level) {\n\n\tif (tpl.children && tpl.children.length > 0 && tpl.attrs && tpl.attrs['value'] && tpl.attrs['value'].call) {\n\n\t\tvar value = tpl.attrs['value'];\n\t\tvar val2 = ctx0.expr(value);\n\t\tval2 = (0, _tkoObservable.unwrap)(val2) ? true : false;\n\n\t\t//check boolean expression change true/false\n\t\tif (val2 === ctx0.lastVal) return;\n\t\tctx0.lastVal = val2;\n\n\t\t_tkoObservable.dependencyDetection.ignore(function () {\n\n\t\t\t//remove old children tpl\n\t\t\tctx0.dispose();\n\n\t\t\tif (val2) {\n\t\t\t\t//render new children tpl\n\t\t\t\t(0, _renderCtx.renderCtx)(stamp, tpl.children, ctx0, 0);\n\t\t\t}\n\t\t});\n\t}\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTQuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vYzovVXNlcnMvcG0vRG93bmxvYWRzL3JlYWN0L2pzLWZyYW1ld29yay1iZW5jaG1hcmsva282L3NyYy9ibG9ja3MvYmxvY2tJZi5qcz9iYTE4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHVud3JhcCwgZGVwZW5kZW5jeURldGVjdGlvbiB9ICBmcm9tICcuLi90a28vdGtvLm9ic2VydmFibGUuanMnO1xyXG5pbXBvcnQgeyByZW5kZXJDdHggfSAgZnJvbSAnLi4vcmVuZGVyQ3R4LmpzJztcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGJsb2NrSWYoc3RhbXAsIHRwbCwgY3R4MCwgbGV2ZWwpe1xyXG5cclxuXHRpZih0cGwuY2hpbGRyZW4gJiYgdHBsLmNoaWxkcmVuLmxlbmd0aD4wICYmIHRwbC5hdHRycyAmJiB0cGwuYXR0cnNbJ3ZhbHVlJ10gJiYgdHBsLmF0dHJzWyd2YWx1ZSddLmNhbGwpe1xyXG5cdFx0XHJcblx0XHR2YXIgdmFsdWUgPSB0cGwuYXR0cnNbJ3ZhbHVlJ107XHJcblx0XHR2YXIgdmFsMiA9IGN0eDAuZXhwcih2YWx1ZSk7XHJcblx0XHR2YWwyID0gdW53cmFwKHZhbDIpID8gdHJ1ZSA6IGZhbHNlO1xyXG5cclxuXHRcdC8vY2hlY2sgYm9vbGVhbiBleHByZXNzaW9uIGNoYW5nZSB0cnVlL2ZhbHNlXHJcblx0XHRpZih2YWwyPT09Y3R4MC5sYXN0VmFsKSByZXR1cm47XHJcblx0XHRjdHgwLmxhc3RWYWwgPSB2YWwyO1xyXG5cclxuXHRcdGRlcGVuZGVuY3lEZXRlY3Rpb24uaWdub3JlKGZ1bmN0aW9uKCl7XHJcblx0XHJcblx0XHRcdC8vcmVtb3ZlIG9sZCBjaGlsZHJlbiB0cGxcclxuXHRcdFx0Y3R4MC5kaXNwb3NlKCk7XHJcblx0XHJcblx0XHRcdGlmKHZhbDIpe1xyXG5cdFx0XHRcdC8vcmVuZGVyIG5ldyBjaGlsZHJlbiB0cGxcclxuXHRcdFx0XHRyZW5kZXJDdHgoc3RhbXAsIHRwbC5jaGlsZHJlbiwgY3R4MCwgMCk7XHJcblx0XHRcdH1cclxuXHRcdH0pO1xyXG5cdH1cclxuXHJcbn1cclxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIGM6L1VzZXJzL3BtL0Rvd25sb2Fkcy9yZWFjdC9qcy1mcmFtZXdvcmstYmVuY2htYXJrL2tvNi9zcmMvYmxvY2tzL2Jsb2NrSWYuanMiXSwibWFwcGluZ3MiOiI7Ozs7O0FBR0E7QUFDQTtBQUpBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///14\n");

/***/ }),
/* 15 */
/*!**************************************************************************************!*\
  !*** c:/Users/pm/Downloads/react/js-framework-benchmark/ko6/src/blocks/blockHtml.js ***!
  \**************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.default = blockHtml;\n\nvar _tkoObservable = __webpack_require__(/*! ../tko/tko.observable.js */ 0);\n\nfunction blockHtml(stamp, tpl, ctx0, level) {\n\n\tif (tpl.attrs && tpl.attrs['value'] && tpl.attrs['value'].call) {\n\n\t\tvar value = tpl.attrs['value'];\n\t\tvar val2 = ctx0.expr(value);\n\t\tval2 = (0, _tkoObservable.unwrap)(val2);\n\n\t\t//remove old\n\t\tctx0.dispose();\n\n\t\tif (typeof val2 != 'undefined' && val2 != null) {\n\t\t\t//add new\n\t\t\tvar div = document.createElement('div');\n\t\t\tdiv.innerHTML = \"\" + val2;\n\t\t\tctx0.rootNodes = Array.prototype.slice.call(div.childNodes);\n\t\t\tfor (var i = 0; i < ctx0.rootNodes.length; i++) {\n\t\t\t\tstamp[0].insertBefore(ctx0.rootNodes[i], stamp[1]);\n\t\t\t}\n\t\t}\n\t}\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTUuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vYzovVXNlcnMvcG0vRG93bmxvYWRzL3JlYWN0L2pzLWZyYW1ld29yay1iZW5jaG1hcmsva282L3NyYy9ibG9ja3MvYmxvY2tIdG1sLmpzP2Y1MWUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdW53cmFwIH0gIGZyb20gJy4uL3Rrby90a28ub2JzZXJ2YWJsZS5qcyc7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBibG9ja0h0bWwoc3RhbXAsIHRwbCwgY3R4MCwgbGV2ZWwpe1xyXG5cclxuXHRpZih0cGwuYXR0cnMgJiYgdHBsLmF0dHJzWyd2YWx1ZSddICYmIHRwbC5hdHRyc1sndmFsdWUnXS5jYWxsKXtcclxuXHRcdFxyXG5cdFx0dmFyIHZhbHVlID0gdHBsLmF0dHJzWyd2YWx1ZSddO1xyXG5cdFx0dmFyIHZhbDIgPSBjdHgwLmV4cHIodmFsdWUpO1xyXG5cdFx0dmFsMiA9IHVud3JhcCh2YWwyKTtcclxuXHJcblx0XHQvL3JlbW92ZSBvbGRcclxuXHRcdGN0eDAuZGlzcG9zZSgpO1xyXG5cclxuXHRcdGlmKHR5cGVvZih2YWwyKSAhPSAndW5kZWZpbmVkJyAmJiB2YWwyICE9IG51bGwpe1xyXG5cdFx0XHQvL2FkZCBuZXdcclxuXHRcdFx0Y29uc3QgZGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcblx0XHRcdGRpdi5pbm5lckhUTUwgPSBcIlwiK3ZhbDI7XHJcblx0XHRcdGN0eDAucm9vdE5vZGVzID0gQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoZGl2LmNoaWxkTm9kZXMpO1xyXG5cdFx0XHRmb3IgKGxldCBpID0gMDsgaSA8IGN0eDAucm9vdE5vZGVzLmxlbmd0aDsgaSsrKSB7IFxyXG5cdFx0XHQgICAgc3RhbXBbMF0uaW5zZXJ0QmVmb3JlKGN0eDAucm9vdE5vZGVzW2ldLCBzdGFtcFsxXSk7XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHJcblx0fVxyXG59XHJcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyBjOi9Vc2Vycy9wbS9Eb3dubG9hZHMvcmVhY3QvanMtZnJhbWV3b3JrLWJlbmNobWFyay9rbzYvc3JjL2Jsb2Nrcy9ibG9ja0h0bWwuanMiXSwibWFwcGluZ3MiOiI7Ozs7O0FBRUE7QUFDQTtBQUhBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///15\n");

/***/ }),
/* 16 */
/*!******************************************************************************************!*\
  !*** c:/Users/pm/Downloads/react/js-framework-benchmark/ko6/src/blocks/blockTemplate.js ***!
  \******************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.default = blockTemplate;\n\nvar _tkoObservable = __webpack_require__(/*! ../tko/tko.observable.js */ 0);\n\nvar _renderCtx = __webpack_require__(/*! ../renderCtx.js */ 1);\n\nfunction blockTemplate(stamp, tpl, ctx0, level) {\n\n\tif (tpl.attrs && tpl.attrs['value'] && tpl.attrs['value'].call) {\n\n\t\tvar value = tpl.attrs['value'];\n\t\tvar val2 = ctx0.expr(value);\n\t\tval2 = (0, _tkoObservable.unwrap)(val2);\n\n\t\t_tkoObservable.dependencyDetection.ignore(function () {\n\n\t\t\t//remove old template\n\t\t\tctx0.dispose();\n\n\t\t\tif (val2) {\n\t\t\t\t//render value tpl\n\t\t\t\t(0, _renderCtx.renderCtx)(stamp, val2, ctx0, 0);\n\t\t\t}\n\t\t});\n\t}\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTYuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vYzovVXNlcnMvcG0vRG93bmxvYWRzL3JlYWN0L2pzLWZyYW1ld29yay1iZW5jaG1hcmsva282L3NyYy9ibG9ja3MvYmxvY2tUZW1wbGF0ZS5qcz85NTVkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHVud3JhcCwgZGVwZW5kZW5jeURldGVjdGlvbiB9ICBmcm9tICcuLi90a28vdGtvLm9ic2VydmFibGUuanMnO1xyXG5pbXBvcnQgeyByZW5kZXJDdHggfSAgZnJvbSAnLi4vcmVuZGVyQ3R4LmpzJztcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGJsb2NrVGVtcGxhdGUoc3RhbXAsIHRwbCwgY3R4MCwgbGV2ZWwpe1xyXG5cclxuXHRpZih0cGwuYXR0cnMgJiYgdHBsLmF0dHJzWyd2YWx1ZSddICYmIHRwbC5hdHRyc1sndmFsdWUnXS5jYWxsKXtcclxuXHRcdFxyXG5cdFx0dmFyIHZhbHVlID0gdHBsLmF0dHJzWyd2YWx1ZSddO1xyXG5cdFx0dmFyIHZhbDIgPSBjdHgwLmV4cHIodmFsdWUpO1xyXG5cdFx0dmFsMiA9IHVud3JhcCh2YWwyKTtcclxuXHJcblx0XHRkZXBlbmRlbmN5RGV0ZWN0aW9uLmlnbm9yZShmdW5jdGlvbigpe1xyXG5cclxuXHRcdFx0Ly9yZW1vdmUgb2xkIHRlbXBsYXRlXHJcblx0XHRcdGN0eDAuZGlzcG9zZSgpO1xyXG5cclxuXHRcdFx0aWYodmFsMil7XHJcblx0XHRcdFx0Ly9yZW5kZXIgdmFsdWUgdHBsXHJcblx0XHRcdFx0cmVuZGVyQ3R4KHN0YW1wLCB2YWwyLCBjdHgwLCAwKTtcclxuXHRcdFx0fVxyXG5cclxuXHRcdH0pO1xyXG5cclxuXHR9XHJcblxyXG59XHJcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyBjOi9Vc2Vycy9wbS9Eb3dubG9hZHMvcmVhY3QvanMtZnJhbWV3b3JrLWJlbmNobWFyay9rbzYvc3JjL2Jsb2Nrcy9ibG9ja1RlbXBsYXRlLmpzIl0sIm1hcHBpbmdzIjoiOzs7OztBQUdBO0FBQ0E7QUFKQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUVBO0FBRUEiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///16\n");

/***/ }),
/* 17 */
/*!************************************************************************************!*\
  !*** c:/Users/pm/Downloads/react/js-framework-benchmark/ko6/src/bindings/click.js ***!
  \************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _tkoObservable = __webpack_require__(/*! ../tko/tko.observable.js */ 0);\n\nexports.default = {\n\tinit: function init(el, val) {\n\t\tval = (0, _tkoObservable.unwrap)(val);\n\t\tif (val.call) el.addEventListener(\"click\", val);\n\t}\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTcuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vYzovVXNlcnMvcG0vRG93bmxvYWRzL3JlYWN0L2pzLWZyYW1ld29yay1iZW5jaG1hcmsva282L3NyYy9iaW5kaW5ncy9jbGljay5qcz82OGE4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHVud3JhcCB9IGZyb20gJy4uL3Rrby90a28ub2JzZXJ2YWJsZS5qcyc7XHJcblxyXG5leHBvcnQgZGVmYXVsdCB7XHJcblx0aW5pdDogZnVuY3Rpb24oZWwsIHZhbCl7XHJcblx0XHR2YWwgPSB1bndyYXAodmFsKTtcclxuXHRcdGlmKHZhbC5jYWxsKSBlbC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgdmFsKTtcclxuXHR9XHJcbn07XHJcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyBjOi9Vc2Vycy9wbS9Eb3dubG9hZHMvcmVhY3QvanMtZnJhbWV3b3JrLWJlbmNobWFyay9rbzYvc3JjL2JpbmRpbmdzL2NsaWNrLmpzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUpBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///17\n");

/***/ })
/******/ ]);